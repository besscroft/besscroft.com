<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bess&#39;s Blog</title>
  
  <subtitle>武汉加油！中国加油！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.52bess.com/"/>
  <updated>2020-12-12T10:08:57.800Z</updated>
  <id>https://blog.52bess.com/</id>
  
  <author>
    <name>Bess Croft</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>给vue-admin-template添加tagsView</title>
    <link href="https://blog.52bess.com/posts/2020/vue-add-tagsview.html"/>
    <id>https://blog.52bess.com/posts/2020/vue-add-tagsview.html</id>
    <published>2020-12-12T08:57:33.000Z</published>
    <updated>2020-12-12T10:08:57.800Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前规划着做一做自己的比较正式一点的项目，基于SpringBoot开发的前后端分离项目，但是自己本身只是Java后端为主的，所以前端功底并不好。于是就采用了<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BhbkppYUNoZW4vdnVlLWVsZW1lbnQtYWRtaW4=">vue-element-admin<i class="fa fa-external-link-alt"></i></span>的基础模板<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BhbkppYUNoZW4vdnVlLWFkbWluLXRlbXBsYXRl">vue-admin-template<i class="fa fa-external-link-alt"></i></span>来进行开发。同时也可以基于自己的需要，增加很多组件上去。</p><a id="more"></a><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="官方案例的对比"><a href="#官方案例的对比" class="headerlink" title="官方案例的对比"></a>官方案例的对比</h3><div class="tabs" id="选项卡-1"><ul class="nav-tabs"><li class="tab active"><a href="#选项卡-1-1">无tagsView</a></li><li class="tab"><a href="#选项卡-1-2">有tagsView</a></li></ul><div class="tab-content"><div class="tab-pane active" id="选项卡-1-1"><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="vue-add-tagsview/vue-add-tagsview01.png"></div><div class="tab-pane" id="选项卡-1-2"><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="vue-add-tagsview/vue-add-tagsview02.png"></div></div></div><p>我们可以清楚的看到，有无tagsView的区别。</p><h3 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h3><p>既然需要这个组件，那么就添加上去吧，好在官方的完整解决方案中，是有这个代码的。</p><h4 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h4><p>我们需要先从<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BhbkppYUNoZW4vdnVlLWVsZW1lbnQtYWRtaW4=">vue-element-admin<i class="fa fa-external-link-alt"></i></span>复制一些必要的文件过来。</p><ul><li><code>src/layout/components/TagsView</code> 注意，这是一整个文件夹，全部复制进去。地址： <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BhbkppYUNoZW4vdnVlLWVsZW1lbnQtYWRtaW4vdHJlZS9tYXN0ZXIvc3JjL2xheW91dC9jb21wb25lbnRz">https://github.com/PanJiaChen/vue-element-admin/tree/master/src/layout/components<i class="fa fa-external-link-alt"></i></span></li></ul><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="vue-add-tagsview/vue-add-tagsview03.png" alt></p><ul><li><code>src/store/modules/tagsView.js</code>，复制这个文件到相应的位置，不知道位置的，就看这个文件的路径。。。地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BhbkppYUNoZW4vdnVlLWVsZW1lbnQtYWRtaW4vYmxvYi9tYXN0ZXIvc3JjL3N0b3JlL21vZHVsZXMvdGFnc1ZpZXcuanM=">https://github.com/PanJiaChen/vue-element-admin/blob/master/src/store/modules/tagsView.js<i class="fa fa-external-link-alt"></i></span></li></ul><h4 id="修改文件"><a href="#修改文件" class="headerlink" title="修改文件"></a>修改文件</h4><ul><li>修改<code>vue-admin-template\src\layout\components\AppMain.vue</code></li></ul><p>修改如下代码：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="vue-add-tagsview/vue-add-tagsview04.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;section class&#x3D;&quot;app-main&quot;&gt;</span><br><span class="line">    &lt;transition name&#x3D;&quot;fade-transform&quot; mode&#x3D;&quot;out-in&quot;&gt;</span><br><span class="line">      &lt;keep-alive :include&#x3D;&quot;cachedViews&quot;&gt;</span><br><span class="line">&lt;!--        &lt;router-view :key&#x3D;&quot;key&quot; &#x2F;&gt;--&gt;</span><br><span class="line">        &lt;router-view&gt;&lt;&#x2F;router-view&gt;</span><br><span class="line">      &lt;&#x2F;keep-alive&gt;</span><br><span class="line">    &lt;&#x2F;transition&gt;</span><br><span class="line">  &lt;&#x2F;section&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br></pre></td></tr></table></figure><p>修改如下代码：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="vue-add-tagsview/vue-add-tagsview05.png" alt></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">'AppMain'</span>,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    cachedViews() &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.$store.state.tagsView.cachedViews</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ,</span></span><br><span class="line">    <span class="comment">// key() &#123;</span></span><br><span class="line">    <span class="comment">//   return this.$route.path</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新增如下代码：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="vue-add-tagsview/vue-add-tagsview06.png" alt></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.hasTagsView</span> &#123;</span><br><span class="line">  .app-main &#123;</span><br><span class="line">    <span class="comment">/* 84 = navbar + tags-view = 50 + 34 */</span></span><br><span class="line">    <span class="selector-tag">min-height</span>: <span class="selector-tag">calc</span>(100<span class="selector-tag">vh</span> <span class="selector-tag">-</span> 84<span class="selector-tag">px</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.fixed-header</span>+<span class="selector-class">.app-main</span> &#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">84px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改<code>vue-admin-template\src\layout\components\index.js</code></li></ul><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="vue-add-tagsview/vue-add-tagsview08.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export &#123; default as TagsView &#125; from &#39;.&#x2F;TagsView&#39;</span><br></pre></td></tr></table></figure><ul><li>修改<code>src\layout\index.vue</code></li></ul><p>修改如下代码：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="vue-add-tagsview/vue-add-tagsview09.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div :class&#x3D;&quot;classObj&quot; class&#x3D;&quot;app-wrapper&quot;&gt;</span><br><span class="line">    &lt;div v-if&#x3D;&quot;device&#x3D;&#x3D;&#x3D;&#39;mobile&#39;&amp;&amp;sidebar.opened&quot; class&#x3D;&quot;drawer-bg&quot; @click&#x3D;&quot;handleClickOutside&quot; &#x2F;&gt;</span><br><span class="line">    &lt;sidebar class&#x3D;&quot;sidebar-container&quot; &#x2F;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;main-container&quot;&gt;</span><br><span class="line">      &lt;div :class&#x3D;&quot;&#123;&#39;fixed-header&#39;:fixedHeader&#125;&quot;&gt;</span><br><span class="line">        &lt;navbar &#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;tags-view &#x2F;&gt;</span><br><span class="line">      &lt;app-main &#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br></pre></td></tr></table></figure><p>修改如下代码：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="vue-add-tagsview/vue-add-tagsview10.png" alt></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Navbar, Sidebar, AppMain, TagsView &#125; <span class="keyword">from</span> <span class="string">'./components'</span></span><br></pre></td></tr></table></figure><p>修改如下代码：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="vue-add-tagsview/vue-add-tagsview11.png" alt></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">components: &#123;</span><br><span class="line">    Navbar,</span><br><span class="line">    Sidebar,</span><br><span class="line">    AppMain,</span><br><span class="line">    TagsView</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改<code>src\settings.js</code></li></ul><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="vue-add-tagsview/vue-add-tagsview12.png" alt></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@type <span class="type">&#123;boolean&#125;</span> </span>true | false</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description </span>是否开启标签栏缓存</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tagsView: <span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li>修改<code>src\store\getters.js</code></li></ul><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="vue-add-tagsview/vue-add-tagsview13.png" alt></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">  sidebar: <span class="function"><span class="params">state</span> =&gt;</span> state.app.sidebar,</span><br><span class="line">  device: <span class="function"><span class="params">state</span> =&gt;</span> state.app.device,</span><br><span class="line">  token: <span class="function"><span class="params">state</span> =&gt;</span> state.user.token,</span><br><span class="line">  avatar: <span class="function"><span class="params">state</span> =&gt;</span> state.user.avatar,</span><br><span class="line">  name: <span class="function"><span class="params">state</span> =&gt;</span> state.user.name,</span><br><span class="line">  visitedViews: <span class="function"><span class="params">state</span> =&gt;</span> state.tagsView.visitedViews,</span><br><span class="line">  cachedViews: <span class="function"><span class="params">state</span> =&gt;</span> state.tagsView.cachedViews</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> getters</span><br></pre></td></tr></table></figure><ul><li>修改<code>src/store/index.js</code></li></ul><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="vue-add-tagsview/vue-add-tagsview14.png" alt></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> user <span class="keyword">from</span> <span class="string">'./modules/user'</span></span><br><span class="line"><span class="keyword">import</span> tagsView <span class="keyword">from</span> <span class="string">'./modules/tagsView'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">  modules: &#123;</span><br><span class="line">    app,</span><br><span class="line">    settings,</span><br><span class="line">    tagsView,</span><br><span class="line">    user</span><br><span class="line">  &#125;,</span><br><span class="line">  getters</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>修改<code>src/store/modules/settings.js</code></li></ul><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="vue-add-tagsview/vue-add-tagsview15.png" alt></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> defaultSettings <span class="keyword">from</span> <span class="string">'@/settings'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; showSettings, tagsView, fixedHeader, sidebarLogo &#125; = defaultSettings</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  showSettings: showSettings,</span><br><span class="line">  tagsView: tagsView,</span><br><span class="line">  fixedHeader: fixedHeader,</span><br><span class="line">  sidebarLogo: sidebarLogo</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至此，我们就把新功能添加上去啦！😉</p><h3 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h3><p>现在我们来看看添加后的效果吧！</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="vue-add-tagsview/vue-add-tagsview16.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;之前规划着做一做自己的比较正式一点的项目，基于SpringBoot开发的前后端分离项目，但是自己本身只是Java后端为主的，所以前端功底并不好。于是就采用了&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9naXRodWIuY29tL1BhbkppYUNoZW4vdnVlLWVsZW1lbnQtYWRtaW4=&quot;&gt;vue-element-admin&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;的基础模板&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9naXRodWIuY29tL1BhbkppYUNoZW4vdnVlLWFkbWluLXRlbXBsYXRl&quot;&gt;vue-admin-template&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;来进行开发。同时也可以基于自己的需要，增加很多组件上去。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://blog.52bess.com/categories/Linux/"/>
    
    
      <category term="Vue" scheme="https://blog.52bess.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>【玩转腾讯云】用轻量应用服务器搭建网站</title>
    <link href="https://blog.52bess.com/posts/2020/lighthouse.html"/>
    <id>https://blog.52bess.com/posts/2020/lighthouse.html</id>
    <published>2020-06-29T12:29:56.000Z</published>
    <updated>2020-06-29T12:56:34.908Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>不少小伙伴应该知道，腾讯云正在内测轻量应用服务器，而且马上就要公测了！我提前申请到了一台内测机器，那就来告诉大家，在公测后购买腾讯云轻量应用服务器之后如何玩转它吧，比如搭建静态或者动态网站！</p><a id="more"></a><h2 id="什么是轻量应用服务器-Lighthouse"><a href="#什么是轻量应用服务器-Lighthouse" class="headerlink" title="什么是轻量应用服务器 Lighthouse"></a>什么是轻量应用服务器 Lighthouse</h2><ul><li>这里是文档上的介绍，让我们先了解下！</li></ul><p><span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9wcm9kdWN0L2xpZ2h0aG91c2U=">轻量应用服务器<i class="fa fa-external-link-alt"></i></span>（Lighthouse）是一种易于使用和管理、适合承载轻量级业务负载的云服务器，能帮助个人和企业在云端快速构建网站、博客、电商、论坛等各类应用以及开发测试环境，并提供应用部署、配置和管理的全流程一站式服务，极大提升构建应用的体验，是您使用腾讯云的最佳入门途径。</p><h2 id="购买"><a href="#购买" class="headerlink" title="购买"></a>购买</h2><p>先去<span class="exturl" data-url="aHR0cHM6Ly9jb25zb2xlLmNsb3VkLnRlbmNlbnQuY29tL2xpZ2h0aG91c2UvaW5zdGFuY2UvaW5kZXg=">控制台<i class="fa fa-external-link-alt"></i></span>找到轻量应用服务器，然后按需求购买。可以选择不同的地域、镜像、套餐、时长和数量等。这里我申请到的内测机型是【上海区域、1核2G、系统盘40G，峰值5Mbps、1000G流量的套餐】。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse001.png" alt></p><p>我们购买成功后，来到轻量应用服务器控制台，打开详情页面后，需要先【重置密码】或者【绑定密钥】。由于是作演示用，所以我就选择了【重置密码】。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse002.png" alt></p><p>然后打开XShell 6，新建会话，自定义名称，然后在【主机】里面输入【IP地址】。然后进行连接，并输入用户名和密码，连上去之后如图所示。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse003.png" alt></p><h2 id="搭建网站"><a href="#搭建网站" class="headerlink" title="搭建网站"></a>搭建网站</h2><p>这里我推荐使用BT面板，因为我这台轻量服务器的系统是CentOS，所以就需要自己安装了，当然，你也可以在控制台直接更换成BT面板的应用镜像，非常方便有木有！！！</p><ul><li>更新系统和软件包</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update -y</span><br></pre></td></tr></table></figure><ul><li>安装一些软件包</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y curl vim wget unzip git nano</span><br></pre></td></tr></table></figure><ul><li>安装BT面板</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse004.png" alt></p><p>中间会弹出一个提示，输入y，并回车，之后等待一会儿就好啦！</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse005.png" alt></p><p>我们可以看到，安装速度真的是很快啊，上面的Bt-Panel、username和password分别对应公网访问地址、用户名和密码。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse006.png" alt></p><p>然后我们需要去控制台的防火墙，开放8888端口。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse007.png" alt></p><p>进入到BT面板之后，就安装推荐的LNMP即可，具体的版本其实可以根据自己的实际情况来看。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse008.png" alt></p><p>然后等待安装就行了。</p><h3 id="搭建静态网站"><a href="#搭建静态网站" class="headerlink" title="搭建静态网站"></a>搭建静态网站</h3><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse009.png" alt></p><p>安装好之后，选择左边的【网站】，然后点击【添加站点】，如上图，在域名这一栏，填上你的域名。当然，得先去把域名解析到当前的ip地址，而且还得先备案哦，在腾讯云备案，还是比较方便的。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse010.png" alt></p><p>然后在最右边，选择刚创建好的网站的【设置】。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse011.png" alt></p><p>然后可以一键申请SSL证书，还是比较方便的，其它的就按照自己的需求来。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse012.png" alt></p><p>在【文件】里面，可以管理和上传你自己的代码和静态文件资源。</p><p>到这里，没啥问题的话，网站就已经可以访问了！</p><h3 id="搭建动态网站"><a href="#搭建动态网站" class="headerlink" title="搭建动态网站"></a>搭建动态网站</h3><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse013.png" alt></p><p>BT面板也可以搭建动态网站，你可以按照刚才搭建静态网站的方法，上传自己的安装包，或者去【软件商店】安装【宝塔一键部署源码1.1】。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse014.png" alt></p><p>安装好之后，可以用这个插件一键部署源码，比如说我们要安装wordpress博客系统，找到之后，选择一键部署就行了。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse015.png" alt></p><p>然后在相应的空里面填就好了，域名还是一样，要提前解析好，其他的一般默认即可。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse016.png" alt></p><p>部署好之后，访问站点，上面的数据库账号资料后面会用的到。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse017.png" alt></p><p>点击【现在就开始】，进入下一步！</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse018.png" alt></p><p>在这一步，需要填好刚才准备的信息，然后点击提交！</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse019.png" alt></p><p>进行安装！</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse020.png" alt></p><p>然后根据自己的情况，填上相应的信息，注意密码不要用弱密码，我这里只是为了演示！</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse021.png" alt></p><p>成功之后，登录就能进到后台啦！</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse022.png" alt></p><p>然后就自己去探索功能吧！</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="lighthouse/lighthouse023.png" alt></p><p>至此，动态网站已经搭建完成！</p><h2 id="轻量服务器的应用场景"><a href="#轻量服务器的应用场景" class="headerlink" title="轻量服务器的应用场景"></a>轻量服务器的应用场景</h2><p>腾讯云轻量应用服务器，除了可以搭建网站，还可以干很多事情哦！</p><p>主要的应用场景：</p><ul><li>网站搭建</li><li>Web 应用服务</li><li>快速搭建开发测试环境</li><li>云端学习环境</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;不少小伙伴应该知道，腾讯云正在内测轻量应用服务器，而且马上就要公测了！我提前申请到了一台内测机器，那就来告诉大家，在公测后购买腾讯云轻量应用服务器之后如何玩转它吧，比如搭建静态或者动态网站！&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://blog.52bess.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://blog.52bess.com/tags/Linux/"/>
    
      <category term="玩转腾讯云" scheme="https://blog.52bess.com/tags/%E7%8E%A9%E8%BD%AC%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
      <category term="博客" scheme="https://blog.52bess.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>我和我的博客的过去、现在与未来</title>
    <link href="https://blog.52bess.com/posts/2020/newblog.html"/>
    <id>https://blog.52bess.com/posts/2020/newblog.html</id>
    <published>2020-04-30T07:17:13.000Z</published>
    <updated>2020-04-30T09:35:03.282Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>博客原来的样式，是去年五一晚上熬夜搞出来的，当时觉得蛮漂亮，但是看久了，就觉得乏了！但这还不是我要重构的原因，博客代码冗余、加载速度慢、载入资源多等等，迫使我对整个博客进行了重构和魔改！</p><a id="more"></a><h2 id="过去"><a href="#过去" class="headerlink" title="过去"></a>过去</h2><p>在我第一次使用hexo时，尝试过很多主题，但最终还是回到了<span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0Lmlpc3NuYW4uY29tLw==">NexT<i class="fa fa-external-link-alt"></i></span>主题。并且一用就是2年多了，期间经历了多次重大的更新和改进，从此也开始了自己的魔改之路。NexT主题，自带的样式虽然在很多人看来并不好看，但是它的功能非常强大，只要你想(不懒)，你几乎可以用它实现静态博客能实现的所有功能，不是说别的主题不行，而是NexT魔改起来对我而言更舒服！</p><p>第一次自己建站写博客，是用的<span class="exturl" data-url="aHR0cHM6Ly93b3JkcHJlc3Mub3JnLw==">WordPress<i class="fa fa-external-link-alt"></i></span>，确实很强大，但是在国内用起来也不是特别舒服。尤其是现在，国内用户的体验大不如以前了，并且已经打不开了。我知道，这些都不是事儿，我放弃wordpress的原因是，它太吃性能了！！！不是所有人都能承担的起这个费用的，因为没有必要。后来上网寻找替代方案，改用静态博客，最后选择了<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuLw==">Hexo<i class="fa fa-external-link-alt"></i></span>。搭建的方式也逐步变得多样化，从单一的部署，变成多线部署、多解析，从原生加载到CDN加速和对象存储，从第三方服务到自建再到第三方等等。在去年，我也尝试了新的动态博客方案——<span class="exturl" data-url="aHR0cHM6Ly90eXBlY2hvLm9yZy8=">Typecho<i class="fa fa-external-link-alt"></i></span>和<span class="exturl" data-url="aHR0cHM6Ly9oYWxvLnJ1bi8=">Halo<i class="fa fa-external-link-alt"></i></span>，而且Halo可是用Java写的呢，这跟我的专业也就一样啦！</p><p>早些年，写日记这种东西，都是日记本。后来就慢慢的尝试在网上写日记，尝试了很多第三方的平台来写日记。然后慢慢的熟知了博客这个东西，也就想有一个自己的博客，也就有了以上一些经历。现在静态博客用的还是Hexo，动态博客用的是Typecho，第三方服务正在用<span class="exturl" data-url="aHR0cHM6Ly93d3cueXVxdWUuY29tL2xvZ2luP3BsYXRmb3JtPXdlY2hhdCZpbnZpdGVUb2tlbj0zNTdkZjY1ZTMwNjE2NzNlM2IwM2EwODBmYWRlMmU0OTlkMDFhYjY1YzAxZGUxY2Q0ZTBmMTFjYzZiOWM5Mzhi">语雀<i class="fa fa-external-link-alt"></i></span>和<span class="exturl" data-url="aHR0cHM6Ly93d3cueWlueGlhbmcuY29tLw==">印象笔记<i class="fa fa-external-link-alt"></i></span>，这里我强烈推荐一波语雀，是真的好用，目前正在逐步从印象笔记迁移到语雀！</p><h2 id="现在"><a href="#现在" class="headerlink" title="现在"></a>现在</h2><p>我一直都有写日记的习惯(别问我为什么没看到，我想没有多少人会把日记放网上给人看的)，偶尔也会写写学习笔记、一些感想等，但是很少放到网上。我觉得，经常用文字记录下自己的学习、成长与生活，其实是非常好的一个习惯。而且用电脑写作，能够有很多手写所没有的好处，比如说用Markdown书写不仅美观、而且排版也更好看，能够在文章中插入流媒体、表格等，分类页更加方便。但最大的缺点就是，原本写字就不好看。。。长时间不握笔，就。。。</p><p>来聊聊这次重构博客吧，我并不是在原来的基础上更改的，而是去下了最新的Hexo和NexT主题，在本地从零开始边预览边魔改的，目前用的是7.8.0版本。用<code>chrome</code> + <code>git bash</code> + <code>VS Code</code>，慢慢的修改，经历了无数次的报错之后，终于搞定，chrome起到的最大的作用还不是预览网页，而是用搜索引擎排错🤣。我基本上删除了主题中所有我很难用的上的代码和插件，最大程度的减少多余的代码带来的文件大小过大的问题。NexT主题长时间不更新的话，它的源码也会改动特别大，需要重新看一遍才行。新版本中，会删掉一些模块，但是其中一些东西自己很喜欢怎么办？直接去GitHub上面的<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0">NexT的repo<i class="fa fa-external-link-alt"></i></span>，查看commits的提交记录，并对照着自己修改代码即可！因为像这样的开源主题，是需要照顾到很多人的，如果只是自己单一的需求，自己添加代码就好啦！😅然后把博客内的颜色、样式等，全部改成了自己比较喜欢的风格。修改了部分模块的逻辑，以及修改了部分页面的布局等。</p><p>可以简单看下前后的区别，我只截图了首页的头部的一小块部分，如果之前来访过的小伙伴，应该是能看到整站的大改的，后期考虑下做个以前的镜像。如果还留着我发的软件的小伙伴，直接在电脑上打开软件，就能第一时间看到啦！</p><div class="tabs" id="选项卡-1"><ul class="nav-tabs"><li class="tab active"><a href="#选项卡-1-1">重构前</a></li><li class="tab"><a href="#选项卡-1-2">重构后</a></li></ul><div class="tab-content"><div class="tab-pane active" id="选项卡-1-1"><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="newblog/newblog01.png"></div><div class="tab-pane" id="选项卡-1-2"><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="newblog/newblog02.png"></div></div></div><h2 id="未来"><a href="#未来" class="headerlink" title="未来"></a>未来</h2><p><strong>我为什么要写博客？</strong></p><p>其实也不仅仅只是博客，可以有学习笔记、日记等更多的东西，这里用博客统称。</p><p>说的笼统一点：<strong>用博客的形式来记录下你有价值的思考，会带来很多好处，却没有任何明显的坏处</strong>。这就跟学习时做笔记和思维导图一样，自己总结记录下来，才能够有收获和成长。我平常就是在做笔记和思维导图的时候，能够发现自己还有哪些知识点没有掌握好，这也是一种查漏补缺的方式。试想一下，我们为什么不少刷一下抖音、少看一集电视剧、少打一把游戏，然后去写作呢？它能给你带来的提升是巨大的！每次在写学习笔记的时候，自己总结不出来、或者发现的没学好的地方，我都会去查阅相关资料，久而久之，养成了习惯，所以说：<strong>书写是为了更好的思考</strong>。</p><p>现在我的写作内容，以学习笔记偏多，没办法，这不是快毕业了嘛😝我写博客最开始就是希望，记录自己的成长与生活，提升自己的能力，能够交到一群志同道合的朋♂友。当然，我也有看过 <code>A Declaration of the Independence of Cyberspace</code>，即《赛博空间独立宣言》。</p><p>以后我也会坚持写博客，谁也无法预料以后博客的形态会发生什么样的变化，但是我觉得，博客的中心，永远都是创作者的内容输出，这一点应该是不会变化的，至少很难改变。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;博客原来的样式，是去年五一晚上熬夜搞出来的，当时觉得蛮漂亮，但是看久了，就觉得乏了！但这还不是我要重构的原因，博客代码冗余、加载速度慢、载入资源多等等，迫使我对整个博客进行了重构和魔改！&lt;/p&gt;
    
    </summary>
    
    
      <category term="Blog" scheme="https://blog.52bess.com/categories/Blog/"/>
    
    
      <category term="Hexo" scheme="https://blog.52bess.com/tags/Hexo/"/>
    
      <category term="Blog" scheme="https://blog.52bess.com/tags/Blog/"/>
    
      <category term="NexT" scheme="https://blog.52bess.com/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>世纪互联OneDrive搭建OneIndex</title>
    <link href="https://blog.52bess.com/posts/2020/onedrivecn.html"/>
    <id>https://blog.52bess.com/posts/2020/onedrivecn.html</id>
    <published>2020-04-18T13:57:07.000Z</published>
    <updated>2020-04-29T08:50:41.437Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>众所周知，国际版OneDrive在国内的访问速度并不理想(多线程下载除外)，所以我们就需要相对而言速度更快的世纪互联版OneDrive来体验体验了。</p><a id="more"></a><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>首先，得有一个世纪互联版的OneDrive，其次一个域名和一台vps。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="登录Azure-Active-Directory"><a href="#登录Azure-Active-Directory" class="headerlink" title="登录Azure Active Directory"></a>登录Azure Active Directory</h3><p>登录<span class="exturl" data-url="aHR0cHM6Ly9wb3J0YWwuYXp1cmUuY24v">Azure Active Directory<i class="fa fa-external-link-alt"></i></span>注册应用。选择<code>应用注册</code></p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="onedrivecn/onedrivecn01.png" alt></p><p>然后我们点击<code>新注册</code></p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="onedrivecn/onedrivecn02.png" alt></p><p>这里的名称可以随便取，然后选择受支持的账户类型为<code>任何组织目录(任何Azure AD 目录- 多租户)中的账户</code>，回调地址填你的网站的地址，然后单击注册。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="onedrivecn/onedrivecn03.png" alt></p><p>然后我们能看到<code>应用程序(客户端)ID</code>，这个就是你的应用ID。然后接下来要进行<code>应用机密配置</code>和<code>API权限配置</code>。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="onedrivecn/onedrivecn04.png" alt></p><p>先进行<code>应用机密配置</code>，选择<code>新客户端密码</code>，然后自己随意即可！</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="onedrivecn/onedrivecn05.png" alt></p><p>然后复制你的<code>应用机密</code>并保存，注意，<strong>只能复制一次！！！</strong></p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="onedrivecn/onedrivecn06.png" alt></p><p>然后配置<code>API权限</code>，勾选<code>Files.ReadWrite</code>和<code>Files.ReadWrite.All</code>即可。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="onedrivecn/onedrivecn07.png" alt></p><h3 id="安装OneIndex"><a href="#安装OneIndex" class="headerlink" title="安装OneIndex"></a>安装OneIndex</h3><p>这一步需要到vps上进行，项目是这个👉<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2x6eDg1ODk1NjEvb25laW5kZXgyLWlu">oneindex2-in<i class="fa fa-external-link-alt"></i></span></p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="onedrivecn/onedrivecn08.png" alt></p><blockquote><p>设置config/、config/base.php 、 cache/ 可读写</p><p>复制刚才的<code>应用程序(客户端) ID</code>到<code>应用ID</code>栏中</p><p>复制刚才的<code>应用机密到oneindex</code>的<code>应用机密</code>栏中</p><p>其中配置参数为世纪互联前缀<code>https://**xxx-my**.sharepoint.cn</code>填写加粗部分<code>xxx-my</code></p><p>回调地址填写你的网址，例如<code>https://cdn.baidu.com</code></p></blockquote><h3 id="特殊文件实现功能"><a href="#特殊文件实现功能" class="headerlink" title="特殊文件实现功能"></a>特殊文件实现功能</h3><p><code>README.md</code>、<code>HEAD.md</code> 、 <code>.password</code>特殊文件使用</p><p>可以参考<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RvbndhL29uZWluZGV4L3RyZWUvZmlsZXM=">https://github.com/donwa/oneindex/tree/files<i class="fa fa-external-link-alt"></i></span></p><p><strong>在文件夹底部添加说明:</strong></p><blockquote><p>在 OneDrive 的文件夹中添加<code>README.md</code>文件，使用 Markdown 语法。</p></blockquote><p><strong>在文件夹头部添加说明:</strong> </p><blockquote><p>在 OneDrive 的文件夹中添加<code>HEAD.md</code> 文件，使用 Markdown 语法。</p></blockquote><p><strong>加密文件夹:</strong> </p><blockquote><p>在 OneDrive 的文件夹中添加<code>.password</code>文件，填入密码，密码不能为空。  </p></blockquote><p><strong>直接输出网页:</strong></p><blockquote><p>在 OneDrive 的文件夹中添加<code>index.html</code> 文件，程序会直接输出网页而不列目录。<br>配合 文件展示设置-直接输出 效果更佳。</p></blockquote><h3 id="Nginx伪静态设置"><a href="#Nginx伪静态设置" class="headerlink" title="Nginx伪静态设置"></a>Nginx伪静态设置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">if (!-f $request_filename)&#123;</span><br><span class="line">    set $rule_0 1$rule_0;</span><br><span class="line">&#125;</span><br><span class="line">if (!-d $request_filename)&#123;</span><br><span class="line">    set $rule_0 2$rule_0;</span><br><span class="line">&#125;</span><br><span class="line">if ($rule_0 = "21")&#123;</span><br><span class="line">rewrite ^/(.*)$ /index.php?/$1 last;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="命令行功能"><a href="#命令行功能" class="headerlink" title="命令行功能"></a>命令行功能</h3><p>仅能在<code>php cli</code>模式下运行</p><p><strong>清除缓存:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php one.php cache:clear</span><br></pre></td></tr></table></figure><p><strong>刷新缓存:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php one.php cache:refresh</span><br></pre></td></tr></table></figure><p><strong>刷新令牌:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php one.php token:refresh</span><br></pre></td></tr></table></figure><p><strong>上传文件:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php one.php upload:file 本地文件 [onedrive文件]</span><br></pre></td></tr></table></figure><p><strong>上传文件夹:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php one.php upload:folder 本地文件夹 [OneDrive文件夹]</span><br></pre></td></tr></table></figure><p><strong>例如：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;上传demo.zip 到OneDrive 根目录  </span><br><span class="line">php one.php upload:file demo.zip  </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;上传demo.zip 到OneDrive &#x2F;test&#x2F;目录  </span><br><span class="line">php one.php upload:file demo.zip &#x2F;test&#x2F;  </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;上传demo.zip 到OneDrive &#x2F;test&#x2F;目录并将其命名为 d.zip  </span><br><span class="line">php one.php upload:file demo.zip &#x2F;test&#x2F;d.zip  </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;上传up&#x2F; 到OneDrive &#x2F;test&#x2F; 目录  </span><br><span class="line">php one.php upload:file up&#x2F; &#x2F;test&#x2F;</span><br></pre></td></tr></table></figure><h3 id="Shell计划任务"><a href="#Shell计划任务" class="headerlink" title="Shell计划任务"></a>Shell计划任务</h3><p>设置每小时刷新一次Token ，任务周期选择每小时，0分钟，脚本内容为：<code>php /程序具体路径/one.php token:refresh</code> </p><p>设置每十分钟后台刷新一遍缓存,任务周期改为N分钟-10分钟，脚本内容为：<code>php /程序具体路径/one.php cache:refresh</code></p><blockquote><p>具体路径为你网站根目录路径,PHP后有空格请注意。</p></blockquote><h3 id="其它玩法："><a href="#其它玩法：" class="headerlink" title="其它玩法："></a>其它玩法：</h3><p>推荐看看大佬们怎么玩的吧。</p><p>我习惯用服务器下载电视剧或者电影，然后同步到OneDrive，然后在线观看，非常清晰的呢！！！</p><p>可以访问我的由国际版OneDrive和Google Drive搭建的<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLjUyYmVzcy5jb20=">站点<i class="fa fa-external-link-alt"></i></span>哦！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;众所周知，国际版OneDrive在国内的访问速度并不理想(多线程下载除外)，所以我们就需要相对而言速度更快的世纪互联版OneDrive来体验体验了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="OneDrive" scheme="https://blog.52bess.com/categories/OneDrive/"/>
    
      <category term="Linux" scheme="https://blog.52bess.com/categories/OneDrive/Linux/"/>
    
      <category term="OneIndex" scheme="https://blog.52bess.com/categories/OneDrive/Linux/OneIndex/"/>
    
    
      <category term="Linux" scheme="https://blog.52bess.com/tags/Linux/"/>
    
      <category term="OneDrive" scheme="https://blog.52bess.com/tags/OneDrive/"/>
    
      <category term="OneIndex" scheme="https://blog.52bess.com/tags/OneIndex/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统手动更换内核</title>
    <link href="https://blog.52bess.com/posts/2020/centoskernrlup.html"/>
    <id>https://blog.52bess.com/posts/2020/centoskernrlup.html</id>
    <published>2020-03-30T06:59:49.000Z</published>
    <updated>2020-04-09T02:14:05.934Z</updated>
    
    <content type="html"><![CDATA[<center><b>从所有人的角度来看，当今的Internet并未如其所愿地移动数据。</b></center><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>一般而言，在云计算商那里“租”了一台服务器之后，我一般会选择<code>CentOS 7</code> 系统，所以这篇文章，就以CentOS为例(似乎有一点标题党的嫌疑？</p></blockquote><a id="more"></a><p><strong>基本不会介绍BBR的原理，需要详细了解，<span class="exturl" data-url="aHR0cHM6Ly9yZXNlYXJjaC5nb29nbGUvcHVicy9wdWI0NTY0Ni8=">可以访问research<i class="fa fa-external-link-alt"></i></span>，我技术并不够优秀，很难解释清楚，还请见谅！</strong></p><p>先讲讲BBR吧！<span class="exturl" data-url="aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvVENQX2Nvbmdlc3Rpb25fY29udHJvbCNUQ1BfQkJS">Wiki百科<i class="fa fa-external-link-alt"></i></span>给出的解释是<code>Bottleneck Bandwidth and Round-trip propagation time (BBR)</code> ，是Google在2016年开发的TCP拥塞控制算法(开源了)。TCP拥塞控制算法有很多，BBR是其中一种，但是由于它出色的效果，被很多人采用。至于linux内核什么时候开始原生支持的，网上的说法真的是五花八门，很多人文章感觉就是互相抄，连<code>2.6.*</code> 的说法都能蹦出来(我怀疑是一些采集站)。相对而言，很多大佬的博客文章，就比较严谨一些，基本上都是<code>4.9</code>。抱着不懂就差的态度，我去Google稍微搜了一下，不敢确定是不是一定是对的。<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvTGludXglRTUlODYlODUlRTYlQTAlQjgjNC54LnklRTclODklODglRTYlOUMlQUMlRTclQjMlQkIlRTUlODglOTc=">Wiki百科<i class="fa fa-external-link-alt"></i></span>的详细说明，可以找到如下一条说明：</p><table><thead><tr><th>内核</th><th>初始发行日期</th><th>最新版本</th><th>维护者</th><th>支持状态</th><th>备注</th></tr></thead><tbody><tr><td>4.9</td><td>2016年12月11日</td><td>4.9.148</td><td>葛雷格·克罗哈曼</td><td>长期支持版本，从2016年12月至2023年1月</td><td>开始支持 BBR congestion control。</td></tr></tbody></table><h3 id="更换-更新内核"><a href="#更换-更新内核" class="headerlink" title="更换/更新内核"></a>更换/更新内核</h3><p>这时候我们来更换内核吧，这里我的测试机器是阿里云国际香港ECS。</p><ul><li>当前的 Kernel 版本</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ uname -r</span><br></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="centoskernrlup/centoskernrlup01.png" alt></p><ul><li>更新软件包</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum update -y</span><br></pre></td></tr></table></figure><h4 id="ELRepo项目"><a href="#ELRepo项目" class="headerlink" title="ELRepo项目"></a>ELRepo项目</h4><p>这里我们需要用到<span class="exturl" data-url="aHR0cHM6Ly9lbHJlcG8ub3JnL3Rpa2kvdGlraS1pbmRleC5waHA=">Repo项目<i class="fa fa-external-link-alt"></i></span>Enterprise Linux软件包的RPM存储库。</p><ul><li>导入ELRepo公钥</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br></pre></td></tr></table></figure><ul><li>安装ELRepo的 yum 源到系统</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install https://www.elrepo.org/elrepo-release-7.0-4.el7.elrepo.noarch.rpm</span><br></pre></td></tr></table></figure><h4 id="安装新内核啦"><a href="#安装新内核啦" class="headerlink" title="安装新内核啦"></a>安装新内核啦</h4><ul><li>查看ELRepo仓库下，在当前系统支持的内核包<br>ELRepo会提供<span class="exturl" data-url="aHR0cHM6Ly93d3cua2VybmVsLm9yZy8=">he Linux Kernel Archives<i class="fa fa-external-link-alt"></i></span>用资源。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum --disablerepo=<span class="string">"*"</span> --enablerepo=<span class="string">"elrepo-kernel"</span> list available</span><br></pre></td></tr></table></figure><ul><li>安装最新的主线稳定内核</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum --enablerepo=elrepo-kernel install kernel-ml</span><br></pre></td></tr></table></figure><h4 id="更改grub配置"><a href="#更改grub配置" class="headerlink" title="更改grub配置"></a>更改grub配置</h4><p>在安装完新的 Kernrl 之后，系统是不会帮你切换到新内核的，重启也不行，需要我们自己设置，将新内核设置为默认启动选项。</p><ul><li>查看所有的 Kernel</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -qa | grep kernel</span><br></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="centoskernrlup/centoskernrlup02.png" alt></p><ul><li>查看当前正在使用的 Kernrl</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ uname -r</span><br></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="centoskernrlup/centoskernrlup03.png" alt></p><ul><li>查看 Kernel 启动顺序</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ awk -F\<span class="string">' '</span><span class="variable">$1</span>==<span class="string">"menuentry "</span> &#123;<span class="built_in">print</span> i++ <span class="string">" : "</span> <span class="variable">$2</span>&#125;<span class="string">' /etc/grub2.cfg</span></span><br></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="centoskernrlup/centoskernrlup04.png" alt></p><p>我们可以看到，安装完之后，内核没有切换过去，通过查看得知，新安装的内核位于第一个位置，标记为 <code>0</code>。这是我们需要修改<code>/etc/default/grub</code>文件，以便于让系统在启动时让新内核成为默认选项。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/default/grub</span><br></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="centoskernrlup/centoskernrlup05.png" alt></p><p>需要把图中的<code>GRUB_DEFAULT=saved</code> 改成 <code>GRUB_DEFAULT=0</code> ，然后保存。当然，你也可以在安装其它版本的Kernel之后，更改<code>GRUB_DEFAULT</code>的值。</p><ul><li>重新生成 Kernrl 配置</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grub2-mkconfig -o /boot/grub2/grub.cfg</span><br></pre></td></tr></table></figure><ul><li>然后重启机器</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ reboot</span><br></pre></td></tr></table></figure><ul><li>重启完毕后，检查是否成功</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ uname -r</span><br></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="centoskernrlup/centoskernrlup06.png" alt></p><p>可以看到，已经成功啦！</p><h3 id="删除多余内核"><a href="#删除多余内核" class="headerlink" title="删除多余内核"></a>删除多余内核</h3><p>你可以在安装新内核之后，选择把其它内核删掉，但是请注意<strong>千万不要删除正在运行的那个内核！！！</strong></p><ul><li>查看所有的 Kernel</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -qa | grep kernel</span><br></pre></td></tr></table></figure><ul><li>删除你想删除的内核</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ yum remove kernel-[old_kernel_version]</span><br><span class="line"><span class="comment"># 举个例子</span></span><br><span class="line">$ yum remove kernel-3.10.0-957.el7.x86_64</span><br></pre></td></tr></table></figure><ul><li>重新生成 Kernrl 配置</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grub2-mkconfig -o /boot/grub2/grub.cfg</span><br></pre></td></tr></table></figure><h3 id="开启BBR"><a href="#开启BBR" class="headerlink" title="开启BBR"></a>开启BBR</h3><p>整了这么半天，除了更新下内核，另一个重要的事情就是需要开启BBR了。</p><ul><li>编辑<code>/tec/sysctl.conf</code>文件</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/sysctl.conf</span><br></pre></td></tr></table></figure><ul><li>添加如下内容：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net.core.default_qdisc&#x3D;fq</span><br><span class="line">net.ipv4.tcp_congestion_control&#x3D;bbr</span><br></pre></td></tr></table></figure><ul><li>或者使用tee命令重定向追加到<code>/tec/sysctl.conf</code>文件中：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">'net.core.default_qdisc=fq'</span> | sudo tee -a /etc/sysctl.conf</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">'net.ipv4.tcp_congestion_control=bbr'</span> | sudo tee -a /etc/sysctl.conf</span><br></pre></td></tr></table></figure><ul><li>从配置文件“/etc/sysctl.conf”加载内核参数设置</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sysctl -p</span><br></pre></td></tr></table></figure><ul><li>验证是否成功(是否开启了BBR</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ sysctl net.ipv4.tcp_congestion_control</span><br><span class="line"><span class="comment"># 显示如下内容即可：</span></span><br><span class="line"><span class="comment"># net.ipv4.tcp_congestion_control = bbr</span></span><br><span class="line">$ sysctl net.ipv4.tcp_available_congestion_control</span><br><span class="line"><span class="comment"># 显示如下内容即可：</span></span><br><span class="line"><span class="comment"># net.ipv4.tcp_available_congestion_control = reno cubic bbr</span></span><br></pre></td></tr></table></figure><ul><li>查看内核模块是否加载</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lsmod | grep bbr</span><br></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="centoskernrlup/centoskernrlup07.png" alt></p><p>到这里，基本上就成功了！</p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>其实大家觉得这样很麻烦，也可以去网上找一键脚本。但是我觉得这并不是很好的习惯，不能对脚本产生过度依赖，除非你是买一台vps小鸡当玩具玩，否则千万不要用脚本，更不要在生产环境用这种一键脚本。很多人连一键脚本的内容都没瞟一眼，在搜索引擎找到后，直接就运行，造成重启后开不了机的，也大有人在！<br><strong>我不是说不能用所谓的一键脚本，我也经常用。我的观点是，不应该对一键脚本产生过度依赖，同时尽量不要在生产环境用！</strong><br>如果可以，也可以看一看哪些写的比较好的脚本，多研究研究也是不错的，“先懂后懒”嘛！</p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;b&gt;从所有人的角度来看，当今的Internet并未如其所愿地移动数据。&lt;/b&gt;&lt;/center&gt;

&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;一般而言，在云计算商那里“租”了一台服务器之后，我一般会选择&lt;code&gt;CentOS 7&lt;/code&gt; 系统，所以这篇文章，就以CentOS为例(似乎有一点标题党的嫌疑？&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://blog.52bess.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://blog.52bess.com/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://blog.52bess.com/tags/CentOS/"/>
    
      <category term="BBR" scheme="https://blog.52bess.com/tags/BBR/"/>
    
  </entry>
  
  <entry>
    <title>在虚拟机中安装ArchLinux(UEFI)</title>
    <link href="https://blog.52bess.com/posts/2020/helloarchlinux.html"/>
    <id>https://blog.52bess.com/posts/2020/helloarchlinux.html</id>
    <published>2020-01-31T03:25:13.000Z</published>
    <updated>2020-04-29T08:50:23.103Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关于操作系统的选择，我还是喜欢把Windows 10作为<strong>Host OS</strong>，把其它的作为<strong>Guest OS</strong>，比如一些Linux发行版openSUSE、Ubuntu等，以及用作其它用途的系统。比如我喜欢把迅雷等软件放在虚拟机的Windows系统里面(迅雷之类的软件感觉就是毒瘤，但有时候又需要用，别跟我说还有很多替代软件，我用的也不只是迅雷哦😅)。至于为什么要写这篇文章，因为我身边用ArchLinux的人慢慢地变多了起来，不过相对于ArchLinux，我还是比较喜欢openSUSE啊😄</p><a id="more"></a><p>ArchLinux有一个与众不同的地方，初始安装的Arch只是一个基本系统，随后用户可以根据自己的喜好安装需要的软件并配置成符合自己理想的系统。很多用户喜欢ArchLinux的原因就是，“以用户为中心”等的<span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL0FyY2hfTGludXhfKCVFNyVBRSU4MCVFNCVCRCU5MyVFNCVCOCVBRCVFNiU5NiU4Nyk=">Arch之道<i class="fa fa-external-link-alt"></i></span>。如果您觉得安装ArchLinux之流已经满足不了你的折腾需求了，可以尝试<span class="exturl" data-url="aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTGludXhfRnJvbV9TY3JhdGNo">LFS<i class="fa fa-external-link-alt"></i></span>哦！</p><center><b>如果你是初次尝试Linux或者ArchLinux，我建议你从“业余环境”慢慢迁移到“工作环境”！</b></center><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>在安装的过程中，无论遇到什么困难，我们都不要怕，解决问题本身就是一种乐趣。此时，你可以围绕着Google等搜索引擎来寻找解决方案，<span class="exturl" data-url="aHR0cHM6Ly9iYnMuYXJjaGxpbnV4Lm9yZy8=">Arch官方论坛<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cDovL2ZvcnVtLnVidW50dS5vcmcuY24vdmlld2ZvcnVtLnBocD9mPTE1NQ==">Ubuntu中文论坛Arch专区<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aXJjOi8vaXJjLmZyZWVub2RlLm5ldC8jYXJjaGxpbnV4LWNu">IRC频道:archlinux-cn<i class="fa fa-external-link-alt"></i></span>等，都是不错的地方。好在，ArchLinux官方提供了非常详细的Wiki👍</p><h3 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h3><p>你可以去<span class="exturl" data-url="aHR0cHM6Ly93d3cuYXJjaGxpbnV4Lm9yZy9kb3dubG9hZC8=">官网下载<i class="fa fa-external-link-alt"></i></span>，或者使用国内外的镜像源进行下载。不管从哪里下载，我都建议你<strong>验证GnuPG签名！！！</strong></p><h3 id="虚拟机准备"><a href="#虚拟机准备" class="headerlink" title="虚拟机准备"></a>虚拟机准备</h3><p>新建虚拟机</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux01.png" alt></p><p>选择<code>典型</code>，然后下一步</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux02.png" alt></p><p>选择<code>稍后安装操作系统</code>，然后下一步</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux03.png" alt></p><p>然后客户机操作系统选择<code>Linux</code>，版本为<code>其他 Linux 5.x 或更高版本内核 64 位</code>。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux04.png" alt></p><p>虚拟机名称和位置请自定义吧，<strong>最好别用中文</strong>(我没试过中文能不能成功，但最好别用)。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux05.png" alt></p><p>磁盘大小我选择60GB，这个根据实际需求来就好啦！</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux06.png" alt></p><p>到这一步，我们选择<code>自定义硬件</code></p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux07.png" alt></p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux08.png" alt></p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux09.png" alt></p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux10.png" alt></p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux11.png" alt></p><p>然后，选择完成即可！</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux12.png" alt></p><p>选择<code>编辑虚拟机设置</code></p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux13.png" alt></p><p>选择<code>选项</code>–&gt;<code>高级</code>，然后选择<code>固件类型</code>为<code>UEFI</code>，然后点击确定。这一步非常重要，不能忽略！</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>启动虚拟机之后，会看到如下画面：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux14.png" alt></p><p>选择第一个 <code>Arch Linux archiso x86_64 UEFI CD</code>，按下回车键。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux15.png" alt></p><p>过一会儿，就能进入U盘中的系统啦，也就是Live CD(据说有些Linux发行版，就只是在Live CD中运行的哦)。这一步可以输入<code>ls</code>查看到当前目录下，有一个叫做<code>install.txt</code>文件，它就是安装教程啦！可以输入命令 <code>cat i</code> + tab 键自动补全后回车查看（<code>shift + pgup/pgdn</code> 可上下翻页），也可用 <code>vim</code> 或 <code>nano</code> 查看。</p><h3 id="验证启动模式"><a href="#验证启动模式" class="headerlink" title="验证启动模式"></a>验证启动模式</h3><p>刚才我们不是设置的UEFI启动嘛？这时候来验证一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls /sys/firmware/efi/efivars</span></span><br></pre></td></tr></table></figure><p>如果有输出，确认启动模式为UEFI，就没问题啦。</p><h3 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h3><p>确保系统启用了网络接口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ip link</span></span><br></pre></td></tr></table></figure><p>使用<code>dhcpcd</code>联网：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dhcpcd</span></span><br></pre></td></tr></table></figure><div class="note info"><p>-c 参数：用于指定 ping 的次数</p></div><h3 id="更新系统时间"><a href="#更新系统时间" class="headerlink" title="更新系统时间"></a>更新系统时间</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># timedatectl set-ntp true</span></span><br></pre></td></tr></table></figure><p>检查：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># timedatectl status</span></span><br></pre></td></tr></table></figure><h3 id="硬盘分区"><a href="#硬盘分区" class="headerlink" title="硬盘分区"></a>硬盘分区</h3><p>到了重要的一步了，硬盘分区。先说说我的分区方案：</p><table><thead><tr><th>分区</th><th>分区类型</th><th>大小</th><th>描述</th><th>挂载点</th></tr></thead><tbody><tr><td>/dev/sda1</td><td>EFI system partition</td><td>512M</td><td>EFI引导分区</td><td>/mnt/boot</td></tr><tr><td>/dev/sda2</td><td>Linux swap</td><td>4G</td><td>交换分区</td><td>swap</td></tr><tr><td>/dev/sda3</td><td>/</td><td>剩下所有的</td><td>系统根分区</td><td>/mnt</td></tr></tbody></table><p>查看硬盘的信息，核对无误后再上手操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># fdisk -l</span></span><br></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux16.png" alt></p><h4 id="开始分区"><a href="#开始分区" class="headerlink" title="开始分区"></a>开始分区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># fdisk /dev/sda</span></span><br></pre></td></tr></table></figure><p>进入分区程序。输入 <strong>m</strong> 可以查看 fdisk 的帮助。<strong>在决定写入之前，所有的更改都不会被保存。</strong></p><blockquote><ul><li>创建分区表，输入 <code>g</code> 创建一个全新的 GPT (GUID Partition Table) 分区表。</li><li>输入 <strong>n</strong> 建立第一个分区，这里我们创建的是sda1分区</li><li>分区类型默认回车，分区序号默认回车，起始扇区默认回车，结束扇区输入 <code>+512M</code> 回车。</li></ul></blockquote><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux17.png" alt></p><p>依此类推，我们还需要创建交换分区和根分区：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux18.png" alt></p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux19.png" alt></p><h4 id="修改分区类型"><a href="#修改分区类型" class="headerlink" title="修改分区类型"></a>修改分区类型</h4><p>按 <strong>t</strong> ，会询问需要修改的分区号，然后则是询问你要修改的类型（按 L 会列出各个分区类型的编号），编号 <strong>1</strong> 是 <strong>EFI System Partition</strong> ，编号 <strong>19</strong> 是 <strong>swap</strong> ，分区3的类型不做修改（默认的分区类型是 Linux Filesystem）。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux20.png" alt></p><p>最后，我们输入w，将改动输入到硬盘：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux21.png" alt></p><p>此时，我们来确认下有没有生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># fdisk -l /dev/sda</span></span><br></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux22.png" alt></p><h4 id="格式化，并设置swap分区"><a href="#格式化，并设置swap分区" class="headerlink" title="格式化，并设置swap分区"></a>格式化，并设置swap分区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkfs.fat -F32 /dev/sda1</span></span><br><span class="line"><span class="comment"># mkswap /dev/sda2</span></span><br><span class="line"><span class="comment"># mkfs.ext4 /dev/sda3</span></span><br></pre></td></tr></table></figure><h4 id="启用交换分区"><a href="#启用交换分区" class="headerlink" title="启用交换分区"></a>启用交换分区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># swapon /dev/sda2</span></span><br></pre></td></tr></table></figure><p>查看是否启用成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># swapon --show</span></span><br></pre></td></tr></table></figure><h4 id="挂载分区"><a href="#挂载分区" class="headerlink" title="挂载分区"></a>挂载分区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mount /dev/sda3 /mnt</span></span><br><span class="line"><span class="comment"># mkdir /mnt/boot</span></span><br><span class="line"><span class="comment"># mount /dev/sda1 /mnt/boot</span></span><br></pre></td></tr></table></figure><p>然后查看是否成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lsblk</span></span><br></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux23.png" alt></p><h3 id="选择镜像源"><a href="#选择镜像源" class="headerlink" title="选择镜像源"></a>选择镜像源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/pacman.d/mirrorlist</span></span><br></pre></td></tr></table></figure><p>然后输入<code>:set nu</code>，按下回车键后，让vim显示行号。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux24.png" alt></p><p>然后找到第19行的China。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux25.png" alt></p><p>输入大写字母<code>V</code>，然后按<code>d</code>进行剪切，然后把光标移到第6行，按<code>p</code>进行粘贴。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux26.png" alt></p><p>然后输入<code>:wq</code>，回车，保存并退出。</p><h3 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a>安装软件包</h3><p>使用 <code>pacstrap</code> 脚本，安装 <em>base</em> 软件包和 Linux 内核以及常规硬件的固件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pacstrap /mnt base linux linux-firmware</span></span><br></pre></td></tr></table></figure><p>注意，这里的<code>fiemware</code>，不要输成<code>fireware</code>了😂</p><p>安装网络管理器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pacstrap /mnt networkmanager</span></span><br></pre></td></tr></table></figure><h3 id="配置系统"><a href="#配置系统" class="headerlink" title="配置系统"></a>配置系统</h3><h4 id="生成挂载表"><a href="#生成挂载表" class="headerlink" title="生成挂载表"></a>生成挂载表</h4><p><strong>fstab</strong> 文件可用于定义磁盘分区，包括各种块设备或者远程文件系统应该如何装入到文件系统。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># genfstab -U -p /mnt &gt;&gt; /mnt/etc/fstab</span></span><br></pre></td></tr></table></figure><p>检查一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /mnt/etc/fstab</span></span><br></pre></td></tr></table></figure><p>确认无误。</p><h3 id="arch-chroot"><a href="#arch-chroot" class="headerlink" title="arch-chroot"></a>arch-chroot</h3><p>切换到安装的新系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># arch-chroot /mnt</span></span><br></pre></td></tr></table></figure><p>这意味着在 <code>exit</code> 之前，下面所有的操作都是在硬盘中的系统中运行，而非 U 盘。</p><h4 id="设置时区"><a href="#设置时区" class="headerlink" title="设置时区"></a>设置时区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@archiso /]<span class="comment"># ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span></span><br></pre></td></tr></table></figure><p>将硬件时钟设置为当前系统时间：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@archiso /]<span class="comment"># hwclock --systohc --utc</span></span><br></pre></td></tr></table></figure><p>安装vim：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S vim</span><br></pre></td></tr></table></figure><h4 id="配置系统语言环境："><a href="#配置系统语言环境：" class="headerlink" title="配置系统语言环境："></a>配置系统语言环境：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@archiso /]<span class="comment"># vim /etc/locale.gen</span></span><br></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux27.png" alt></p><p>找到 <code>#en_US.UTF-8 UTF-8</code> 这一行，光标移动到开头的 <code>#</code> ，然后输入 <code>x</code> ，再键入 <code>:wq</code> 保存并退出即可。同样的操作，把<code>zh_CN.UTF-8 UTF-8</code>也整一个。</p><p>接着执行 <code>locale-gen</code> 以生成 <code>locale</code> 信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@archiso /]<span class="comment"># locale-gen</span></span><br></pre></td></tr></table></figure><p>创建 <code>locale.conf</code> 文件，并相应地设置 <code>LANG</code> 变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@archiso /]<span class="comment"># echo LANG=en_US.UTF-8 &gt; /etc/locale.conf</span></span><br></pre></td></tr></table></figure><div class="note warning"><p>在<b>/etc/locale.conf</b>中设置的locale是全局有效的，所以只建议设置<b>LANG=en_US.UTF-8</b>，也就是上门这条指令所设置的内容。因为在这里设置了<b>中文locale</b>的话，会导致<b>tty</b>乱码。但是你可以在图形界面中单独启用<b>中文locale</b>。具体可以参考<span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL0xvY2FsaXphdGlvbi9TaW1wbGlmaWVkX0NoaW5lc2VfKCVFNyVBRSU4MCVFNCVCRCU5MyVFNCVCOCVBRCVFNiU5NiU4Nyk=">官方Wiki<i class="fa fa-external-link-alt"></i></span></p></div><h4 id="设置主机名"><a href="#设置主机名" class="headerlink" title="设置主机名"></a>设置主机名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@archiso /]<span class="comment"># echo arch &gt; /etc/hostname</span></span><br></pre></td></tr></table></figure><p>你可以把<code>arch</code>设置成自己的自定义主机名。</p><p>添加信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@archiso /]<span class="comment"># vim /etc/hosts</span></span><br></pre></td></tr></table></figure><p>按<code>i</code>编辑内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Static table lookup for hostnames.</span></span><br><span class="line"><span class="comment"># See hosts(5) for details.</span></span><br><span class="line">127.0.0.1   localhost</span><br><span class="line">::1         localhost</span><br><span class="line">127.0.1.1   arch.localdomain arch</span><br></pre></td></tr></table></figure><p>如果你上面修改了<code>arch</code>，这里的也得改哦，主机名可以自定义，但要保持一致！</p><p>填写完成后就键入 <code>Esc</code> 键，退回命令模式，再键入 <code>:wq</code> 保存并退出。</p><p>将 <em>NetworkManager</em> 服务设为开机自启：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@archiso /]<span class="comment"># systemctl enable NetworkManager</span></span><br></pre></td></tr></table></figure><h4 id="设置-root-的密码"><a href="#设置-root-的密码" class="headerlink" title="设置 root 的密码"></a>设置 root 的密码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># passwd</span></span><br></pre></td></tr></table></figure><p>输入后回车即可，输入时无显示，需输入两次。</p><h4 id="安装引导程序"><a href="#安装引导程序" class="headerlink" title="安装引导程序"></a>安装引导程序</h4><blockquote><ul><li>default – 默认加载的配置文件 (不含 .conf 后缀)。</li><li>timeout – 启动选单的超时时间,如果不设置的话,启动选单只有在按键时才显示。</li><li>editor - 是否允许用户编辑内核参数。 yes 是允许, no 是阻止。</li></ul></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@archiso /]<span class="comment"># bootctl --path=/boot install</span></span><br></pre></td></tr></table></figure><p>用 vim 编辑 <code>/boot/loader/loader.conf</code> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@archiso /]<span class="comment"># vim /boot/loader/loader.conf</span></span><br></pre></td></tr></table></figure><p>如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">default  arch</span><br><span class="line">timeout  5</span><br><span class="line">console-mode max</span><br><span class="line">editor   no</span><br></pre></td></tr></table></figure><h4 id="添加启动选项："><a href="#添加启动选项：" class="headerlink" title="添加启动选项："></a>添加启动选项：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@archiso /]<span class="comment"># vim /boot/loader/entries/arch.conf</span></span><br></pre></td></tr></table></figure><p>编辑如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title   Arch Linux</span><br><span class="line">linux   /vmlinuz-linux</span><br><span class="line">initrd  /initramfs-linux.img</span><br><span class="line">options root=PARTUUID=</span><br></pre></td></tr></table></figure><p>保存并退出编辑后，我们执行一下这么一行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@archiso /]<span class="comment"># blkid -s PARTUUID -o value /dev/sda3 &gt;&gt; /boot/loader/entries/arch.conf</span></span><br></pre></td></tr></table></figure><p>上面的命令将会把根分区的UUID的值追加到 <code>/boot/loader/entries/arch.conf</code> 的最后一行。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux28.png" alt></p><p>此时，可能是这样的，你需要用 vim 编辑 <code>/boot/loader/entries/arch.conf</code> ，将文件改成这样：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux29.png" alt></p><h4 id="重启系统"><a href="#重启系统" class="headerlink" title="重启系统"></a>重启系统</h4><p>回退到Live CD环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@archiso /]<span class="comment"># exit</span></span><br></pre></td></tr></table></figure><p>执行重启命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl reboot</span></span><br></pre></td></tr></table></figure><p>重启后会出现如图所示：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux30.png" alt></p><p>选择第一个，<code>Arch Linux</code>，进入系统，然后输入用户名和密码。</p><h4 id="新建普通用户"><a href="#新建普通用户" class="headerlink" title="新建普通用户"></a>新建普通用户</h4><p>先安装sudo软件包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@arch ~]<span class="comment"># pacman -S sudo</span></span><br></pre></td></tr></table></figure><p>配置 <code>sudoers</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@arch ~]<span class="comment"># EDITOR=vim visudo</span></span><br></pre></td></tr></table></figure><p>找到这一行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># %wheel ALL=(ALL) ALL</span></span><br></pre></td></tr></table></figure><p>去掉找到的那一行开头的注释，即 <strong>#</strong> 和 <strong>空格</strong> ，不要误删掉 <strong>%</strong> 哦。弄完之后保存即可:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%wheel ALL=(ALL) ALL</span><br></pre></td></tr></table></figure><div class="note info"><p>去掉注释的作用：取消注释以允许 wheel 组成员执行任何命令</p></div>添加一个 wheel 组普通用户:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@arch ~]<span class="comment"># useradd -m -g users -G wheel -s /bin/bash 你想要取的用户名</span></span><br></pre></td></tr></table></figure><p>设置普通用户的密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@arch ~]<span class="comment"># passwd archie</span></span><br></pre></td></tr></table></figure><h4 id="VMware-相关软件包和服务"><a href="#VMware-相关软件包和服务" class="headerlink" title="VMware 相关软件包和服务"></a>VMware 相关软件包和服务</h4><p>安装 <code>open-vm-tools</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@arch ~]<span class="comment"># sudo pacman -S open-vm-tools</span></span><br></pre></td></tr></table></figure><p>将 <code>vmtoolsd</code> 和 <code>vmware-vmblock-fuse</code> 两个服务设为开机自启:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@arch ~]<span class="comment"># systemctl enable vmtoolsd vmware-vmblock-fuse</span></span><br></pre></td></tr></table></figure><p>安装 <code>gtkmm3</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@arch ~]<span class="comment"># sudo pacman -S gtkmm3</span></span><br></pre></td></tr></table></figure><p>安装相关驱动:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@arch ~]<span class="comment"># sudo pacman -S xf86-input-vmmouse xf86-video-vmware mesa</span></span><br></pre></td></tr></table></figure><p>如果你不明白这几步干嘛的，可以查阅<span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL1ZNd2FyZS9JbnN0YWxsaW5nX0FyY2hfYXNfYV9ndWVzdF8oJUU3JUFFJTgwJUU0JUJEJTkzJUU0JUI4JUFEJUU2JTk2JTg3KSNPcGVuLVZNLVRvb2xz">官方Wiki<i class="fa fa-external-link-alt"></i></span></p><h3 id="安装桌面环境"><a href="#安装桌面环境" class="headerlink" title="安装桌面环境"></a>安装桌面环境</h3><p>到了这一步，很多人都会卡在KDE和GNOME之间怎么选择了。2个我都用过，也不好说谁更好用。单纯从使用习惯和风格来考虑。GNOME更像macos的那种风格，而KDE更像Windows的风格。</p><h4 id="1-GNOME桌面"><a href="#1-GNOME桌面" class="headerlink" title="1.GNOME桌面"></a>1.GNOME桌面</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@arch ~]<span class="comment"># sudo pacman -S xorg xorg-server xorg-xinit gnome gnome-extra</span></span><br><span class="line">[root@arch ~]<span class="comment"># systemctl enable gdm</span></span><br></pre></td></tr></table></figure><h4 id="2-KDE桌面"><a href="#2-KDE桌面" class="headerlink" title="2.KDE桌面"></a>2.KDE桌面</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@arch ~]<span class="comment"># sudo pacman -S xorg plasma-meta</span></span><br></pre></td></tr></table></figure><h4 id="3-LightDM"><a href="#3-LightDM" class="headerlink" title="3.LightDM"></a>3.LightDM</h4><p>可以选择用LightDM替换GNOME</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@arch ~]<span class="comment"># sudo pacman -S lightdm lightdm-gtk-greeter</span></span><br><span class="line">[root@arch ~]<span class="comment"># systemctl disable gdm</span></span><br><span class="line">[root@arch ~]<span class="comment"># systemctl enable lightdm</span></span><br></pre></td></tr></table></figure><p>重启系统，选择 Gnome on Xorg 启动。</p><p>同时，发现启动界面有两个重复的 Gnome 选项，解决方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@arch ~]<span class="comment"># sudo mv /usr/share/wayland-sessions/gnome.desktop /usr/share/wayland-sessions/gnome.desktop.bak</span></span><br></pre></td></tr></table></figure><h4 id="完善显卡驱动-可选"><a href="#完善显卡驱动-可选" class="headerlink" title="完善显卡驱动(可选)"></a>完善显卡驱动(可选)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[admin@arch ~]<span class="comment"># sudo pacman -S xf86-video-intel intel-media-driver vulkan-intel xf86-video-amdgpu xf86-video-ati mesa-vdpau vulkan-radeon</span></span><br></pre></td></tr></table></figure><h3 id="显示管理器"><a href="#显示管理器" class="headerlink" title="显示管理器"></a>显示管理器</h3><p>安装 <code>sddm</code> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[admin@arch ~]<span class="comment"># sudo pacman -S sddm</span></span><br></pre></td></tr></table></figure><p>将 <code>sddm</code>服务设为开机自启：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[admin@arch ~]<span class="comment"># systemctl enable sddm</span></span><br></pre></td></tr></table></figure><p>重启虚拟机：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[admin@arch ~]<span class="comment"># systemctl reboot</span></span><br></pre></td></tr></table></figure><p>重启后，即可进入图形系统。</p><h2 id="安装完之后"><a href="#安装完之后" class="headerlink" title="安装完之后"></a>安装完之后</h2><h3 id="安装终端"><a href="#安装终端" class="headerlink" title="安装终端"></a>安装终端</h3><p>按下 <code>Ctrl + Alt + F2</code> 切换至 <code>tty2</code> ，登录，然后输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@arch ~]<span class="comment"># sudo pacman -S deepin-terminal</span></span><br></pre></td></tr></table></figure><p>然后按下 <code>Ctrl + Alt + F1</code> 切换至桌面环境。</p><h3 id="yay"><a href="#yay" class="headerlink" title="yay"></a>yay</h3><p>对于 Arch Linux，最具特色也是最强大的莫过于它丰富的 AUR (Arch User Repository)，而 yay 就是一个安装这个仓库的软件的便捷工具。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://aur.archlinux.org/yay.git</span><br><span class="line">$ <span class="built_in">cd</span> yay</span><br><span class="line">$ makepkg -si</span><br><span class="line">$ <span class="built_in">cd</span> ..</span><br><span class="line">$ rm -rf yay</span><br></pre></td></tr></table></figure><h3 id="一些工具"><a href="#一些工具" class="headerlink" title="一些工具"></a>一些工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S git vim wget curl ntfs-3g exfat-utils p7zip unzip unrar</span><br></pre></td></tr></table></figure><h3 id="安装chromium"><a href="#安装chromium" class="headerlink" title="安装chromium"></a>安装chromium</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S chromium</span><br></pre></td></tr></table></figure><h3 id="安装中文字体"><a href="#安装中文字体" class="headerlink" title="安装中文字体"></a>安装中文字体</h3><p>打开终端，执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S base-devel git</span><br><span class="line">$ git <span class="built_in">clone</span> https://aur.archlinux.org/noto-fonts-sc.git</span><br><span class="line">$ <span class="built_in">cd</span> noto-fonts-sc</span><br><span class="line">$ makepkg -si</span><br><span class="line">$ sudo pacman -S noto-fonts-emoji</span><br></pre></td></tr></table></figure><p>上面的命令可能需要代理。。。</p><h3 id="安装-shadowsocks-qt5"><a href="#安装-shadowsocks-qt5" class="headerlink" title="安装 shadowsocks-qt5"></a>安装 shadowsocks-qt5</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S shadowsocks-qt5</span><br></pre></td></tr></table></figure><h3 id="安装文件管理器"><a href="#安装文件管理器" class="headerlink" title="安装文件管理器"></a>安装文件管理器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S dolphin</span><br></pre></td></tr></table></figure><h3 id="安装归档管理器"><a href="#安装归档管理器" class="headerlink" title="安装归档管理器"></a>安装归档管理器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S p7zip unrar zip unzip engrampa</span><br></pre></td></tr></table></figure><p>然后，其它的自己去diy吧😀</p><h2 id="Arch信仰"><a href="#Arch信仰" class="headerlink" title="Arch信仰"></a>Arch信仰</h2><p>安装<code>neofetch</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S neofetch</span><br></pre></td></tr></table></figure><p>然后在终端输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ neofetch</span><br></pre></td></tr></table></figure><p>呐：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="helloarchlinux/helloarchlinux31.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;关于操作系统的选择，我还是喜欢把Windows 10作为&lt;strong&gt;Host OS&lt;/strong&gt;，把其它的作为&lt;strong&gt;Guest OS&lt;/strong&gt;，比如一些Linux发行版openSUSE、Ubuntu等，以及用作其它用途的系统。比如我喜欢把迅雷等软件放在虚拟机的Windows系统里面(迅雷之类的软件感觉就是毒瘤，但有时候又需要用，别跟我说还有很多替代软件，我用的也不只是迅雷哦😅)。至于为什么要写这篇文章，因为我身边用ArchLinux的人慢慢地变多了起来，不过相对于ArchLinux，我还是比较喜欢openSUSE啊😄&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://blog.52bess.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://blog.52bess.com/tags/Linux/"/>
    
      <category term="虚拟机" scheme="https://blog.52bess.com/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
      <category term="ArchLinux" scheme="https://blog.52bess.com/tags/ArchLinux/"/>
    
      <category term="UEFI启动" scheme="https://blog.52bess.com/tags/UEFI%E5%90%AF%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>GPG与在GitHub上使用GPG</title>
    <link href="https://blog.52bess.com/posts/2020/gpg.html"/>
    <id>https://blog.52bess.com/posts/2020/gpg.html</id>
    <published>2020-01-30T02:29:32.000Z</published>
    <updated>2020-07-27T10:50:38.466Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GPG与在GitHub上使用GPG"><a href="#GPG与在GitHub上使用GPG" class="headerlink" title="GPG与在GitHub上使用GPG"></a>GPG与在GitHub上使用GPG</h2><h3 id="基本过程"><a href="#基本过程" class="headerlink" title="基本过程"></a>基本过程</h3><ul><li>生成自己的<code>GPG</code>密钥</li><li>关联<code>GPG</code>公钥与<code>Github</code>账户</li><li>设置利用<code>GPG</code>私钥对<code>commit</code>进行签名</li><li>可选步骤：信任<code>Github</code>的<code>GPG</code>密钥</li></ul><a id="more"></a><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>使用<code>GitHub</code>的话，当然得用<code>Git</code>了。我主要<code>在Windows10</code>系统中使用<code>GitHub</code>，而在<code>openSUSE</code>中，很少使用。而在<code>Windows</code>平台的<code>Git</code>发行版中，自带了<code>GPG</code>。打开<code>Git Bash</code>，在终端输入<code>pgp --version</code>，就可以看到一些版本信息了：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> gpg --version</span></span><br><span class="line"></span><br><span class="line">gpg (GnuPG) 2.2.19-unknown</span><br><span class="line">libgcrypt 1.8.5</span><br><span class="line">Copyright (C) 2019 Free Software Foundation, Inc.</span><br></pre></td></tr></table></figure><p><strong>但是！！！GPG是有多个版本的，你可以去查询相关的<span class="exturl" data-url="aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTWFuX3BhZ2U=">Wiki<i class="fa fa-external-link-alt"></i></span>，不同版本的GPG，可能密钥生成命令是不同的！</strong></p><h3 id="生成GPG密钥密钥对"><a href="#生成GPG密钥密钥对" class="headerlink" title="生成GPG密钥密钥对"></a>生成GPG密钥密钥对</h3><ul><li><p>如果使用的是 2.1.17 或更高版本，复制以下命令粘贴到Git终端以生成 GPG 密钥对。(我的是2.2.19版本)：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> gpg --full-generate-key</span></span><br></pre></td></tr></table></figure></li><li><p>如果你的版本没有达到2.1.17或更高版本，那么这个命令可能是无效的。请参考<span class="exturl" data-url="aHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20vY24vZ2l0aHViL2F1dGhlbnRpY2F0aW5nLXRvLWdpdGh1Yi9nZW5lcmF0aW5nLWEtbmV3LWdwZy1rZXk=">官方文档<i class="fa fa-external-link-alt"></i></span>！</p></li><li><p>在看到提示时，你可以指定要生成的密钥类型，或按 Enter 键接受默认的 RSA and RSA。</p></li></ul><blockquote><p>GitHub有支持的GPG密钥算法如下：</p><ul><li>RSA</li><li>ElGamal</li><li>DSA数字签名算法</li><li>ECDH</li><li>ECDSA</li><li>EdDSA</li></ul></blockquote><ul><li><p>然后输入所需的密钥长度。 Your key must be at least 4096 bits.</p></li><li><p>输入密钥的有效时长。 按 Enter 键将指定默认选择，表示该密钥不会过期。</p><blockquote><p>这一步的Enter和数字0都表示不会过期。输入其它数字表示天数，字母w表示星期，m表示月份，y表示年份。如3m表示有效期3个月，依此类推，我英语不太好，希望我没说错！</p></blockquote></li><li><p>输完之后，会让你确认一遍。</p></li><li><p>然后会让你输入三项东西</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Real name: 这里填个人信息(随便填</span><br><span class="line">Email address: 这里必须填 GitHub 帐户的经过验证的电子邮件地址</span><br><span class="line">Comment: 随便填，如：mygpg</span><br></pre></td></tr></table></figure><ul><li><p>按下回车之后，就会让你设置GPG的安全密码了，先别说密码复不复杂，自己先给记住了哈！</p></li><li><p>最后会输出一些信息，记得保存，不过，你也可以使用如下命令来查看：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> gpg --list-secret-keys --keyid-format LONG</span></span><br></pre></td></tr></table></figure></li><li><p>为了方便，这里引用官方的案例，GPG密钥ID <code>3AA5C34371567BD2</code>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> gpg --list-secret-keys --keyid-format LONG</span></span><br><span class="line">/Users/hubot/.gnupg/secring.gpg</span><br><span class="line">------------------------------------</span><br><span class="line">sec   4096R/3AA5C34371567BD2 2016-03-10 [expires: 2017-03-10]</span><br><span class="line">uid                          Hubot </span><br><span class="line">ssb   4096R/42B317FD4BA89E7A 2016-03-10</span><br></pre></td></tr></table></figure></li><li><p>粘贴下面的文本（替换为您要使用的 GPG 密钥 ID）。 在此例中，GPG 密钥 ID 是 <code>3AA5C34371567BD2</code>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> gpg --armor --<span class="built_in">export</span> 3AA5C34371567BD2</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 以 ASCII 封装格式打印 GPG 密钥 ID</span></span><br></pre></td></tr></table></figure></li><li><p>复制 GPG 密钥，从 <code>-----BEGIN PGP PUBLIC KEY BLOCK-----</code> 开始，到 <code>-----END PGP PUBLIC KEY BLOCK-----</code> 结束。</p></li><li><p>最后，将GPG密钥添加到GitHub账户。</p><h3 id="将GPG密钥添加到GitHub账户"><a href="#将GPG密钥添加到GitHub账户" class="headerlink" title="将GPG密钥添加到GitHub账户"></a>将GPG密钥添加到GitHub账户</h3><p>打开GitHub的设置，找到SSH and GPG keys这一项，添加一个新的GPG密钥，并将你刚才复制的密钥粘贴进去。</p></li></ul><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="gpg/gpg01.png" alt></p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="gpg/gpg02.png" alt></p><p>然后就大功告成啦！</p><h3 id="利用GPG私钥对Git-commit进行签名"><a href="#利用GPG私钥对Git-commit进行签名" class="headerlink" title="利用GPG私钥对Git commit进行签名"></a>利用GPG私钥对Git commit进行签名</h3><p>首先，需要让Git知道签名所用的GPG密钥ID：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.signingkey &#123;key_id&#125;</span><br></pre></td></tr></table></figure><p>然后，在每次commit的时候，加上-S参数，表示这次提交需要用GPG密钥进行签名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -S -m &quot;...&quot;</span><br></pre></td></tr></table></figure><p>如果你觉得每次都需要手动加上-S有些麻烦，可以设置Git为每次commit自动要求签名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global commit.gpgsign true</span><br></pre></td></tr></table></figure><p>但不论是否需要手动加上-S，commit时都会弹出对话框，需要你输入该密钥的密码，以判断是否为本人操作。<br>至于其它的进阶玩法，自行Google去吧！</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;GPG与在GitHub上使用GPG&quot;&gt;&lt;a href=&quot;#GPG与在GitHub上使用GPG&quot; class=&quot;headerlink&quot; title=&quot;GPG与在GitHub上使用GPG&quot;&gt;&lt;/a&gt;GPG与在GitHub上使用GPG&lt;/h2&gt;&lt;h3 id=&quot;基本过程&quot;&gt;&lt;a href=&quot;#基本过程&quot; class=&quot;headerlink&quot; title=&quot;基本过程&quot;&gt;&lt;/a&gt;基本过程&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;生成自己的&lt;code&gt;GPG&lt;/code&gt;密钥&lt;/li&gt;
&lt;li&gt;关联&lt;code&gt;GPG&lt;/code&gt;公钥与&lt;code&gt;Github&lt;/code&gt;账户&lt;/li&gt;
&lt;li&gt;设置利用&lt;code&gt;GPG&lt;/code&gt;私钥对&lt;code&gt;commit&lt;/code&gt;进行签名&lt;/li&gt;
&lt;li&gt;可选步骤：信任&lt;code&gt;Github&lt;/code&gt;的&lt;code&gt;GPG&lt;/code&gt;密钥&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="GitHub" scheme="https://blog.52bess.com/categories/GitHub/"/>
    
    
      <category term="Git" scheme="https://blog.52bess.com/tags/Git/"/>
    
      <category term="GitHub" scheme="https://blog.52bess.com/tags/GitHub/"/>
    
      <category term="GPG" scheme="https://blog.52bess.com/tags/GPG/"/>
    
  </entry>
  
  <entry>
    <title>2019年终总结</title>
    <link href="https://blog.52bess.com/posts/2019/2019year-end.html"/>
    <id>https://blog.52bess.com/posts/2019/2019year-end.html</id>
    <published>2019-12-31T13:12:40.000Z</published>
    <updated>2019-12-31T13:22:13.002Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="2019year-end/2019year-end_p1.jpg" alt></p><blockquote><p>美丽的灵魂成就美丽的人生    ——  《美丽人生》豆瓣短评</p></blockquote><a id="more"></a><h3 id="过去"><a href="#过去" class="headerlink" title="过去"></a>过去</h3><p>9102年马上就要结束了，回过头来看这一年，又完成了哪些目标？经历了哪些挫折？在人生的十字路口我做了怎样的选择？又学到了哪些新知识、又看了哪些书？</p><p>先看看年初立的flag：</p><ul><li><input disabled type="checkbox"> 公众号坚持每周都发布原创文章</li><li><input checked disabled type="checkbox"> GitHub上完成自己的一些项目(尽管可能并没有什么实际用处，但是需要练手)</li><li><input checked disabled type="checkbox"> 少玩游戏少熬夜</li><li><input disabled type="checkbox"> 学习或了解一门新的编程语言(这里有歧义，算作没完成吧)</li><li><input disabled type="checkbox"> 从入门到精通并不弃坑的学习C++(先把Java搞好，Java真香)</li><li><input disabled type="checkbox"> 坚持健身</li><li><input disabled type="checkbox"> 拥有自己的小程序</li><li><input checked disabled type="checkbox"> 考试不挂科</li><li><input disabled type="checkbox"> 学习UE4</li><li><input disabled type="checkbox"> 完成以上所有的计划</li></ul><p>嗯，😥真是不堪入目，今年看起来似乎很失败。了解我的小伙伴，应该知道我在很早之前就接触Java这门语言了。但是在去年写年终总结时，因为对游戏开发很感兴趣，所以当时决定选择游戏开发来作为新一年的目标。但是！！！在我发表之后不久，在一些大佬的劝说下(洗脑)，决定就往Java发展，目前正在学习JavaEE中。</p><blockquote><p>不能影响你编程观点的语言，不值得你去学！——Alan Perlis</p></blockquote><p>为什么我最终还是选择了Java？实不相瞒，我最早接触的编程语言，就是Java。后来因为种种原因，对Java的了解越来越多，也越来越喜欢这门语言。它从某种程度上对我的编程思想带来了影响，我也明白，编程语言学的越多，并不代表能力越强，更重要的应该是其中的“Programming paradigm”，即“编程范式”。</p><p>所以从明年开始，决定专精Java这门语言，或许等到Java学的很好之后(也需要好几年)，才会再接触其它比较好的语言。某些语言，我也一直想去学，但是先认真地学“好”一门语言，并掌握编程思想才是我应该做的，不能“急功近利”。</p><p>在今年，我了解并学习了很多新知识，不知道为什么，学习的速度跟以前比越来越快了，但是发现自己要学的东西越来越多了，不过我不会停止学习的。今年11月份的时候，一直在犹豫怎么选择以后的路(短期的)，最后参考一些前辈的经历，并结合自己的实际情况，决定选择培训。目前在武汉千峰培训JavaEE，每天在学习我喜欢的知识，感觉过的很充实。我也很感谢家人对我的支持，成功路上真的离不开家人的支持(虽然目前还没成功)。</p><p>最后，说好的要定期更新文章，但是很多时候真的不知道写啥，我觉得这跟我的知识储备还是有关，毕竟不想太水文章。但是，我这一年来，至少做到了坚持做markdown笔记，并且我决定，将这个好习惯保持下去！</p><h3 id="未来"><a href="#未来" class="headerlink" title="未来"></a>未来</h3><p>那么2020年，也应该立新的flag了！</p><ul><li>学好Java，以及相关的一些技术。</li><li>找一份自己喜欢的编程工作！</li><li>少玩游戏少熬夜。</li><li>坚持健身。</li><li>继续坚持做笔记。</li><li>精通Linux的日常使用以及掌握Linux平台的开发(以Java为主)</li><li>写一款自己的主题或web项目(在培训机构的不算数)</li><li>积极的拥抱开源。</li><li>学习或了解一项新技术</li><li>成立自己的小团队，或者找到一群有共同理想目标的人</li><li>完成以上所有的计划，最好能脱单！</li></ul><p>最后，祝大家在2020能够找到自己的方向或目标，并不断地努力下去！</p><center><b>I shall rise oh well rise again and agian.</b></center><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public class Hello&#123;</span><br><span class="line">public class void main(String[] args) &#123;</span><br><span class="line">    System.out.println(&quot;你好，2020!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg&quot; data-original=&quot;2019year-end/2019year-end_p1.jpg&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;美丽的灵魂成就美丽的人生    ——  《美丽人生》豆瓣短评&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="年终总结" scheme="https://blog.52bess.com/categories/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="年终总结" scheme="https://blog.52bess.com/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>在VirtualBox上安装Android-X86</title>
    <link href="https://blog.52bess.com/posts/2019/android-for-virtualbox.html"/>
    <id>https://blog.52bess.com/posts/2019/android-for-virtualbox.html</id>
    <published>2019-08-17T02:50:49.000Z</published>
    <updated>2019-09-01T08:21:55.842Z</updated>
    
    <content type="html"><![CDATA[<p>对于<code>Android</code>开发来说，尤其是新手(没错，我自己就是<code>noob</code>😥)，有很多种开发调试的方案。比如<code>Genymotion+VirtualBox</code>搭配方案(在我的笔记本上这种方案性能最低，可能因配置而异)、直接用<code>VirtualBox</code>安装<code>Android-X86</code>的<code>iso</code>，或者是直接在<code>Android Studio</code>里面调试等等。本文介绍的是直接用<code>VirtualBox</code>安装<code>Android-X86</code>，虽然是在虚拟机中安装，但是也会有很多不可避免的坑！！！</p><a id="more"></a><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox025.png" alt></p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>首先，我们要准备<code>VirtualBox</code>：</p><p>官网👉：<span class="exturl" data-url="aHR0cHM6Ly93d3cudmlydHVhbGJveC5vcmcvd2lraS9Eb3dubG9hZHM=">https://www.virtualbox.org/wiki/Downloads<i class="fa fa-external-link-alt"></i></span></p><p>然后下载<code>Android-X86</code>的<code>iso</code>，这是一个将<span class="exturl" data-url="aHR0cHM6Ly9zb3VyY2UuYW5kcm9pZC5jb20v">Android开源项目<i class="fa fa-external-link-alt"></i></span>移植到x86平台的项目：</p><p>官网👉：<span class="exturl" data-url="aHR0cHM6Ly93d3cuYW5kcm9pZC14ODYub3JnL2Rvd25sb2Fk">https://www.android-x86.org/download<i class="fa fa-external-link-alt"></i></span></p><p><strong>注：本文章同样适用于PhoenixOS系统！</strong></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>准备好之后，我们安装完并打开<code>VirtualBox</code>，找到如图所示的<code>新建</code>按钮(不同版本可能界面稍有不同，但是明白要干什么就行了):</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox001.png" alt></p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox002.png" alt></p><p>然后设置相应的信息，注意文件夹就是虚拟机文件存放位置，建议不要用默认的。名称随便取，类型选<code>Linux</code>，版本选<code>Other Linux</code>，至于是<code>32位</code>还是<code>64位</code>，就看你下载的<code>iso</code>是多少位的了。然后点击下一步。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox003.png" alt></p><p>然后分配内存，这个看电脑本身的内存多大再酌情配置，然后点击下一步。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox004.png" alt></p><p>然后选择<code>现在创建虚拟硬盘</code>。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox005.png" alt></p><p>然后选择VDI，点击下一步。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox006.png" alt></p><p>选择动态分配，然后点击下一步(当然，硬盘空间大的请随意)。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox007.png" alt></p><p>根据实际情况来配置虚拟硬盘的大小，硬盘空间大的请随意，然后点击创建。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox008.png" alt></p><p>然后找到我们刚才创建好的<code>Android_test</code>，点击设置。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox009.png" alt></p><p>然后点击显示-调整显存大小-启用硬件加速里面的3D加速。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox010.png" alt></p><p>选择存储-点击盘片-分配一个光驱，就是把你下载的<code>Android-X86</code>的<code>iso</code>添加进去。然后点击ok。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>当鼠标进入虚拟机窗口移不出来时，按下键盘右边的Ctrl(唱、跳、Rap、篮球😀)即可，vm虚拟机是Ctrl+Alt。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox011.png" alt></p><p>双击我们创建好的虚拟机。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox012.png" alt></p><p>选择<code>Advanced options...</code>，然后</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox013.png" alt></p><p>选择<code>Auto_Installation</code>，这里为什么建议大家选择自动安装呢？因为我们再“这个”虚拟机中只分配了一个虚拟硬盘，而且并不大，所以没必要分区。而且这样也最快，能保证新手在不太了解的情况下不出错。选择这一项之后，按下回车键。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox014.png" alt></p><p>选择yes！</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox015.png" alt></p><p>耐心等待！</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox016.png" alt></p><p>选择Reboot以重启。</p><h2 id="划重点"><a href="#划重点" class="headerlink" title="划重点"></a>划重点</h2><p>在重启之后，会回到开始的位置</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox017.png" alt></p><p>然后我们将其强制退出！</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox018.png" alt></p><p>然后在设置里面，把iso的盘片移除，免得开机时加载盘片去了。然后再重新双击启动！</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox019.png" alt></p><p>然后选择<code>Android-x86 8.1-r2</code>，<strong>千万别手贱按了回车</strong>，通过下面的帮助信息得知，我们要按下<code>E键</code>，进入编辑页面.</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox020.png" alt></p><p>然后在<code>kernel</code>哪里，同样的按下<code>E键</code>，进入编辑页面</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox021.png" alt></p><p>移动光标，找到图中的<code>quiet</code>这个词。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox022.png" alt></p><p>把<code>quiet</code>改为<code>nomodeset xforcevesa</code>，然后按下回车键，再按下键盘上的<code>B键</code>。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox023.png" alt></p><p>然后你就会看到Android的字母了，慢慢等待即可！后面的就不说了，等到了“开机”，应该就自己会玩了，跟用手机也区别不大！</p><p><strong>注：每次开机都需要这一步操作，如果你不想这么做，请自行Google！</strong></p><h2 id="问题详解"><a href="#问题详解" class="headerlink" title="问题详解"></a>问题详解</h2><p>这时候来给大家解释一下，为什么刚才在进入系统之前要修改某些参数！转化成问题，也就是：为什么部分电脑或者虚拟机无法启动Android-x86系统的图形界面？</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="android-for-virtualbox/android-for-virtualbox024.png" alt></p><p>先来看一张图，我们知道，它是基于Linux内核的，就跟大多数人安装Linux时需要禁用独显一样，你在安装Android-x86时，需要告诉内核，不要设置图形分辨率。</p><p>那么，刚才的三个步骤，分别是在干什么呢？</p><ul><li>删除<code>quiet</code>，删除之后可以查看内核消息。</li><li>添加<code>nomodeset</code>参数，禁用“内核模式设置”(告诉内核不要设置图形分辨率，让X代替)。</li><li>添加<code>xforcevesa</code>参数，强制使用X的VESA驱动程序。</li></ul><p><strong>VESA</strong>是一个支持大部分显卡的通用驱动，但不提供任何2D和3D加速功能。要充分发挥显卡性能，需安装<strong>相应的厂商驱动程序</strong>。</p><p>nVidia用户，可以参考ArchLinux的内核模式设置:<span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL0tlcm5lbF9tb2RlX3NldHRpbmc=">https://wiki.archlinux.org/index.php/Kernel_mode_setting<i class="fa fa-external-link-alt"></i></span></p><p>同时，你可以了解HybridGraphics:<span class="exturl" data-url="aHR0cHM6Ly9oZWxwLnVidW50dS5jb20vY29tbXVuaXR5L0h5YnJpZEdyYXBoaWNz">https://help.ubuntu.com/community/HybridGraphics<i class="fa fa-external-link-alt"></i></span></p><p>然后查看项目官方的wiki(必要的):<span class="exturl" data-url="aHR0cHM6Ly93d3cuYW5kcm9pZC14ODYub3JnL2RvY3VtZW50YXRpb24vZ3JhcGhpY19jYXJkLmh0bWw=">https://www.android-x86.org/documentation/graphic_card.html<i class="fa fa-external-link-alt"></i></span></p><p>以及issues:<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL29wZW50aG9zL3N5c3RlbS1hbmFseXNpcy9pc3N1ZXMvMjM=">https://github.com/openthos/system-analysis/issues/23<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于&lt;code&gt;Android&lt;/code&gt;开发来说，尤其是新手(没错，我自己就是&lt;code&gt;noob&lt;/code&gt;😥)，有很多种开发调试的方案。比如&lt;code&gt;Genymotion+VirtualBox&lt;/code&gt;搭配方案(在我的笔记本上这种方案性能最低，可能因配置而异)、直接用&lt;code&gt;VirtualBox&lt;/code&gt;安装&lt;code&gt;Android-X86&lt;/code&gt;的&lt;code&gt;iso&lt;/code&gt;，或者是直接在&lt;code&gt;Android Studio&lt;/code&gt;里面调试等等。本文介绍的是直接用&lt;code&gt;VirtualBox&lt;/code&gt;安装&lt;code&gt;Android-X86&lt;/code&gt;，虽然是在虚拟机中安装，但是也会有很多不可避免的坑！！！&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="https://blog.52bess.com/categories/Android/"/>
    
    
      <category term="Android" scheme="https://blog.52bess.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>彻底关闭Windows10系统更新！</title>
    <link href="https://blog.52bess.com/posts/2019/win10kill.html"/>
    <id>https://blog.52bess.com/posts/2019/win10kill.html</id>
    <published>2019-07-30T07:00:44.000Z</published>
    <updated>2020-04-29T08:50:59.042Z</updated>
    
    <content type="html"><![CDATA[<p>对于很多Windows10家庭版的朋友们来说，如何彻底关闭系统更新，是一件让人很头痛的问题。今天就来给大家介绍一个<strong>开源程序</strong>，来帮助你关闭系统更新，当然，任何事情都是有两面性的！</p><a id="more"></a><div class="note warning"><p>注意：我在实机和虚拟机都测试过，可正常使用，且用火热杀毒检测无毒。毕竟是开源软件，还是可以放心的，没有哪个笨蛋会把自己的病毒暴露在阳光之下的！</p></div><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="win10kill/win10kill001.png" alt></p><h3 id="你需要权衡什么？"><a href="#你需要权衡什么？" class="headerlink" title="你需要权衡什么？"></a>你需要权衡什么？</h3><p>如果您需要SKYPE，MARKET，XBOX APP，WMR或任何其他具有互联网功能的MICROSOFT应用程序，请不要安装DWS！</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="win10kill/win10kill002.png" alt></p><h3 id="它能干什么？"><a href="#它能干什么？" class="headerlink" title="它能干什么？"></a>它能干什么？</h3><ul><li>删除所有间谍软件模块</li><li>删除间谍应用程序</li><li>将间谍域添加到主机文件！</li><li>删除间谍服务</li><li>删除Windows 10 Metro Apps</li><li>支持Windows 7/8 / 8.1 / 10和Server 2008-2012 R2 （对于这些平台，请使用2.2.2.2版）</li><li>删除Office 2016遥测</li><li>开源！</li></ul><p>有了它，你甚至可以删除Windows的监控模块(这个程序本身就是为了这个才产生的)。</p><p><strong>由于是开源软件，在这里贴出作者的GitHub：</strong></p><ul><li>原作者：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL051bW1lci9EZXN0cm95LVdpbmRvd3MtMTAtU3B5aW5n">https://github.com/Nummer/Destroy-Windows-10-Spying<i class="fa fa-external-link-alt"></i></span></li><li>现作者：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1dvaGxzdGFuZC9EZXN0cm95LVdpbmRvd3MtMTAtU3B5aW5n">https://github.com/Wohlstand/Destroy-Windows-10-Spying<i class="fa fa-external-link-alt"></i></span></li></ul><p>截至目前，最新的发行版本的下载链接：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1dvaGxzdGFuZC9EZXN0cm95LVdpbmRvd3MtMTAtU3B5aW5nL3JlbGVhc2VzL2Rvd25sb2FkLzIuMi4yLjIuMjcvRFdTLWJ1aWxkLVdpbjc4ODEtMi4yLjIuMi4yNy56aXA=">https://github.com/Wohlstand/Destroy-Windows-10-Spying/releases/download/2.2.2.2.27/DWS-build-Win7881-2.2.2.2.27.zip<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于很多Windows10家庭版的朋友们来说，如何彻底关闭系统更新，是一件让人很头痛的问题。今天就来给大家介绍一个&lt;strong&gt;开源程序&lt;/strong&gt;，来帮助你关闭系统更新，当然，任何事情都是有两面性的！&lt;/p&gt;
    
    </summary>
    
    
      <category term="Windows10" scheme="https://blog.52bess.com/categories/Windows10/"/>
    
    
      <category term="Windows10" scheme="https://blog.52bess.com/tags/Windows10/"/>
    
  </entry>
  
  <entry>
    <title>HP暗影精灵3黑苹果基本完工</title>
    <link href="https://blog.52bess.com/posts/2019/hpomen3hackintosh.html"/>
    <id>https://blog.52bess.com/posts/2019/hpomen3hackintosh.html</id>
    <published>2019-07-17T09:42:47.000Z</published>
    <updated>2020-03-22T13:37:56.681Z</updated>
    
    <content type="html"><![CDATA[<p>闲暇之余，又一次给暗影精灵3，装上了黑苹果(MacOS 10.14.6)。实现完美电源管理，以及不插电开机(暗影精灵系列的朋友，装过黑苹果的应该知道意味着什么)。并将efi以及补丁发布出来，以便相同的笔记本可以安装。</p><a id="more"></a><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="hpomen3hackintosh/img01.jpg" alt></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><table><thead><tr><th>产品名称暗影精灵3</th><th>OMEN by HP Laptop 15-ce0xx</th></tr></thead><tbody><tr><td>BIOS</td><td>F.20 Rev.A</td></tr><tr><td>处理器</td><td>Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz</td></tr><tr><td>独立显卡</td><td>NVIDIA GeForce GTX 1050</td></tr><tr><td>显卡</td><td>Intel(R) HD Graphics 630</td></tr><tr><td>声卡</td><td>ALC295</td></tr><tr><td>硬盘</td><td>HP SSD EX950 512G、HGST 1T</td></tr></tbody></table><ul><li><h3 id="没问题的"><a href="#没问题的" class="headerlink" title="没问题的"></a>没问题的</h3><ul><li>声卡正常，键盘可以调声音</li><li>摄像头正常</li><li>触摸板正常</li><li>睡眠和唤醒正常，合上盖子再打开也正常，我不知道白苹果是怎样的，但是我试了很多次，没发现问题。</li><li>电池正常</li><li>有线网卡正常</li><li>亮度正常，但是不能用键盘调整，在设置里面可以调整（我得再去爪巴帖子了😓</li></ul><h3 id="无效功能"><a href="#无效功能" class="headerlink" title="无效功能"></a>无效功能</h3><ul><li>独显因为不能驱动，所以屏蔽</li><li>蓝牙</li><li>WiFi  :(</li></ul></li></ul><h3 id="一些参考教程"><a href="#一些参考教程" class="headerlink" title="一些参考教程"></a>一些参考教程</h3><p><a href="https://blog.52bess.com/clover.html">黑苹果教程</a></p><p><span class="exturl" data-url="aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3Mvb1BBd3lSOVdhZkJjZzBOLXJhUFdZdw==">HP暗影精灵3安装 macOS 10.14.3 Mojave 记录<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3Mvc3Q3ZmVOLXlIZkRjdkNFbmd2YklFdw==">macOS Mojave黑苹果教程！<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmRhbGlhbnNreS5uZXQvbWFjT1MtTW9qYXZlLTEwLjE0LjYtMThHODctUmVsZWFzZS12ZXJzaW9uLXdpdGgtQ2xvdmVyLTUwMzMtb3JpZ2luYWwtaW1hZ2UuaHRtbA==">【黑果小兵】macOS Mojave 10.14.6 18G87 正式版 with Clover 5050原版镜像[双EFI双平台终极版]<i class="fa fa-external-link-alt"></i></span></p><p>远景论坛<span class="exturl" data-url="aHR0cDovL2Jicy5wY2JldGEuY29tL3ZpZXd0aHJlYWQtMTc3ODQ5OS0xLTEuaHRtbA==">修改dsdt实现电量显示方法（整理修改已有帖子）<i class="fa fa-external-link-alt"></i></span></p><p>tonymacx86<span class="exturl" data-url="aHR0cHM6Ly93d3cudG9ueW1hY3g4Ni5jb20vdGhyZWFkcy9zb2x2ZWQtaHAtb21lbi0xNS1kYy1iYXR0ZXJ5LWVycm9yLjI2MzgxNC8jcG9zdC0xODQxMDIz">HP OMEN 15-dc电池错误<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cudG9ueW1hY3g4Ni5jb20vdGhyZWFkcy9ndWlkZS1ob3ctdG8tcGF0Y2gtZHNkdC1mb3Itd29ya2luZy1iYXR0ZXJ5LXN0YXR1cy4xMTYxMDIv">[指南]如何修补DSDT的工作电池状态<i class="fa fa-external-link-alt"></i></span></p><h3 id="下载链接-镜像同步上传中"><a href="#下载链接-镜像同步上传中" class="headerlink" title="下载链接 镜像同步上传中"></a>下载链接 镜像同步上传中</h3><p>👍<strong>镜像来自于@黑果小兵的博客找的链接，我自己用的也是这个镜像！</strong></p><p>迅雷离线下载：[<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLmR0b3BzLmNjL2lzby9NYWNPUy8xMC4xNC9kYWxpYW5za3lfbWFjb3MvbWFjT1MlMjBNb2phdmUlMjAxMC4xNC42JTI4MThHODQlMjklMjBJbnN0YWxsZXIlMjB3aXRoJTIwQ2xvdmVyJTIwNTAyNy5kbWc=">请点击下载<i class="fa fa-external-link-alt"></i></span>] 感谢<code>@难忘情怀</code>提供下载资源</p><p>http下载链接:<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLmR0b3BzLmNjL2lzby9NYWNPUy9kYWxpYW5za3lfbWFjb3Mv">请点击下载<i class="fa fa-external-link-alt"></i></span> 感谢<code>@难忘情怀</code>提供下载资源</p><p>百毒云：链接: <span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMXl4N0Ffd2xmZXBwNnliVENSY3o0Y2c=">https://pan.baidu.com/s/1yx7A_wlfepp6ybTCRcz4cg<i class="fa fa-external-link-alt"></i></span> 提取码: <code>qrwt</code></p><p>MD5 (macOS Mojave 10.14.6(18G84) Installer with Clover 5027.dmg) = af934738cd02c4cefacf527d23532289</p><h3 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h3><ul><li>感谢各位大佬的开源。</li><li>感谢远景论坛的各位大佬提供的教程，以及<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RhbGlhbnNreQ==">黑果小兵<i class="fa fa-external-link-alt"></i></span>的镜像。</li></ul><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><p><strong>Q:如何进入BIOS或者设置启动项？</strong></p><p>A:开机后按下ESC键，然后根据指引选择</p><p><strong>Q:抹盘时失败</strong></p><p>A:看看是不是EFI的分区给的太小了，一般建议200M以上。这里尤其注意，有的人抹盘失败会导致Windows10进不去，我不知道原因是什么，但是建议在安装之前，多去看看别人怎么操作的，避免一些误区，同时：<strong>记得提前备份！！！记得提前备份！！！记得提前备份！！！</strong></p><p><strong>Q:安装时提示这个“安装 macOS xxxx”应用程序副本已损坏，不能用来安装macOS</strong></p><p>A:原因是旧版macOS 安装镜像中的证书过期，并且苹果没有更新证书日期。你打开终端，改一下时间就好了：<code>date 0201010116</code></p><h3 id="🔊如果扬声器无法使用的解决方案"><a href="#🔊如果扬声器无法使用的解决方案" class="headerlink" title="🔊如果扬声器无法使用的解决方案"></a>🔊如果扬声器无法使用的解决方案</h3><p>暗影精灵3的声卡是ALC295，找到我在repo中提供的<code>VoodooHDA-295.pkg</code>，并安装它。我很懒，只提供了这一种方案，Google给您提供了更好的方案，只是看您怎么选了！</p><h3 id="联系我"><a href="#联系我" class="headerlink" title="联系我"></a>联系我</h3><p>Email：631908942#qq.com</p><p>QQ群：821557332</p><p>如果大家有一些建议，也欢迎反馈！</p><p>👉GitHub:<strong><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Jlc3Njcm9mdC9IUC1PTUVOLTMtSGFja2ludG9zaA==">HP-OMEN-3-Hackintosh<i class="fa fa-external-link-alt"></i></span></strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;闲暇之余，又一次给暗影精灵3，装上了黑苹果(MacOS 10.14.6)。实现完美电源管理，以及不插电开机(暗影精灵系列的朋友，装过黑苹果的应该知道意味着什么)。并将efi以及补丁发布出来，以便相同的笔记本可以安装。&lt;/p&gt;
    
    </summary>
    
    
      <category term="黑苹果" scheme="https://blog.52bess.com/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
      <category term="黑苹果" scheme="https://blog.52bess.com/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="暗影精灵3" scheme="https://blog.52bess.com/tags/%E6%9A%97%E5%BD%B1%E7%B2%BE%E7%81%B53/"/>
    
      <category term="HP" scheme="https://blog.52bess.com/tags/HP/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu安装记录</title>
    <link href="https://blog.52bess.com/posts/2019/ubuntu.html"/>
    <id>https://blog.52bess.com/posts/2019/ubuntu.html</id>
    <published>2019-07-04T07:56:15.000Z</published>
    <updated>2020-04-29T08:50:52.361Z</updated>
    
    <content type="html"><![CDATA[<p>一直以来，都是在虚拟机里面使用Linux系统，但随着使用需求的增加，于是直接在笔记本中安装Ubuntu。基本上就是Windows 10 + Ubuntu18.04LTS双系统共存模式！</p><a id="more"></a><h2 id="浅谈"><a href="#浅谈" class="headerlink" title="浅谈"></a>浅谈</h2><p>很多同学在虚拟机中安装Linux(实际上不仅限于Ubuntu)，都会觉得安装很简单，基本上就是一直点下一步之类的，当然了，ArchLinux之流除外哈。不是说ArchLinux不好用(我觉得过渡动画还比较流畅，速度也很快)，而是它的安装过程，感觉就是个过滤用户的阴谋😂</p><p>既然要直接在笔记本上安装，那么，肯定会有不少坑的，而且还是双系统共存。最常见的就是分区和假死了吧(卡死在某一界面)。其它的诸如制作镜像，装驱动出现问题，点击现在重启卡死等。我在刚买我的暗影精灵3的时候，就尝试过双系统，然后，你懂的。我直接就留下了心里阴影，因为那时候没做备份，后来我备份的好习惯就是这么被逼出来的🙃</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="电脑配置"><a href="#电脑配置" class="headerlink" title="电脑配置"></a>电脑配置</h3><p>先介绍下我的电脑配置吧。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">产品名称 : OMEN by HP Laptop 15-ce0xx</span><br><span class="line">BIOS : F.18-11&#x2F;09&#x2F;2018</span><br><span class="line">内存总量 : 16 GB</span><br><span class="line">处理器名称 : Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz</span><br><span class="line">BIOS模式 : UEFI</span><br><span class="line">当前系统 : Windows 10 家庭中文版 1903 版本18632</span><br><span class="line">显卡 : NVIDIA GeForce GTX 1050</span><br></pre></td></tr></table></figure><h3 id="制作镜像"><a href="#制作镜像" class="headerlink" title="制作镜像"></a>制作镜像</h3><p>在哪里下，应该就不用我废话了，我个人更喜欢👍<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuLw==">清华大学开源软件镜像站<i class="fa fa-external-link-alt"></i></span>，大家没下载的可以在这里下。如果是要像我一样，想当作主力系统来用的，就下Ubuntu 18.04.02LTS版本，LTS是官方长期维护的版本，更稳定，一直维护到2023年4月。如果你跟我一样，喜欢最新的事务，那么，Ubuntu 19.04是你不错的选择，自带的UI变漂亮了许多，但遗憾的是，它的支持生命周期只到2020年1月😥</p><p>镜像制作工具，推荐<span class="exturl" data-url="aHR0cDovL3J1ZnVzLmllLw==">Rufus<i class="fa fa-external-link-alt"></i></span>吧，简单制作个镜像而已，必须要花里胡哨的功能，而且差不多就1M大小，免安装！！！</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="ubuntu/ubuntu01.png" alt></p><p>选项基本跟我保持一致即可，尤其是簇大小，大家都习惯默认的，但是部分奇葩的U盘，默认分配单元大小是16K或者32K，可能会导致安装系统过程中，出现一些不必要的问题。</p><p><strong>然后，在Windows下分一个给Ubuntu用的分区出来，确保为为分配状态！！！</strong></p><h3 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h3><h4 id="BIOS设置"><a href="#BIOS设置" class="headerlink" title="BIOS设置"></a>BIOS设置</h4><p>开机进入BIOS，hp暗影精灵是开机按F10，其它品牌请自行Google！</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="ubuntu/ubuntu02.png" alt></p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="ubuntu/ubuntu03.png" alt></p><p>如图，你需要将传统模式和安全启动模式(Secure Boot)都设置为禁用，然后把U盘的启动顺序调整到操作系统管理员的前面。如果你不禁用Secure Boot的话，Ubuntu系统将无法运行，不明白为什么的同学，自行Google！</p><h4 id="禁用N卡"><a href="#禁用N卡" class="headerlink" title="禁用N卡"></a>禁用N卡</h4><p>然后重点来了！！！你这时候应该进入引导界面了，但是不要着急！！！把光标移到<code>Install Ubuntu</code>，先别着急敲下回车键。先按下键盘上的字母键E，然后将<code>quiet splash ---</code>更改为 <code>quiet splash nouveau.modeset=0</code>，如图：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="ubuntu/ubuntu04.png" alt="ubuntu04"></p><p>改为：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="ubuntu/ubuntu05.png" alt="ubuntu05"></p><p>我在安装时忘记拍照了，这是在虚拟机中截的图，不过影响不大，只是用来参考的。改完之后，按下Ctrl+X或者F10，具体的那个界面下面会有显示的。</p><div class="note warning"><p>为什么要大家这么做呢？因为自己安装过的朋友，遇到过最头疼的问题应该就是安装过程中卡死了，我曾经也遇到过！没错，就是从你开始安装，直到安装完毕进入Ubuntu的桌面为止，随时都有可能卡死。但是在虚拟机中并不会这样，我去Google查了一下，很多解释差不多是这个意思：Ubuntu是开源系统，但是Nvidia并没有将显卡驱动开源，所以Ubuntu内核中自带的Nvidia显卡驱动版本就没有特别新，就导致安装过程中会卡死。所以进行上面的设置后，禁止Ubuntu加载自带的N卡驱动，问题就解决了。玩过黑苹果的朋友门，应该也碰到过相同的问题吧。</p></div><h4 id="安装选项"><a href="#安装选项" class="headerlink" title="安装选项"></a>安装选项</h4><p>只强调2件事，如果禁用N卡驱动之后，窗口变大的话，部分窗口被挤出屏幕，导致鼠标点不到按钮，可以按住Alt键然后用鼠标拖动窗口。其次，建议不要选择最小安装，这样以后你使用是，会少部分依赖库，给你造成麻烦(精通Linux的大神当我没说！)😋</p><h4 id="分区挂载"><a href="#分区挂载" class="headerlink" title="分区挂载"></a>分区挂载</h4><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="ubuntu/ubuntu06.png" alt></p><p>千万不要偷懒，一定要选择其它选项。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="ubuntu/ubuntu07.png" alt="ubuntu07"></p><p>挂载分区，因为是UEFI启动模式，所以只少要4个分区，以我的为例，我分了100个G给Ubuntu，且我的运行内存为16G。</p><table><thead><tr><th>分区类型</th><th>挂载点</th><th>大小</th><th>说明</th></tr></thead><tbody><tr><td>efi</td><td>efi</td><td>2046MB</td><td>用于安装efi</td></tr><tr><td>swap</td><td>swap</td><td>16386MB</td><td>交换分区</td></tr><tr><td>ext4</td><td>/home</td><td>42859MB</td><td>主目录</td></tr><tr><td>ext4</td><td>/</td><td>46080MB</td><td>根目录</td></tr></tbody></table><p>传统的Boot为主分区，UEFI模式就选择逻辑分区，efi分区用来存储引导器，系统的启动文件等。我分配了2G，硬盘不大的400M左右也可以。</p><p>swap分区选择主分区，这个交换分区就相当于是虚拟内存，一般设置为你的内存大小的同等大小，或者内存的2倍。</p><p><code>/home</code>即主目录，也叫用户的宿主目录。用户登录系统后，所处的位置就是/home，通常用来保存用户文件。没错，什么图片啊、视频啊、你下载的东西啊，都是存在这里的，给多少自己看着办吧。</p><p><code>/</code>即根目录，不要给太小，如果一共就四五十个G，至少也得给15G左右。</p><p>最后，在下面的<code>安装启动引导器的设备</code>那里，<strong>选择你刚才分出来的那个efi分区</strong>(划重点，要考)，然后再点击<code>现在安装</code>。然后后面的一堆设置可以按需求设置，然后，慢慢等。</p><h4 id="重点来了"><a href="#重点来了" class="headerlink" title="重点来了"></a>重点来了</h4><p>这一步很重要，因为实际上整个安装过程并没有结束，你还是得提防Ubuntu有没有搞你。在安装完成之后，系统会提示<code>已安装完成，是否重启</code>，这不废话吗，当然得选择<code>现在重启</code>了(逃)。。。😐</p><p>点击重启之后，拔掉U盘，然后<strong>在开机的品牌logo出现后，按一下、按一下、只按一下键盘左上角的ESC键</strong>。开机的时候，都会出现品牌logo的吧？你看到它之后，按一下就行了。为了防止某些同学说他电脑开机不显示品牌logo，那好，你插上鼠标，等重启后屏幕亮了之后(屏幕是黑色时也有亮的情况，别跟我杠这些)，然后看着你的鼠标，鼠标等亮了之后，按一下ESC键。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="ubuntu/ubuntu08.png" alt="ubuntu08"></p><p><center>(图片来源于互联网，我没拍照，不过都差不多)</center></p><p>这时候出现的画面，就是<code>GRUB</code>引导器，键盘选中<code>Ubuntu</code>这一项，然后按下键盘字母<code>E</code>键，是不是觉得刚才做过这步？是的，按下E之后，一样的操作。</p><p>把光标移到<code>Install Ubuntu</code>，先别着急敲下回车键。先按下键盘上的字母键E，然后将<code>quiet splash ---</code>更改为 <code>quiet splash nouveau.modeset=0</code>，如图：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="ubuntu/ubuntu04.png" alt="ubuntu04"></p><p>改为：(只要让那一串代码变成下图这样，这串代码前面和后面不变，你不用管它是什么)</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="ubuntu/ubuntu05.png" alt="ubuntu05"></p><p>到这里，应该就可以正常地进入系统了。</p><h2 id="安装之后"><a href="#安装之后" class="headerlink" title="安装之后"></a>安装之后</h2><h3 id="更换镜像源"><a href="#更换镜像源" class="headerlink" title="更换镜像源"></a>更换镜像源</h3><p>由于一系列总所周知的原因，我们需要更换镜像源为国内的源，我推荐使用<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2hlbHAvdWJ1bnR1Lw==">清华大学的镜像源<i class="fa fa-external-link-alt"></i></span>，其它源也可以用类似的方法添加。</p><p><strong>先备份好习惯！</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp &#x2F;etc&#x2F;apt&#x2F;sources.list &#x2F;etc&#x2F;apt&#x2F;sources.list.bak</span><br></pre></td></tr></table></figure><p>打开编辑源列表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit &#x2F;etc&#x2F;apt&#x2F;sources.list</span><br></pre></td></tr></table></figure><p>将文件内所有文件清空，然后将下列清华源全部copy进去：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"># 预发布软件源，不建议启用</span><br><span class="line"># deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>然后用清华源更新一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><p>如果你不知道这两条命令干嘛的，请自行Google，按理说应该知道的！</p><h3 id="安装nVidia驱动"><a href="#安装nVidia驱动" class="headerlink" title="安装nVidia驱动"></a>安装nVidia驱动</h3><h4 id="自动安装"><a href="#自动安装" class="headerlink" title="自动安装"></a>自动安装</h4><p>推荐使用标准的Ubuntu仓库进行自动化安装，虽然版本不是最新的，但是<strong>更稳定</strong>！！！又不打游戏，用Linux一大原因不就是图个稳定嘛！</p><p>删除现有的系统自带N卡驱动以及相关的所有配置文件等：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get --purge remove nvidia*</span><br></pre></td></tr></table></figure><p>查看显卡设备，并显示系统推荐的驱动版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ubuntu-drivers devices</span><br></pre></td></tr></table></figure><p>安装系统推荐的驱动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ubuntu-drivers autoinstall</span><br></pre></td></tr></table></figure><h4 id="其它方案"><a href="#其它方案" class="headerlink" title="其它方案"></a>其它方案</h4><p>自行Google好嘛，只让你看最稳定的方式，要追求刺激，可以自己去追求，我怕出了问题要来怪我！</p><p>安装完之后，开机就不用再去设置了(重启后生效！)</p><h2 id="配置优化"><a href="#配置优化" class="headerlink" title="配置优化"></a>配置优化</h2><p>到这里基本上就结束了，其它的使用，我可以给一些建议！</p><ul><li><p>安装中文输入法，如：<code>搜狗</code>。</p></li><li><p>安装浏览器，如：<code>chrome</code>。</p></li><li><p>彻底卸载办公软件Libreoffice，改用WPS等。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt remove libreoffice-calc&#x2F;&#x2F;卸载libreoffice表格</span><br><span class="line">sudo apt remove libreoffice-draw&#x2F;&#x2F;卸载libreoffice绘图</span><br><span class="line">sudo apt remove libreoffice-impress &#x2F;&#x2F;卸载libreoffice幻灯片</span><br><span class="line">sudo apt remove libreoffice-writer  &#x2F;&#x2F;卸载libreoffice文档</span><br><span class="line">sudo apt remove libreoffice*&#x2F;&#x2F;清理所有libreoffice相关</span><br><span class="line">sudo apt purge libreoffice*&#x2F;&#x2F;清理libreoffice配置文件</span><br><span class="line">sudo apt autoremove&#x2F;&#x2F;清理libreoffice配置文件</span><br></pre></td></tr></table></figure><ul><li>安装思源宋体等好看的字体</li><li>UI透明化，配置终端(这个很重要)等。</li><li>安装Steam，开始白给。</li><li>安装一个好看的主题。</li><li>安装网易云音乐等。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一直以来，都是在虚拟机里面使用Linux系统，但随着使用需求的增加，于是直接在笔记本中安装Ubuntu。基本上就是Windows 10 + Ubuntu18.04LTS双系统共存模式！&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://blog.52bess.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://blog.52bess.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>更换为Google Fonts思源宋体！</title>
    <link href="https://blog.52bess.com/posts/2019/fonts.html"/>
    <id>https://blog.52bess.com/posts/2019/fonts.html</id>
    <published>2019-07-01T07:14:24.000Z</published>
    <updated>2020-04-29T08:49:32.203Z</updated>
    
    <content type="html"><![CDATA[<p>对于中文书籍来说，宋体一直是正文印刷的标准字体，而不是目前电子显示屏上普遍的黑体，因为<strong>宋体的衬线更适合长时间阅读</strong>。</p><p>本文是针对Hexo博客的NexT主题来设置的，不是这个的小伙伴们也可以参照着来看！</p><a id="more"></a><h3 id="修改字体"><a href="#修改字体" class="headerlink" title="修改字体"></a>修改字体</h3><h4 id="修改配置文件中的参数"><a href="#修改配置文件中的参数" class="headerlink" title="修改配置文件中的参数"></a>修改配置文件中的参数</h4><p>修改配置文件<code>_config.yml</code> ，找到<code>font</code>将下列代码中红色的部分修改成绿色的部分即可。可以根据实际情况稍作修改！</p><figure class="highlight diff"><figcaption><span>文件位置:~/blog/themes/next/_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">font:</span><br><span class="line"><span class="deletion">- enable: false</span></span><br><span class="line"><span class="addition">+ enable: true</span></span><br><span class="line"></span><br><span class="line">  # Uri of fonts host, e.g. //fonts.googleapis.com (Default).</span><br><span class="line">  # Uri字体主机，例如//fonts.googleapis.com（默认）。</span><br><span class="line"><span class="addition">+ host: https://fonts.loli.net</span></span><br><span class="line"></span><br><span class="line">  # Font options:字体选项：</span><br><span class="line">  # `external: true` will load this font family from `host` above.</span><br><span class="line">  # `family: Times New Roman`. Without any quotes.</span><br><span class="line">  # `size: xx`. Use `px` as unit.</span><br><span class="line"></span><br><span class="line">  # Global font settings used for all elements in &lt;body&gt;.</span><br><span class="line">  # 用于&lt;body&gt;中所有元素的全局字体设置。</span><br><span class="line">  global:</span><br><span class="line">    external: true</span><br><span class="line"><span class="addition">+   family: Noto Serif SC</span></span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line">  # Font settings for Headlines (H1, H2, H3, H4, H5, H6).</span><br><span class="line">  # 标题的字体设置（H1，H2，H3，H4，H5，H6）。</span><br><span class="line">  # Fallback to `global` font settings.</span><br><span class="line">  # 回退到`global`字体设置。</span><br><span class="line">  headings:</span><br><span class="line">    external: true</span><br><span class="line"><span class="addition">+   family: Noto Serif SC</span></span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line">  # Font settings for posts.帖子的字体设置</span><br><span class="line">  # Fallback to `global` font settings.回退到`global`字体设置。</span><br><span class="line">  posts:</span><br><span class="line">    external: true</span><br><span class="line"><span class="addition">+   family: Noto Serif SC</span></span><br><span class="line"></span><br><span class="line">  # Font settings for Logo.LOGO的字体设置。</span><br><span class="line">  # Fallback to `global` font settings.回退到`global`字体设置。</span><br><span class="line">  logo:</span><br><span class="line">    external: true</span><br><span class="line"><span class="addition">+   family: Noto Serif SC</span></span><br><span class="line">    size:</span><br></pre></td></tr></table></figure><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p>找到主题的<code>base.styl</code>文件，具体位置为<code>~/blog/themes/next/source/css/_variables/base.styl</code>,然后修改相关数据！</p><figure class="highlight diff"><figcaption><span>文件位置:~/blog/themes/next/source/css/_variables/base.styl</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">-$font-family-monospace    = consolas, Menlo, $font-family-chinese, monospace</span></span><br><span class="line"><span class="addition">+$font-family-monospace    = consolas, Menlo, $font-family-base, monospace</span></span><br><span class="line"><span class="deletion">-$font-family-monospace    = get_font_family('codes'), consolas, Menlo, $font-family-chinese, monospace if get_font_family('codes')</span></span><br><span class="line"><span class="addition">+$font-family-monospace    = get_font_family('codes'), consolas, Menlo, $font-family-base, monospace if get_font_family('codes')</span></span><br></pre></td></tr></table></figure><h3 id="自定义项目"><a href="#自定义项目" class="headerlink" title="自定义项目"></a>自定义项目</h3><h4 id="设置字体大小"><a href="#设置字体大小" class="headerlink" title="设置字体大小"></a>设置字体大小</h4><p>如果你看不习惯默认(原来)的字体大小的话，你可以尝试修改它！</p><figure class="highlight diff"><figcaption><span>文件位置:~/blog/themes/next/source/css/_variables/base.styl</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// Font size</span><br><span class="line">$font-size-base           = 14px//改成你想要的即可！</span><br></pre></td></tr></table></figure><h4 id="设置字体颜色"><a href="#设置字体颜色" class="headerlink" title="设置字体颜色"></a>设置字体颜色</h4><p>没错，你甚至可以设置不同的颜色！</p><figure class="highlight diff"><figcaption><span>文件位置:~/blog/themes/next/source/css/_custom/custom.styl</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//修改字体颜色</span><br><span class="line">body &#123;</span><br><span class="line">    color: &lt;在这里填上你想要的颜色，如：#000&gt;;//别漏了分号！</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note warning"><p>本文参考自reuixiy的<span class="exturl" data-url="aHR0cHM6Ly9pby1vaS5tZS90ZWNoL25vdG8tc2VyaWYtc2MtYWRkZWQtb24tZ29vZ2xlLWZvbnRzLmh0bWwjbWFpbg==">Google Fonts已支持思源宋体！<i class="fa fa-external-link-alt"></i></span>点击即可访问！</p></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于中文书籍来说，宋体一直是正文印刷的标准字体，而不是目前电子显示屏上普遍的黑体，因为&lt;strong&gt;宋体的衬线更适合长时间阅读&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;本文是针对Hexo博客的NexT主题来设置的，不是这个的小伙伴们也可以参照着来看！&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://blog.52bess.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://blog.52bess.com/tags/Hexo/"/>
    
      <category term="Google Fonts" scheme="https://blog.52bess.com/tags/Google-Fonts/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown写作的艺术</title>
    <link href="https://blog.52bess.com/posts/2019/markdown.html"/>
    <id>https://blog.52bess.com/posts/2019/markdown.html</id>
    <published>2019-06-26T08:20:34.000Z</published>
    <updated>2020-02-12T05:47:27.927Z</updated>
    
    <content type="html"><![CDATA[<p>先鸽🕊着…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;先鸽🕊着…&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="markdown" scheme="https://blog.52bess.com/categories/markdown/"/>
    
    
      <category term="markdown" scheme="https://blog.52bess.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>炫酷的主页</title>
    <link href="https://blog.52bess.com/posts/2019/diy.html"/>
    <id>https://blog.52bess.com/posts/2019/diy.html</id>
    <published>2019-05-30T12:11:14.000Z</published>
    <updated>2020-03-16T06:50:03.984Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="diy/diy001.png" alt></p><p>周末放假回家，给自己的<code>Hexo</code>博客自定义了一个首页，看起来炫酷多了。实现简单，操作步骤稍微繁琐了一点，因为涉及到要修改的东西太多了。需要一点<code>HTML</code>和<code>css</code>基础，主要就是。。。算了，干啥都要时间，直接进入正题！</p><a id="more"></a><p><strong>zhuimeng.online域名没有续费，本文基本已作废</strong></p><h2 id="结构分析"><a href="#结构分析" class="headerlink" title="结构分析"></a>结构分析</h2><p>首先，我们看到博客名字后面的渐变色块，就是用的最基础的css渐变动画做的效果。其实我本来想用<code>Google</code>的<span class="exturl" data-url="aHR0cHM6Ly9tYXRlcmlhbC5pby9kZXNpZ24v">Material Design<i class="fa fa-external-link-alt"></i></span>做一个响应式的，奈何水平不够，设计这一块儿，真玩不来。</p><p>头像本来是个方块图，用PPT修成圆形的，然后放了上去。下面的四个图标，用的是阿里巴巴矢量图标库—<span class="exturl" data-url="aHR0cHM6Ly93d3cuaWNvbmZvbnQuY24v">Iconfont<i class="fa fa-external-link-alt"></i></span>的图标，侵权请联系我删除！然后最下面就是固定的版权信息，最后就是背景动画！</p><h2 id="背景特效"><a href="#背景特效" class="headerlink" title="背景特效"></a>背景特效</h2><p>背景用的是已经造好的轮子，基于<code>JavaScript</code>开发的。原作者在👍<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0plcmVtYm9vL2FuaW1hdGVkLW1lc2gtbGluZXM=">GitHub<i class="fa fa-external-link-alt"></i></span>开源了，大家喜欢可以star支持一下！<strong>这里我就想吐槽一下了，国内很多模板资源站之类的网站，拿人家辛辛苦苦写的代码，假装是自己的卖钱。知道最可耻的是什么吗？这种人还好意思说请尊重劳动成果！！！</strong></p><p>我基于现成的轮子，成功的让车驱动起来了，感兴趣的大家可以看看！我也放到<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Jlc3N5amwvYmVzc2Nyb2Z0LmdpdGh1Yi5pbw==">GitHub<i class="fa fa-external-link-alt"></i></span>上去了！你可以直接去下载，或者用一下指令<code>clone</code>到本地。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;bessyjl&#x2F;besscroft.github.io.git</span><br></pre></td></tr></table></figure><p>如果你觉得不错的话，可以按照我的模板修改成你自己的并使用它，我没啥要求，给个Star可以吗😘</p><h2 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h2><p>1.先去<code>GitHub</code>创建一个<code>repo</code>，名字就用<code>blog</code>就行。</p><p>2.要修改<code>hexo</code>博客的生成目录信息，打开根目录下的配置文件：</p><figure class="highlight diff"><figcaption><span>文件位置:\_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">-url: http://www.zhuimeng.online</span></span><br><span class="line"><span class="deletion">-root: /</span></span><br><span class="line"><span class="addition">+url: http://www.zhuimeng.online/blog      # url后需要加：/刚才创建的仓库名</span></span><br><span class="line"><span class="addition">+root: /blog/                              # root修改为：/刚才创建的仓库名/</span></span><br><span class="line">**********</span><br><span class="line">**********</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line"><span class="deletion">- repo: git@github.com:besscroft/besscroft.github.io</span></span><br><span class="line"><span class="addition">+ repo: git@github.com:besscroft/blog.git         # 修改为新建的仓库地址</span></span><br><span class="line">  barnch: master</span><br></pre></td></tr></table></figure><p>3.重新部署</p><p>这个时候，删掉原来的<code>CNAME</code>文件，不然会解析失败，记得在别的地方备份一份，等会还要用。然后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure><p>这时候我们去刚才创建的<code>repo</code>去看，已经好了:</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="diy/diy002.png" alt></p><p>4.上传自定义首页</p><p>这时候，我们先<code>clone</code>一份原来的<code>repo</code>的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;besscroft&#x2F;besscroft.github.io.git</span><br></pre></td></tr></table></figure><p>然后删除所有的文件，只留下<code>CNAME</code>文件，当然<code>README.md</code>文件也可以留下。复制我们已经写好的自定义首页的相关文件到这个本地仓库的文件夹，然后老规矩：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;update index&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>然后再访问我们原来的域名<span class="exturl" data-url="aHR0cDovL3d3dy56aHVpbWVuZy5vbmxpbmU=">http://www.zhuimeng.online<i class="fa fa-external-link-alt"></i></span>，发现已经成功了。然后博客地址变成了<span class="exturl" data-url="aHR0cDovL3d3dy56aHVpbWVuZy5vbmxpbmUvYmxvZw==">http://www.zhuimeng.online/blog<i class="fa fa-external-link-alt"></i></span>。</p><h2 id="自定义文件"><a href="#自定义文件" class="headerlink" title="自定义文件"></a>自定义文件</h2><p>在博客自定义首页文件<code>index.html</code>中，我们需要把跳转链接到<span class="exturl" data-url="aHR0cDovL3d3dy56aHVpbWVuZy5vbmxpbmUvYmxvZw==">http://www.zhuimeng.online/blog<i class="fa fa-external-link-alt"></i></span>，不然就没地方访问你的博客了，因为别人并不知道要访问<code>/blog</code>路径。</p><p>我用的如下方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--标题--&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;title_bess&quot;&gt;</span><br><span class="line">&lt;h1 class&#x3D;&quot;h1_bess&quot;&gt;&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.zhuimeng.online&#x2F;blog&quot;&gt;Bess&#39;s Blog&lt;&#x2F;a&gt;&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--社交图标--&gt;</span><br><span class="line">&lt;!--博客--&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;go_bess_blog&quot;&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.zhuimeng.online&#x2F;blog&quot;&gt;&lt;img src&#x3D;&quot;images&#x2F;blogger.png&quot; alt&#x3D;&quot;Blog&quot; &#x2F;&gt;&lt;&#x2F;a&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h2 id="最痛苦的步骤"><a href="#最痛苦的步骤" class="headerlink" title="最痛苦的步骤"></a>最痛苦的步骤</h2><p>你以为这样就结束了？你难道没发现访问自己的博客，一大堆的报错？</p><div class="note warning"><p>你需要把hexo调用的每一个资源文件的路径前面加上/blog，否则就会导致无法调用，然后很多效果加载不出来。</p></div><p>重点不是这，是你根本不知道是哪些，在哪里。只能跟着报错信息去找，我大部分已经找到了，并改正了路径，但是还是有部分找不到了(懒癌)，反正已经不影响博客体验，我也就不管它了，哈哈哈😂</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg&quot; data-original=&quot;diy/diy001.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;周末放假回家，给自己的&lt;code&gt;Hexo&lt;/code&gt;博客自定义了一个首页，看起来炫酷多了。实现简单，操作步骤稍微繁琐了一点，因为涉及到要修改的东西太多了。需要一点&lt;code&gt;HTML&lt;/code&gt;和&lt;code&gt;css&lt;/code&gt;基础，主要就是。。。算了，干啥都要时间，直接进入正题！&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://blog.52bess.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://blog.52bess.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>给你的博客Duang</title>
    <link href="https://blog.52bess.com/posts/2019/duang.html"/>
    <id>https://blog.52bess.com/posts/2019/duang.html</id>
    <published>2019-05-12T04:09:53.000Z</published>
    <updated>2020-03-30T07:10:23.833Z</updated>
    
    <content type="html"><![CDATA[<p>来过我博客的小可爱们应该会知道，五一期间我把博客重新弄了一遍。如果大家之前就来过我的博客的话，应该会知道，现在的美观程度和特效，是之前远无法比拟的！那么我们来看看，这些特效是怎么Duang上去的呢😜</p><a id="more"></a><h3 id="添加结束标记"><a href="#添加结束标记" class="headerlink" title="添加结束标记"></a>添加结束标记</h3><p>在文末添加自定义的结束标记，效果如下：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="duang/duang01.png" alt></p><p>新建布局模板文件 post-end-tag.swig，添加如下代码：</p><figure class="highlight plain"><figcaption><span>文件位置:themes\next\layout\_macro\post-end-tag.swig</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line">    &lt;div style&#x3D;&quot;text-align:center;color:#bfbfbf;font-size:16px;&quot;&gt;</span><br><span class="line">      &lt;span&gt;-------- 本文结束 &lt;&#x2F;span&gt;</span><br><span class="line">      &lt;i class&#x3D;&quot;fa fa-&#123;&#123; config.post_end_tag.icon &#125;&#125;&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">      &lt;span&gt; 感谢阅读 --------&lt;&#x2F;span&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>在文章布局模板中添加如下代码：</p><figure class="highlight diff"><figcaption><span>文件位置:themes\next\layout\_macro\post.swig</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;#####################&#125;</span><br><span class="line">&#123;### END POST BODY ###&#125;</span><br><span class="line">&#123;#####################&#125;</span><br><span class="line"></span><br><span class="line"><span class="addition">+&#123;% if config.post_end_tag.enabled and not is_index %&#125;</span></span><br><span class="line"><span class="addition">+&lt;div&gt;</span></span><br><span class="line"><span class="addition">+&#123;% include 'post-end-tag.swig' %&#125;</span></span><br><span class="line"><span class="addition">+&lt;/div&gt;</span></span><br><span class="line"><span class="addition">+&#123;% endif %&#125;</span></span><br><span class="line"></span><br><span class="line"> &#123;% if theme.wechat_subscriber.enable and not is_index %&#125;</span><br><span class="line">   &#123;% include '../_partials/post/wechat-subscriber.swig' %&#125;</span><br><span class="line"> &#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>在站点配置文件末尾添加如下代码：</p><figure class="highlight plain"><figcaption><span>文件位置:_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">post_end_tag:</span><br><span class="line">  enabled: true  # 是否开启文末的本文结束标记</span><br><span class="line">  icon: paw # 结束标记之间的图标</span><br></pre></td></tr></table></figure><p>重新推送后即可在文末看到结束标记。</p><h3 id="为标签添加图标"><a href="#为标签添加图标" class="headerlink" title="为标签添加图标"></a>为标签添加图标</h3><p>默认情况下标签前缀是 <code>#</code> 字符，大家其实可以通过修改主题源码，将标签的字符前缀改为图标前缀，更改后效果如下：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="duang/duang02.png" alt></p><p>在文章布局模板中找到文末标签相关代码段，将 <code>#</code> 换成 <code>&lt;i class=&quot;fa fa-tags&quot;&gt;&lt;/i&gt;</code> 即可：</p><figure class="highlight diff"><figcaption><span>文件位置:themes\next\layout\_macro\post.swig</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">  &lt;footer class="post-footer"&gt;</span><br><span class="line">    &#123;% if post.tags and post.tags.length and not is_index %&#125;</span><br><span class="line">      &lt;div class="post-tags"&gt;</span><br><span class="line">        &#123;% for tag in post.tags %&#125;</span><br><span class="line"><span class="deletion">-         &lt;a href="&#123;&#123; url_for(tag.path) &#125;&#125;" rel="tag"&gt;# &#123;&#123; tag.name &#125;&#125;&lt;/a&gt;</span></span><br><span class="line"><span class="addition">+         &lt;a href="&#123;&#123; url_for(tag.path) &#125;&#125;" rel="tag"&gt;&lt;i class="fa fa-tags"&gt;&lt;/i&gt; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">    ...</span><br><span class="line">  &lt;/footer&gt;</span><br></pre></td></tr></table></figure><h3 id="侧边栏放左边"><a href="#侧边栏放左边" class="headerlink" title="侧边栏放左边"></a>侧边栏放左边</h3><p>侧边栏默认是在右边的，我怎么都看不习惯，总感觉有点别扭。那么，给整到左边就完事儿啦！</p><p>在自定义样式文件中添加如下规则：</p><figure class="highlight plain"><figcaption><span>文件位置:themes\next\source\css\_custom\custom.styl</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;侧边栏放在左边</span><br><span class="line">.sidebar-toggle &#123;</span><br><span class="line">  left: 30px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.sidebar &#123;</span><br><span class="line">  left: 0px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改动效脚本代码：</p><figure class="highlight diff"><figcaption><span>文件位置:themes\next\source\js\motion.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$(document)</span><br><span class="line">  .on('sidebar.isShowing', function() &#123;</span><br><span class="line">    NexT.utils.isDesktop() &amp;&amp; $('body').velocity('stop').velocity(</span><br><span class="line"><span class="deletion">-     &#123;paddingRight: SIDEBAR_WIDTH&#125;,</span></span><br><span class="line"><span class="addition">+     &#123;paddingLeft: SIDEBAR_WIDTH&#125;,</span></span><br><span class="line">      SIDEBAR_DISPLAY_DURATION</span><br><span class="line">    );</span><br><span class="line">  &#125;)</span><br><span class="line">  .on('sidebar.isHiding', function() &#123;</span><br><span class="line">  &#125;);</span><br><span class="line">  ...</span><br><span class="line">  ...</span><br><span class="line">  ...</span><br><span class="line">  hideSidebar: function() &#123;</span><br><span class="line"><span class="deletion">-   NexT.utils.isDesktop() &amp;&amp; $('body').velocity('stop').velocity(&#123;paddingRight: 0&#125;);</span></span><br><span class="line"><span class="addition">+   NexT.utils.isDesktop() &amp;&amp; $('body').velocity('stop').velocity(&#123;paddingLeft: 0&#125;);</span></span><br><span class="line">    this.sidebarEl.find('.motion-element').velocity('stop').css('display', 'none');</span><br><span class="line">    this.sidebarEl.velocity('stop').velocity(&#123;width: 0&#125;, &#123;display: 'none'&#125;);</span><br><span class="line"></span><br><span class="line">    sidebarToggleLines.init();</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样的话就可以将侧边栏放置在左边了，但是当窗口宽度缩小到 991px 之后会出现样式错误，侧边栏收缩消失但是页面左侧仍有留白间距，此时修改如下代码即可：</p><figure class="highlight diff"><figcaption><span>文件位置:themes\next\source\css\_common\scaffolding\base.styl</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">  position: relative; // Required by scrollspy</span><br><span class="line">  font-family: $font-family-base;</span><br><span class="line">  font-size: $font-size-base;</span><br><span class="line">  line-height: $line-height-base;</span><br><span class="line">  color: $text-color;</span><br><span class="line">  background: $body-bg-color;</span><br><span class="line"><span class="deletion">- -tablet-mobile() &#123; padding-right: 0 !important; &#125;</span></span><br><span class="line"><span class="addition">+ +tablet-mobile() &#123; padding-right: 0 !important; &#125;</span></span><br><span class="line">  +desktop-large() &#123; font-size: $font-size-large; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="模块边缘摆动效果"><a href="#模块边缘摆动效果" class="headerlink" title="模块边缘摆动效果"></a>模块边缘摆动效果</h3><p>这事就要从<span class="exturl" data-url="aHR0cHM6Ly93d3cub2ZpbmQuY24v">猪猪侠的博客<i class="fa fa-external-link-alt"></i></span>说起了，也要和GitHub扯上关系了！！！也参考了<span class="exturl" data-url="aHR0cDovL3llYXJpdG8uY24v">Yearito’s Blog<i class="fa fa-external-link-alt"></i></span>的博客。当然，完全照搬是行不通的，毕竟主题版本不同，稍有差距，我得按照自己实际的改才行！目前是NexT7.1.0，到我写这篇文章的时候还是最新的(好像)也就是说，这不是挺好的么😀</p><p>说白了，只要有了js文件，再你主题怎么变化，万变不离其宗，稍作修改，总是能把特效添加上去的，Duang~</p><p>点击下方按钮下载脚本，并放到 themes\next\source\js\ 目录下：</p><p><a id="download" href="https://mirrors.52bess.com/blog/js/wobblewindow.js" target="_blank" rel="noopener"><i class="fa fa-download"></i><span> Download Now</span><br></a></p><p>在主题自定义布局文件中添加以下代码：</p><figure class="highlight plain"><figcaption><span>文件位置:themes\next\layout\_layout.swig</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&#123;# wobble窗口摆动特效 #&#125;</span><br><span class="line">&#123;% if theme.wobble.enable %&#125;</span><br><span class="line">  &lt;script src&#x3D;&quot;&#x2F;js&#x2F;wobblewindow.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    &#x2F;&#x2F;只在桌面版网页启用特效</span><br><span class="line">    if( window.innerWidth &gt; 768  )&#123;</span><br><span class="line">      $(document).ready(function () &#123;</span><br><span class="line">        &#123;% if theme.wobble.header %&#125;</span><br><span class="line">          $(&#39;#header&#39;).wobbleWindow(&#123;</span><br><span class="line">            radius: &#123;&#123; theme.wobble.radius &#125;&#125;,</span><br><span class="line">            movementTop: false,</span><br><span class="line">            movementLeft: false,</span><br><span class="line">            movementRight: false,</span><br><span class="line">            debug: false,</span><br><span class="line">          &#125;);</span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">        &#123;% if theme.wobble.sidebar %&#125;</span><br><span class="line">          $(&#39;#sidebar&#39;).wobbleWindow(&#123;</span><br><span class="line">            radius: &#123;&#123; theme.wobble.radius &#125;&#125;,</span><br><span class="line">            movementLeft: false,</span><br><span class="line">            movementTop: false,</span><br><span class="line">            movementBottom: false,</span><br><span class="line">            position: &#39;fixed&#39;,</span><br><span class="line">            debug: false,</span><br><span class="line">          &#125;);</span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">        &#123;% if theme.wobble.footer %&#125;</span><br><span class="line">          $(&#39;#footer&#39;).wobbleWindow(&#123;</span><br><span class="line">            radius: &#123;&#123; theme.wobble.radius &#125;&#125;,</span><br><span class="line">            movementBottom: false,</span><br><span class="line">            movementLeft: false,</span><br><span class="line">            movementRight: false,</span><br><span class="line">            position: &#39;absolute&#39;,</span><br><span class="line">            debug: false,</span><br><span class="line">          &#125;);</span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;&#x2F;script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>在自定义样式文件中添加以下样式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;窗口波动效果相关样式</span><br><span class="line">if hexo-config(&#39;wobble&#39;)  &#123;</span><br><span class="line">  .sidebar &#123;</span><br><span class="line">    box-shadow: none;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .wobbleTransparentBK&#123;</span><br><span class="line">    background-color: rgba(0,0,0,0) !important;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .wobbleTransparentLine&#123;</span><br><span class="line">    border-color: rgba(0,0,0,0) !important;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F;Next.Muse中为Header和Footer添加背景色</span><br><span class="line">  .header, .footer &#123;</span><br><span class="line">    background-color: rgb(245, 245, 245);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F;防止sidebar和footer同时开启动效时堆叠异常</span><br><span class="line">  .sidebar, .header &#123;</span><br><span class="line">    z-index: 1 !important;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F;防止挡住页末文章的阅读全文按钮</span><br><span class="line">  .main &#123;</span><br><span class="line">    padding-bottom: 200px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note warning"><p>Next.Muse 主题方案中 Header 和 Footer 是没有背景色的，所以需要添加背景色后才能看出边缘摆动效果。另外，实现边缘摆动效果所需的 z-index 属性可能会导致元素堆叠异常，需要添加以上样式来矫正。</p></div><p>在主题配置文件中添加以下代码：</p><figure class="highlight plain"><figcaption><span>文件位置:themes\next\_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># window woblle</span><br><span class="line">wobble:</span><br><span class="line">  enable: true  # 是否开启边缘波动效果</span><br><span class="line">  radius: 50  # 波动半径</span><br><span class="line">  sidebar: true  # 开启侧边栏边缘摆动</span><br><span class="line">  header: true  # 开启头部边缘摆动</span><br><span class="line">  footer: true  # 开启脚部边缘摆动</span><br></pre></td></tr></table></figure><p>如果从本地加载 JS 脚本速度较慢，可以考虑将脚本放到 CDN 上再引入。</p><h3 id="个性化回到顶部"><a href="#个性化回到顶部" class="headerlink" title="个性化回到顶部"></a>个性化回到顶部</h3><p>参考 <span class="exturl" data-url="aHR0cHM6Ly9kaXlnb2QubWUv">DIYgod 的博客<i class="fa fa-external-link-alt"></i></span> 里的特效，原理很简单：将 back-to-top 按钮添加图片背景，并添加 CSS3 动效即可。</p><p>首先，找到自己喜欢的图片素材放到 source\images\ 目录下：</p><p>或者：链接：<span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMUowZEpPYTJvV0Z3TlI4cHZHNnZCRlE=">https://pan.baidu.com/s/1J0dJOa2oWFwNR8pvG6vBFQ<i class="fa fa-external-link-alt"></i></span> 提取码：lstv </p><p>然后在自定义样式文件中添加如下代码：</p><figure class="highlight plain"><figcaption><span>文件位置:themes\next\source\css\_custom\custom.styl</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;自定义回到顶部样式</span><br><span class="line">.back-to-top &#123;</span><br><span class="line">  right: 60px;</span><br><span class="line">  width: 70px;  &#x2F;&#x2F;图片素材宽度</span><br><span class="line">  height: 900px;  &#x2F;&#x2F;图片素材高度</span><br><span class="line">  top: -900px;</span><br><span class="line">  bottom: unset;</span><br><span class="line">  transition: all .5s ease-in-out;</span><br><span class="line">  background: url(&quot;&#x2F;images&#x2F;scroll.png&quot;);</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F;隐藏箭头图标</span><br><span class="line">  &gt; i &#123;</span><br><span class="line">    display: none;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;.back-to-top-on &#123;</span><br><span class="line">    bottom: unset;</span><br><span class="line">    top: 100vh &lt; (900px + 200px) ? calc( 100vh - 900px - 200px ) : 0px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>刷新浏览器即可预览效果。</p><h3 id="豆瓣页面"><a href="#豆瓣页面" class="headerlink" title="豆瓣页面"></a>豆瓣页面</h3><p>为站点添加豆瓣阅读 / 电影 / 游戏页面，效果参考博客中的豆瓣页面！</p><div class="note primary"><p>具体是怎么实现的，可以参考GitHub上的一个开源项目，这个项目的创意是真的很不错！<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL215dGhzbWFuL2hleG8tZG91YmFu">Hexo—Douban<i class="fa fa-external-link-alt"></i></span></p></div><p>首先，在根目录下执行以下命令安装相关依赖：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-douban --save</span><br></pre></td></tr></table></figure><p>然后，在站点配置文件中添加以下内容：</p><figure class="highlight plain"><figcaption><span>文件位置:_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">douban:</span><br><span class="line">  user:  # 个人豆瓣ID</span><br><span class="line">  builtin: false</span><br><span class="line">  book:</span><br><span class="line">    title: &#39;This is my book title&#39;</span><br><span class="line">    quote: &#39;This is my book quote&#39;</span><br><span class="line">  movie:</span><br><span class="line">    title: &#39;This is my movie title&#39;</span><br><span class="line">    quote: &#39;This is my movie quote&#39;</span><br><span class="line">  game:</span><br><span class="line">    title: &#39;This is my game title&#39;</span><br><span class="line">    quote: &#39;This is my game quote&#39;</span><br><span class="line">  timeout: 10000</span><br></pre></td></tr></table></figure><div class="note info"><p>user: 填写豆瓣 ID。登陆豆瓣后点击个人主页，此时 url 中最后一段即是用户 ID，一般情况下会是一段数字，如果设置了个人域名的话，则个人域名即为 ID。</p></div><ul><li>builtin: 是否将生成页面的功能嵌入 <code>hexo s</code> 和 <code>hexo g</code> 中。</li><li>timeout: 爬取数据的超时时间。<div class="note warning"><p>如果只想生成某一个页面（比如只生成读书页面），把其他的配置项注释掉即可。</p></div></li></ul><p>在主题配置文件中新增菜单入口：</p><figure class="highlight plain"><figcaption><span>文件位置:themes\next\_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F; || home</span><br><span class="line">  tags: &#x2F;tags&#x2F; || tags</span><br><span class="line">  categories: &#x2F;categories&#x2F; || th</span><br><span class="line">  archives: &#x2F;archives&#x2F; || archive</span><br><span class="line">  about: &#x2F;about&#x2F; || user</span><br><span class="line">  books: &#x2F;books&#x2F; || book  </span><br><span class="line">  movies: &#x2F;movies&#x2F; || video-camera  </span><br><span class="line">  games: &#x2F;games&#x2F; || gamepad</span><br></pre></td></tr></table></figure><p>在语言包中新增菜单中文：</p><figure class="highlight diff"><figcaption><span>文件位置:themes\next\language\zh_CN.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  menu:</span><br><span class="line">    home: 首页</span><br><span class="line">    archives: 归档</span><br><span class="line">    categories: 分类</span><br><span class="line">    tags: 标签</span><br><span class="line"><span class="addition">+   movies: 电影</span></span><br><span class="line"><span class="addition">+   books: 读书</span></span><br><span class="line"><span class="addition">+   games: 游戏</span></span><br></pre></td></tr></table></figure><p>然后在根目录下执行以下命令生成豆瓣阅读 / 电影 / 游戏页面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo douban</span><br></pre></td></tr></table></figure><p>可选参数:</p><ul><li>-b | –books: 只生成豆瓣读书页面</li><li>-m | –movies: 只生成豆瓣电影页面</li><li>-g | –games: 只生成豆瓣游戏页面</li></ul><p>执行命令后，插件会根据用户提供的 ID 爬取豆瓣中的数据信息并在 <code>public</code> 目录下生成对应的页面，当服务器启动或部署后会将页面显示在对应的菜单路由下。</p><div class="note warning"><p>通常大家都喜欢用 hexo d 来作为 hexo deploy 命令的简化，但是当安装了 hexo douban 之后， hexo d 就会有歧义而无法执行，因为 hexo douban 跟 hexo deploy 的 Alias 都是 hexo d。</p></div><h2 id="😅今天就先写到这儿吧！"><a href="#😅今天就先写到这儿吧！" class="headerlink" title="😅今天就先写到这儿吧！"></a>😅今天就先写到这儿吧！</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;来过我博客的小可爱们应该会知道，五一期间我把博客重新弄了一遍。如果大家之前就来过我的博客的话，应该会知道，现在的美观程度和特效，是之前远无法比拟的！那么我们来看看，这些特效是怎么Duang上去的呢😜&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://blog.52bess.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://blog.52bess.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>愉快的五一假期</title>
    <link href="https://blog.52bess.com/posts/2019/wuyi.html"/>
    <id>https://blog.52bess.com/posts/2019/wuyi.html</id>
    <published>2019-05-05T04:50:15.000Z</published>
    <updated>2020-03-16T06:57:41.175Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浅谈"><a href="#浅谈" class="headerlink" title="浅谈"></a>浅谈</h2><p>这篇文章，是在五一假期结束之后写的，毕竟五一还是有点忙的！抽了2天时间来重构Hexo的代码，解决了很多未知的问题，每天都忙到凌晨，相信有过共同经历的人会明白的🤣总会有些花里胡哨的瑕疵，反正我是忍不了。😅</p><a id="more"></a><h2 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h2><p>我原先是采取的<code>GitHub</code>+<code>coding</code>方案，后来删掉了<code>coding</code>的仓库，只保留了<code>GitHub Pages</code>。最主要的还是用不习惯，虽然在某些地区访问的话，速度会更快。但是想必大多数用<code>Hexo</code>搭建博客，而且托管在<code>GitHub</code>的同学，是不在意只有少部分人来访博客的。因为需要大量的人访问，或者有这种需求的人，都会买云服务器。</p><p>正好<code>coding</code>的仓库空出来了，我就把<code>GitHub</code>的先放着，在<code>coding</code>上从头开始搭建、调试。等一切准备好了之后，在推送到<code>GitHub</code>上来，这样也不容易出问题。</p><h3 id="煎熬的过程"><a href="#煎熬的过程" class="headerlink" title="煎熬的过程"></a>煎熬的过程</h3><p>环境在电脑上已经有了，于是到<code>G</code>盘创建了一个新文件夹，用于<del>安装</del>初始化<code>Hexo</code>，然后安装推送插件之后直接推送到coding上。确定搭建完成了最基本的之后，就在本地慢慢调试。主题依旧用<code>NexT</code>主题，只不过换成了<code>NexT.Muse</code>，然后照着几个不同的、比较知名的博客的样式，做出了一些修改，也就是你们现在看到的样子。虽然不是很漂亮，但是也够看了😁都说程序猿的审美不行，我觉得程序猿们要大胆的说：不！给他们看看，我们不只有格子衫😎</p><div class="note warning"><p>注意一定要按时备份！</p></div><p>设计整个页面的过程，是基于chrome的，一般来说现在的新浏览器都算是支持比较好的。虽然个人比较喜欢后端，但至少前端知识好歹是知道一点的，也不至于无从上手🤣许多CSS样式，都是放在了<code>custom.styl</code>文件中。经过了这次折磨之后，现在可算是知道了以前期末的时候，都是老师留情了的。没有个几百上千行的CSS代码，怎么好意思及格呢。。。</p><p>在快完成的时候，也是遇到了一些小挫折的。。。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="wuyi/wuyi001.png" alt></p><p>嗯~ o(<em>￣▽￣</em>)o，控制台不报错，压根都不知道问题出在哪儿了。去Google查了查，重新安装了所有的相关依赖包也依旧没有解决问题。没错，绝望的我，又重新开始了一遍，但是因为相关文件都已经配置好了，基本上就是复制粘贴了一遍。最后熬了2天夜，终于还是弄完了。</p><p>对于想直接要博客的整份源码的同学，我只能说，没有人会给的啦，原因很简单！这不应该是一个索取和给予的过程，而应该是一个讨论交流的过程。也就是说，你问我博客的任何东西是怎么实现的，我都会告诉你(后面也会抽时间写相关的文章)，但是你直接要我当然不会给啊，毕竟也是自己的心血！</p><p>博客重构前后，源码从原先的200多M变成了40多M(包含了public文件夹)，但是东西一样不少，博客反而更美观，功能更强大。。。这个问题一直没想通，这多出来的100多M到底是啥！</p><h2 id="爱你三千遍"><a href="#爱你三千遍" class="headerlink" title="爱你三千遍"></a>爱你三千遍</h2><p>五一去影院看了<span class="exturl" data-url="aHR0cHM6Ly9tb3ZpZS5kb3ViYW4uY29tL3N1YmplY3QvMjYxMDA5NTgvP2Zyb209c2hvd2luZw==">《复仇者联盟4》<i class="fa fa-external-link-alt"></i></span>，不知道为啥，竟然有点心疼灭霸😥最好笑的镜头</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="wuyi/wuyi002.jpg" alt></p><h2 id="♂friend"><a href="#♂friend" class="headerlink" title="♂friend"></a>♂friend</h2><p>五一还去了同学家吃饭，来了一些初中同学，大家都在聊以前初中时的沙雕欢乐的事情（。＾▽＾）</p><p>嗯~ o(<em>￣▽￣</em>)o至于这个菜嘛，虽然我没参与，但是是大家一起努力弄出来的：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="wuyi/wuyi003.png" alt></p><p>哈哈，卖相不好，味道倒是还凑合！越长越大，就越是让人怀恋以前读书时的美(sha)好(diao)日子呢！</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;浅谈&quot;&gt;&lt;a href=&quot;#浅谈&quot; class=&quot;headerlink&quot; title=&quot;浅谈&quot;&gt;&lt;/a&gt;浅谈&lt;/h2&gt;&lt;p&gt;这篇文章，是在五一假期结束之后写的，毕竟五一还是有点忙的！抽了2天时间来重构Hexo的代码，解决了很多未知的问题，每天都忙到凌晨，相信有过共同经历的人会明白的🤣总会有些花里胡哨的瑕疵，反正我是忍不了。😅&lt;/p&gt;
    
    </summary>
    
    
      <category term="生活" scheme="https://blog.52bess.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="生活" scheme="https://blog.52bess.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>神器Termux的使用记录</title>
    <link href="https://blog.52bess.com/posts/2019/termux.html"/>
    <id>https://blog.52bess.com/posts/2019/termux.html</id>
    <published>2019-04-23T03:47:39.000Z</published>
    <updated>2020-03-16T06:57:06.994Z</updated>
    
    <content type="html"><![CDATA[<p>Termux是一个Android终端模拟器和Linux环境应用程序，可以直接使用，无需root或设置。自动安装最小基本系统 - 使用APT包管理器可以使用其他软件包。</p><a id="more"></a><h2 id="Termux使用"><a href="#Termux使用" class="headerlink" title="Termux使用"></a>Termux使用</h2><p>我觉得吧，虽然我喜欢玩游戏，但是我不怎么玩手游，我觉得还是以前的手游(主要指单机)好玩些，现在的手游都提不起我的兴趣了。那么，在安卓手机上，就有这样一个替代品——<span class="exturl" data-url="aHR0cHM6Ly90ZXJtdXguY29tLw==">Termux<i class="fa fa-external-link-alt"></i></span></p><h3 id="我的准备步骤"><a href="#我的准备步骤" class="headerlink" title="我的准备步骤"></a>我的准备步骤</h3><p>1.先下载安装，我是在Google play下的，或者可以去👉<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Rlcm11eC90ZXJtdXgtYXBw">GitHub<i class="fa fa-external-link-alt"></i></span>。</p><p>2.安装完之后，我们进入Termux</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="termux/termux01.png" alt></p><p>然后先更新源和升级软件包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update&#x2F;&#x2F;更新源</span><br><span class="line">apt upgrade  &#x2F;&#x2F;升级软件包</span><br></pre></td></tr></table></figure><p>3.安装一些基本的包，我推荐你安装一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt install git  &#x2F;&#x2F;分布式管理工具</span><br><span class="line">apt install wget   &#x2F;&#x2F;下载工具</span><br><span class="line">apt install vim    &#x2F;&#x2F;vim编辑器</span><br><span class="line">apt install tar  &#x2F;&#x2F;解压缩工具</span><br><span class="line">apt install less  &#x2F;&#x2F;termux下vim支持触摸移动光标移动位置</span><br></pre></td></tr></table></figure><p>4.更换国内源，没错，这样网络速度会更快，更换Termux清华大学源,加快软件包下载速度.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export EDITOR&#x3D;vi  &#x2F;&#x2F;设置默认编辑器</span><br><span class="line">apt edit-sources  &#x2F;&#x2F;编辑源文件</span><br><span class="line">将原来的https:&#x2F;&#x2F;termux.net官方源替换为http:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;termux stable main</span><br><span class="line">ESC，输入:wq保存并退出</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi  $PREFIX&#x2F;etc&#x2F;apt&#x2F;sources.list  &#x2F;&#x2F;直接编辑源文件</span><br><span class="line"># 安装基本工具</span><br><span class="line">pkg update</span><br><span class="line">pkg install vim curl wget git unzip unrar</span><br></pre></td></tr></table></figure><p>5.编辑启动问候语</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim $PREFIX&#x2F;etc&#x2F;motd  &#x2F;&#x2F;编辑问候语文件直接修改问候语</span><br></pre></td></tr></table></figure><h3 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h3><p><code>Ctrl</code>键是终端用户常用的按键 - 但大多数触摸键盘都没有这个按键。为此，Termux使用<code>音量减小按钮</code>来模拟<code>Ctrl</code>键。<br>例如，在触摸键盘上按<code>音量减小</code>+ <code>L</code>发送与在硬件键盘上按<code>Ctrl + L</code>相同的输入。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+A -&gt; 将光标移动到行首</span><br><span class="line">Ctrl+C -&gt; 中止当前进程</span><br><span class="line">Ctrl+D -&gt; 注销终端会话</span><br><span class="line">Ctrl+E -&gt; 将光标移动到行尾</span><br><span class="line">Ctrl+K -&gt; 从光标删除到行尾</span><br><span class="line">Ctrl+L -&gt; 清除终端</span><br><span class="line">Ctrl+Z -&gt; 挂起（发送SIGTSTP到）当前进程</span><br></pre></td></tr></table></figure><p><code>音量加键</code>也可以作为产生特定输入的<code>特殊键</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">音量加+E -&gt; Esc键</span><br><span class="line">音量加+T -&gt; Tab键</span><br><span class="line">音量加+1 -&gt; F1（和音量增加+ 2→F2等）</span><br><span class="line">音量加+0 -&gt; F10</span><br><span class="line">音量加+B -&gt; Alt + B，使用readline时返回一个单词</span><br><span class="line">音量加+F -&gt; Alt + F，使用readline时转发一个单词</span><br><span class="line">音量加+X -&gt; Alt+X</span><br><span class="line">音量加+W -&gt; 向上箭头键</span><br><span class="line">音量加+A -&gt; 向左箭头键</span><br><span class="line">音量加+S -&gt; 向下箭头键</span><br><span class="line">音量加+D -&gt; 向右箭头键</span><br><span class="line">音量加+L -&gt; | （管道字符）</span><br><span class="line">音量加+H -&gt; 〜（波浪号字符）</span><br><span class="line">音量加+U -&gt; _ (下划线字符)</span><br><span class="line">音量加+P -&gt; 上一页</span><br><span class="line">音量加+N -&gt; 下一页</span><br><span class="line">音量加+. -&gt; Ctrl + \（SIGQUIT）</span><br><span class="line">音量加+V -&gt; 显示音量控制</span><br><span class="line">音量加+Q -&gt; 显示额外的按键视图</span><br></pre></td></tr></table></figure><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><p><code>Termux</code>除了支持<code>apt</code>命令外,还在此基础上封装了<code>pkg</code>命令,<code>pkg</code>命令向下兼容<code>apt</code>命令.<code>apt</code>命令大家应该都比较熟悉了,这里直接简单的介绍下<code>pkg</code>命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">pkg search &lt;query&gt;              搜索包</span><br><span class="line">pkg install &lt;package&gt;           安装包</span><br><span class="line">pkg uninstall &lt;package&gt;         卸载包</span><br><span class="line">pkg reinstall &lt;package&gt;         重新安装包</span><br><span class="line">pkg update                      更新源</span><br><span class="line">pkg upgrade                     升级软件包</span><br><span class="line">pkg list-all                    列出可供安装的所有包</span><br><span class="line">pkg list-installed              列出已经安装的包</span><br><span class="line">pkg shoe &lt;package&gt;              显示某个包的详细信息</span><br><span class="line">pkg files &lt;package&gt;             显示某个包的相关文件夹路径</span><br></pre></td></tr></table></figure><h3 id="更换配色"><a href="#更换配色" class="headerlink" title="更换配色"></a>更换配色</h3><p>执行下面这个命令确保已经安装好了curl，没有的话根据它的提示安装，你没安装的话，执行了下面这条语句，它会给你一条安装curl的语句的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;github.com&#x2F;Cabbagec&#x2F;termux-ohmyzsh&#x2F;raw&#x2F;master&#x2F;install.sh)&quot;</span><br></pre></td></tr></table></figure><p>Android6.0以上会弹框确认是否授权,<code>允许</code>授权后<code>Termux</code>可以方便的访问SD卡文件.<br>脚本允许后先后有如下两个选项:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter a number, leave blank to not to change:&lt;自己选一个自己喜欢的&gt;</span><br><span class="line">Enter a number, leave blank to not to change:&lt;自己选一个自己喜欢的&gt;</span><br></pre></td></tr></table></figure><p>分别选择<code>背景色</code>和<code>字体</code><br>想要继续更改挑选配色的话,继续运行脚本来再次筛选:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/termux-ohmyzsh/install.sh</span><br></pre></td></tr></table></figure><p><code>exit</code>重启<code>sessions</code>会话生效配置，如想深入使用，请访问👉<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0NhYmJhZ2VjL3Rlcm11eC1vaG15enNo">GitHub<i class="fa fa-external-link-alt"></i></span></p><h3 id="管理员身份"><a href="#管理员身份" class="headerlink" title="管理员身份"></a>管理员身份</h3><h4 id="手机没有root"><a href="#手机没有root" class="headerlink" title="手机没有root"></a>手机没有root</h4><p>利用<code>proot</code>工具来模拟某些需要root的环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install proot</span><br></pre></td></tr></table></figure><p>然后终端下面输入:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termux-chroot</span><br></pre></td></tr></table></figure><p>即可模拟<code>root</code>环境<br>在这个<code>proot</code>环境下面,相当于是进入了<code>home</code>目录,可以很方便地进行一些配置.</p><p>在管理员身份下，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure><p>可回到普通用户身份。</p><h4 id="手机已经root"><a href="#手机已经root" class="headerlink" title="手机已经root"></a>手机已经root</h4><p>安装<code>tsu</code>,这是一个<code>su</code>的termux版本,用来在termux上替代<code>su</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install tsu</span><br></pre></td></tr></table></figure><p>然后终端下面输入:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tsu</span><br></pre></td></tr></table></figure><p>即可切换<code>root</code>用户,这个时候会弹出<code>root</code>授权提示,给予其<code>root</code>权限,效果图如下:</p><p>在管理员身份下，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure><p>可回到普通用户身份。</p><h2 id="人生苦短、我选Python"><a href="#人生苦短、我选Python" class="headerlink" title="人生苦短、我选Python"></a>人生苦短、我选Python</h2><h3 id="安装python2-7"><a href="#安装python2-7" class="headerlink" title="安装python2.7"></a>安装python2.7</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install python2</span><br></pre></td></tr></table></figure><p>安装完成后,使用<code>python2</code>命令启动<code>python 2.7.16</code>环境.</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="termux/termux02.jpg" alt></p><p>然后输入<code>exit()</code>退出。</p><h3 id="安装python3"><a href="#安装python3" class="headerlink" title="安装python3"></a>安装python3</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install python</span><br></pre></td></tr></table></figure><p>安装完成后,使用<code>python</code>命令启动<code>python 3.7.3</code>环境.</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="termux/termux03.jpg" alt></p><p>然后输入<code>exit()</code>退出。</p><h3 id="升级pip版本"><a href="#升级pip版本" class="headerlink" title="升级pip版本"></a>升级pip版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python2 -m pip install --upgrade pip</span><br><span class="line">python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure><p>这两条命令分别升级了<code>pip2</code>和<code>pip3</code>到最新版.</p><h3 id="ipython"><a href="#ipython" class="headerlink" title="ipython"></a>ipython</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkg install clang</span><br><span class="line">pip install ipython</span><br><span class="line">pip3.6 install ipython</span><br></pre></td></tr></table></figure><p>ipython是什么，怎么用，不需要过多的解释。在termux里，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ipython</span><br><span class="line">ipython2</span><br></pre></td></tr></table></figure><p>即可进入py2和py3的终端了。</p><h2 id="什么？还有Nodejs？"><a href="#什么？还有Nodejs？" class="headerlink" title="什么？还有Nodejs？"></a>什么？还有Nodejs？</h2><h3 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install nodejs</span><br></pre></td></tr></table></figure><h2 id="MariaDB-MySQL-安装"><a href="#MariaDB-MySQL-安装" class="headerlink" title="MariaDB(MySQL)安装"></a>MariaDB(MySQL)安装</h2><p>MariaDB数据库管理系统是MySQL的一个分支，主要由开源社区在维护，采用GPL授权许可。开发这个分支的原因之一是：甲骨文公司收购了MySQL后，有将MySQL闭源的潜在风险，因此社区采用分支的方式来避开这个风险。</p><h3 id="安装mariadb"><a href="#安装mariadb" class="headerlink" title="安装mariadb"></a>安装mariadb</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install mariadb</span><br></pre></td></tr></table></figure><h3 id="安装基本数据"><a href="#安装基本数据" class="headerlink" title="安装基本数据"></a>安装基本数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_install_db</span><br></pre></td></tr></table></figure><h3 id="启动mariadb服务"><a href="#启动mariadb服务" class="headerlink" title="启动mariadb服务"></a>启动mariadb服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld</span><br></pre></td></tr></table></figure><p>启动完成后,这个会话就一直存活,类似与debug调试一样,只有新建会话才可以操作.</p><h3 id="新建termux会话"><a href="#新建termux会话" class="headerlink" title="新建termux会话"></a>新建termux会话</h3><p>由于mariadb安装的时候没有设置密码,当前的<code>mariadb</code>密码为<code>空</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql</span><br></pre></td></tr></table></figure><p>直接进入<code>mariadb</code>数据库.输入<code>exit</code>退出数据库.</p><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><p>输入一下命令,进行密码相关的安全设置:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure><p><strong>输入当前输入密码</strong><br>因为是<code>空</code>密码,这里默认 <code>回车</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enter current password <span class="keyword">for</span> root (enter <span class="keyword">for</span> none):</span><br></pre></td></tr></table></figure><p><strong>设置新密码</strong><br>这里设置新的root密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Set root password? [Y/n] y</span><br><span class="line">New password:</span><br><span class="line">Re-enter new password:</span><br></pre></td></tr></table></figure><p><strong>其他设置</strong><br>下面根据个人偏好来进行设置,没有绝对的要求</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Remove anonymous users? [Y/n] Y                <span class="comment">#是否移除匿名用户</span></span><br><span class="line">Disallow root login remotely? [Y/n] n          <span class="comment">#是否不允许root远程登录</span></span><br><span class="line">Remove <span class="built_in">test</span> database and access to it? [Y/n] n <span class="comment">#是否移除test数据库</span></span><br><span class="line">Reload privilege tables now? [Y/n] y           <span class="comment">#是否重新加载表的权限</span></span><br></pre></td></tr></table></figure><h3 id="使用密码登录数据库"><a href="#使用密码登录数据库" class="headerlink" title="使用密码登录数据库"></a>使用密码登录数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -uroot -p</span><br><span class="line">Enter password:****</span><br></pre></td></tr></table></figure><h2 id="听说PHP是世界上最好的语言？"><a href="#听说PHP是世界上最好的语言？" class="headerlink" title="听说PHP是世界上最好的语言？"></a>听说PHP是世界上最好的语言？</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install php</span><br></pre></td></tr></table></figure><h3 id="编写测试文件"><a href="#编写测试文件" class="headerlink" title="编写测试文件"></a>编写测试文件</h3><p>在家目录下建一个<code>www</code>文件夹:<code>mkdir www</code><br>在<code>www</code>文件夹下新建一个<code>index.php</code>文件,其内容为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>具体操作如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir www</span><br><span class="line">vim www&#x2F;index.php</span><br><span class="line">tree www&#x2F;</span><br></pre></td></tr></table></figure><h3 id="启动WebServer"><a href="#启动WebServer" class="headerlink" title="启动WebServer"></a>启动WebServer</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -S 127.0.0.1:8080 -t www&#x2F;</span><br></pre></td></tr></table></figure><h2 id="nginx？"><a href="#nginx？" class="headerlink" title="nginx？"></a>nginx？</h2><p>Nginx 是一个高性能的 Web 和反向代理服务器, 它具有有很多非常优越的特性.</p><h3 id="安装nginx包"><a href="#安装nginx包" class="headerlink" title="安装nginx包"></a>安装nginx包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install nginx</span><br></pre></td></tr></table></figure><h3 id="切换root用户"><a href="#切换root用户" class="headerlink" title="切换root用户"></a>切换root用户</h3><p>尝试下能不能解析默认的<code>index.html</code>主页<br>这个文件在<code>termux</code>上的默认位置为<code>/data/data/com.termux/files/usr/share/nginx/html/index.html</code><br><strong>切换root用户</strong></p><p>默认的普通权限无法启动nginx,需要模拟<code>root</code>权限才可以</p><p>没有这个命令的话,手动安装<code>pkg install proot</code>包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termux-chroot</span><br></pre></td></tr></table></figure><p>进入模拟的root环境</p><h3 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h3><p>在模拟的root环境下启动<code>nginx</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx</span><br></pre></td></tr></table></figure><p><code>termux</code>上<code>nginx</code>默认的端口是<code>8080</code><br>查看下<code>8080</code>端口是否在运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an |grep 8080</span><br></pre></td></tr></table></figure><p>然后手机本地直接访问:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:8080</span><br></pre></td></tr></table></figure><p>查看下nginx是否正常启动。</p><h2 id="搭建WordPress"><a href="#搭建WordPress" class="headerlink" title="搭建WordPress"></a>搭建WordPress</h2><p>这里只是用<code>wordpress</code>做个典型安利来讲解,类似地可以安装<code>Discuz</code>,<code>DeDecms</code>等国内主流的PHP应用程序.</p><h3 id="方法一-使用PHP内置的Web-Server"><a href="#方法一-使用PHP内置的Web-Server" class="headerlink" title="方法一 使用PHP内置的Web Server"></a>方法一 使用PHP内置的Web Server</h3><p>确保安装并配置了<code>php</code>和<code>mariadb</code>,没有安装好的话,参考本文中具体细节部分来进行安装.<br><strong>新建数据库</strong></p><p><code>***</code> 这里是mysql的密码</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p*** -e"create database wordpress;show databases;"</span><br></pre></td></tr></table></figure><p><strong>下载解压wordpress</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://cn.wordpress.org/wordpress-4.9.4-zh_CN.zip</span><br><span class="line">pkg install unzip</span><br><span class="line">unzip wordpress-4.9.4-zh_CN.zip</span><br></pre></td></tr></table></figure><p><strong>启动PHP Web Server</strong><br>到解压后的<code>wordpress</code>目录下,执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> wordpress</span><br><span class="line">php -S 127.0.0.1:8080</span><br></pre></td></tr></table></figure><p>然后浏览器访问<code>127.0.0.1:8080</code>开始进行<code>wordperss</code>的安装.</p><h3 id="方法二-nginx-PHP-Mariadb"><a href="#方法二-nginx-PHP-Mariadb" class="headerlink" title="方法二 nginx+PHP+Mariadb"></a>方法二 nginx+PHP+Mariadb</h3><p>上面使用的方法一是直接使用PHP自带的<code>PHP Web Server</code>来运行的,看上去不够严谨~,所以这里用<code>nginx</code>来部署<code>wordpress</code>.<br>确保安装了<code>PHP</code>,<code>php-fpm</code>,<code>mariadb</code>,没有安装的话,参考本文中具体细节部分来进行安装和配置.<br><strong>新建数据</strong>和<strong>wordpress下载</strong>参考上面的<code>方法一</code>,这里主要介绍使用<code>nginx</code>去解析<code>wordpress</code>源文件.<br>当前解压后<code>wordpress</code>的绝对路径是:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/data/data/com.termux/files/home/wordpress</span><br></pre></td></tr></table></figure><p><strong>编辑nginx.conf</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p>修改为如下几处:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root   &#x2F;data&#x2F;data&#x2F;com.termux&#x2F;files&#x2F;home&#x2F;wordpress;</span><br><span class="line">        index  index.html index.htm index.php;</span><br><span class="line"></span><br><span class="line">fastcgi_param  SCRIPT_FILENAME  &#x2F;data&#x2F;data&#x2F;com.termux&#x2F;files&#x2F;home&#x2F;wordpress$fastcgi_script_name;</span><br></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="termux/termux04.png" alt></p><h4 id="启动php-fpm和nginx"><a href="#启动php-fpm和nginx" class="headerlink" title="启动php-fpm和nginx"></a>启动php-fpm和nginx</h4><p>在<code>proot</code>环境下面分别启动<code>php-fpm</code>和<code>nginx</code>,这里的<code>nginx</code>不在<code>proot</code>环境下启动后会出一些问题,感兴趣的可以自己去研究看看.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php-fpm</span><br><span class="line">nginx</span><br></pre></td></tr></table></figure><p><strong>安装wordpress</strong><br>浏览器访问:<code>http://127.0.0.1:8080/wp-admin/setup-config.php</code>进行安装.</p><p>同理安装其他博客也就轻而易举了,可玩性大大增加~</p><h2 id="搭建hexo博客"><a href="#搭建hexo博客" class="headerlink" title="搭建hexo博客"></a>搭建hexo博客</h2><p>没错还能搭建Hexo，但是我的hexo是用的电脑。但是这并不代表手机就不能玩了，你要是觉得不方便，还可以用电脑来控制。</p><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="部署hexo博客环境"><a href="#部署hexo博客环境" class="headerlink" title="部署hexo博客环境"></a>部署hexo博客环境</h3><p>然后建立一个目录,然后到这个目录下初始化hexo环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir hexoblog  #手动创建一个目录</span><br><span class="line">cd hexoblog  </span><br><span class="line">hexo init   #初始化hexo环境</span><br><span class="line">hexo g      #生成静态文件</span><br><span class="line">hexo s      #启动hexo</span><br></pre></td></tr></table></figure><p>然后就跑起来一个最基本的hexo博客<br>关于hexo博客的详细教程,建议搭建去参考hexo官方文档,我这里重点在于 termux 其他的不作过多的叙述.</p><h2 id="什么？还能玩Linux？"><a href="#什么？还能玩Linux？" class="headerlink" title="什么？还能玩Linux？"></a>什么？还能玩Linux？</h2><p>是的，可以玩。</p><h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><p>1.下载安装脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;funs.ml&#x2F;file&#x2F;atilo</span><br></pre></td></tr></table></figure><p>2.设置执行权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x  atilo</span><br></pre></td></tr></table></figure><p>3.运行atilo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;atilo</span><br></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="termux/termux05.png" alt></p><p>通过它告诉我们的用法，我们就可以来安装了，注意流量哦，记得用WiFi，土豪随意。</p><p>4.比如安装Arch试试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;atilo arch</span><br></pre></td></tr></table></figure><p>然后稍等一会儿，安装完成之后会提示你通过startarch指令启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">startarch</span><br></pre></td></tr></table></figure><p>5.如果你不想要了，也可以删除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;atilo -r arch</span><br></pre></td></tr></table></figure><h2 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h2><p>使用<code>ngrok</code>或者<code>frp</code>可以将<code>Termux</code>上面搭建的网站映射到外网上去,<code>手机建站</code>也不是不可能了.</p><h2 id="特别鸣谢"><a href="#特别鸣谢" class="headerlink" title="特别鸣谢"></a>特别鸣谢</h2><p>感谢<code>国光</code>大佬的<span class="exturl" data-url="aHR0cHM6Ly93d3cuc3Fsc2VjLmNvbS8yMDE4LzA1L3Rlcm11eC5odG1sI3RvYy1oZWFkaW5nLTQx">这篇文章<i class="fa fa-external-link-alt"></i></span>，虽然本文很多东西不是出自这篇文章，主要是我自己玩过的东西。但是呢，最开始接触<code>Termux</code>就是在国光大佬的文章下学会的，虽然也去<code>Google</code>爬了不少坑，但好歹会“用”了😂</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Termux是一个Android终端模拟器和Linux环境应用程序，可以直接使用，无需root或设置。自动安装最小基本系统 - 使用APT包管理器可以使用其他软件包。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://blog.52bess.com/categories/Linux/"/>
    
    
      <category term="Termux" scheme="https://blog.52bess.com/tags/Termux/"/>
    
  </entry>
  
  <entry>
    <title>Google sitemap不允许的网址解决办法</title>
    <link href="https://blog.52bess.com/posts/2019/googlesitemap.html"/>
    <id>https://blog.52bess.com/posts/2019/googlesitemap.html</id>
    <published>2019-04-10T05:03:47.000Z</published>
    <updated>2020-03-16T06:53:57.228Z</updated>
    
    <content type="html"><![CDATA[<p>搭建好自己的博客之后，当然得做收录。要想让别人在Google看到我的文章，就得添加站点地图。但是我在提交到Google的时候就给我报了错，不允许的网址。本文所说的方法只是众多解决方法中的一个，这个问题的原因也是有很多的，可以参考👉<span class="exturl" data-url="aHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vd2VibWFzdGVycy9hbnN3ZXIvNzQ1MTAwMT9obD16aC1IYW5zJnJlZl90b3BpYz03NDQwMDA2">站点地图报告<i class="fa fa-external-link-alt"></i></span></p><a id="more"></a><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在我提交之后，是这样显示的：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="googlesitemap/google001.png" alt></p><p>所以说，得找到错误。最开始我根本没意识到错误在哪里，也就是选择性眼瞎。。。但是仔细观察图片，发现网址不对，怎么能是http://&lt;yoursite.com&gt;(这里一看就不对)/***.html呢？于是恍然大悟！</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>综上所述，在我的站点文件<code>sitemap.xml</code>里面，也肯定都是错误的网址。可以看到地址都是错的，都是<code>yoursite.com</code>开头，这很明显不是我的网址啊😥所以说肯定是我某个地方没有修改，应该是默认值。然后检查我的<code>_config.yml</code>文件，一看果然是的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">url: http:&#x2F;&#x2F;yoursite.com</span><br><span class="line">root: &#x2F;</span><br><span class="line">permalink: :title.html</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure><p>可以看到<code>url</code>这一项是默认值，压根就没改！因为之前不影响使用，我就没管。然后这时候更正它：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">url: http:&#x2F;&#x2F;www.zhuimeng.online</span><br><span class="line">root: &#x2F;</span><br><span class="line">permalink: :title.html</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure><p>然后<code>hexo g -d</code>更新网站，再在 Google Search Console 重新提交一次 sitemap 就可以了。</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="googlesitemap/google002.png" alt></p><p>nice!大功告成啦！😄</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;搭建好自己的博客之后，当然得做收录。要想让别人在Google看到我的文章，就得添加站点地图。但是我在提交到Google的时候就给我报了错，不允许的网址。本文所说的方法只是众多解决方法中的一个，这个问题的原因也是有很多的，可以参考👉&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vd2VibWFzdGVycy9hbnN3ZXIvNzQ1MTAwMT9obD16aC1IYW5zJnJlZl90b3BpYz03NDQwMDA2&quot;&gt;站点地图报告&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Google Search Console" scheme="https://blog.52bess.com/categories/Google-Search-Console/"/>
    
    
      <category term="Google Search Console" scheme="https://blog.52bess.com/tags/Google-Search-Console/"/>
    
  </entry>
  
  <entry>
    <title>Playing CSO2 on your computer！</title>
    <link href="https://blog.52bess.com/posts/2019/cso2.html"/>
    <id>https://blog.52bess.com/posts/2019/cso2.html</id>
    <published>2019-04-03T13:55:50.000Z</published>
    <updated>2020-03-30T07:09:02.774Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>反恐精英Online2，英文名：Counter-Strike Online2，粉丝们称为蛋拐兔2。世纪天成公司于2013年9月5日正式宣布代理《反恐精英Online2》，国服于2015年2月5日起源首测，3月5号二测，4月22号正式公测。然而不辛的是，在2018年5月18日，国服（世纪天成代理）正式停止运营。</p><a id="more"></a><h3 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h3><p>嗯，反正我是在停服之前的一段时间，就已经没玩了。因为我害怕，害怕前一天还玩了，第二天就进不去游戏了，这并不是我想要的。在我的印象中，每年的圣诞节，是蛋拐兔最好玩的时候，人多，氛围也好。而18年的圣诞节，只能听听bgm艰难度日，到后来，当我得知有私服之后，我便又重新燃起了激情！！！</p><h2 id="Gaming"><a href="#Gaming" class="headerlink" title="Gaming"></a>Gaming</h2><h3 id="浅谈"><a href="#浅谈" class="headerlink" title="浅谈"></a>浅谈</h3><p>蛋拐兔2关服了，你是否还在苦恼呢？其实不少小伙伴们都知道有私服的，虽然不是我的，但是我也想借此机<br>会来推广，好让喜欢的朋友玩。我知道的私服都是免费的，都是公益性质的，搭建私服的大佬们完全是为了能<br>让大家接着玩，而且还免费。我录制视频和写教程，不出于任何形式的盈利目的，完全是基于一个热爱的老<br>玩家心态，告知和帮助那些跟我一样，曾经喜欢玩蛋拐兔的玩家，能够重新玩这款游戏。</p><center>不管你玩不玩，但是请记得，你的青春里有过它！！！</center><h3 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h3><p>首先，让我们感谢Ochii大神写的CSO2的主服务器和客户端启动程序，并且已经开源了！<br>还有“I’m Not MentaL”大神的GUI启动器。<br>同时也感谢国内的几个小团队，自己搭建了国内的私服，并在此基础上优化了服务端和启动端，让大家<br>不仅免费也更容易地van这款游戏，而且是联机的！谢谢你们做出的努力！感谢！</p><h3 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- Microsoft .NET Framework 4.5.2及以上</span><br><span class="line">- NodeJS（如果你玩国内的联机私服，则不需要安装）</span><br><span class="line">- 一些必要的游戏运行环境，如果你是平常玩游戏，那么我相信你的电脑上也已经有了</span><br></pre></td></tr></table></figure><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- 安装包，版本可选，看你想玩那种的。国内私服的话，也是有它们自己稍做了修改的版本的。</span><br><span class="line">链接：https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;15qVLo7jrJxG6r-kZBqqEdQ   提取码：1h7v </span><br><span class="line">- 主服务器 </span><br><span class="line">链接：https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;166igd4lFMR1R776ATMKN5w   提取码：h0ka </span><br><span class="line">- 客户端启动程序</span><br><span class="line">链接：https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1OeDIVXhbfgvDljVLdYxVfA   提取码：iwso </span><br><span class="line">- GUI启动器</span><br><span class="line">链接：https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1A8rh44NzJ8MSXU8edJqIwQ   提取码：czup </span><br><span class="line">- node.js（版本10或更高版本）</span><br></pre></td></tr></table></figure><h3 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h3><p>我们先假设，你已经安装了<span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL3poLWNuLw==">Node.js<i class="fa fa-external-link-alt"></i></span>，然后，在你的电脑硬盘里面，随便找一个盘。我放在E盘了，比如我的游戏路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">E:\Counter-Strike Online 2</span><br></pre></td></tr></table></figure><p>然后创建<code>Game</code>文件夹和<code>Server</code>文件夹，如图：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="cso2/cs001.png" alt></p><p>然后，将游戏的压缩包解压到<code>Game</code>文件夹，解压完之后，应该是这样：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="cso2/cs002.png" alt></p><p>接着将主服务器的压缩包，解压至<code>Server</code>文件夹，解压完之后，应为：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="cso2/cs003.png" alt></p><p>然后，将下载的2个客户端启动程序，解压至<code>Counter-Strike Online 2\Game\Bin</code>文件夹。解压完成后，再将GUI启动器压缩包，解压至<code>Counter-Strike Online 2</code>根目录下。然后，基本上就完成一大半了。正常的，这个时候你的游戏根目录下应该为这样：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="cso2/cs004.png" alt></p><h2 id="构建游戏"><a href="#构建游戏" class="headerlink" title="构建游戏"></a>构建游戏</h2><p>下一步我们要做的，就是让游戏跑起来！</p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>这一步是最开始的方法，但是也最复杂，不建议大家使用，请跳至下一步！</p><p>要运行服务器，您需要：</p><ul><li><span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL3poLWNuLw==">Node.js<i class="fa fa-external-link-alt"></i></span>（版本10或更高版本）;</li><li>搭建服务器，也就是我们下载的主服务器。</li></ul><p>然后，在服务器目录内的终端实例中，执行以下操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --only &#x3D; production ＃安装所需的依赖项（最小依赖项） </span><br><span class="line">npm run start ＃启动预构建服务器</span><br></pre></td></tr></table></figure><p>默认情况下，服务器<strong>会询问您要侦听的网络接口</strong>。</p><h4 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h4><p>下载源代码后，转到源代码目录中的终端实例，然后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install ＃安装所需的依赖项 </span><br><span class="line">npm run build ＃ builds服务器 </span><br><span class="line">npm run start ＃启动新服务器构建</span><br></pre></td></tr></table></figure><h4 id="命令行参数"><a href="#命令行参数" class="headerlink" title="命令行参数"></a>命令行参数</h4><p>选项：</p><ul><li><code>-i, --ip-address [ip]</code>（<em>可选</em>）要侦听的IP地址（默认值：自动检测）</li><li><code>-p, --port-master [port]</code>（<em>可选</em>）服务器的（TCP）端口（默认值：30001）</li><li><code>-P, --port-holepunch [port]</code>（<em>可选</em>）服务器的打孔（UDP）端口（默认值：30002）</li><li><code>-l, --log-packets</code>（<em>可选</em>）记录传入和传出的数据包</li></ul><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>在开始之前，你必须允许launcher.exe在防火墙和端口转发端口27015到27020或打开路由器的NAT，以便与其他人一起玩。</p><p>如果您举办房间比赛，其他客户将知道您的IP。</p><p>如果您加入主持人的房间比赛，主人将知道您的IP。</p><p>一旦开发了专用服务器启动器，这可能在将来可以避免。</p><h4 id="开始游戏"><a href="#开始游戏" class="headerlink" title="开始游戏"></a>开始游戏</h4><p>基本上就是挂载到一个大服务器，然后玩家们进来。由配置和网络比较好的玩家开启房间当房主，然后其他人加入游戏。同时，房主卡，其他人跟着卡，房主推出房间，其他人也会掉。虽然目前只能这样，但是我觉得有得玩我就很高兴了😂</p><h4 id="对于启动器"><a href="#对于启动器" class="headerlink" title="对于启动器"></a>对于启动器</h4><ul><li><code>-lang [some language]</code>- 将游戏的语言设置为<em>某种语言</em>（考虑到您拥有语言文件）</li><li><code>-masterip [some ip]</code>- 将主服务器的IP地址设置为<em>某个IP</em></li><li><code>-masterport [some port]</code>- 将主服务器的端口号设置为<em>某个端口</em></li><li><code>-decryptedfiles</code> - 告诉游戏将每个游戏文件视为已解密</li><li><code>-enablecustom</code>- 允许在<code>custom</code>游戏文件的根目录中使用自定义目录</li><li><code>-username [your username]</code> - 指定登录用户名，以跳过登录屏幕。<strong>必须</strong>使用<code>-password</code></li><li><code>-password [your password]</code> - 指定登录密码，以跳过登录屏幕。<strong>必须</strong>使用<code>-username</code></li></ul><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>直接运行游戏根目录下的<code>PlayCSO2.exe</code>,如图：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="cso2/cs005.png" alt></p><p>然后点击游戏设定，分别如下面的图片所示，自己视情况设定选项：</p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="cso2/cs006.png" alt></p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="cso2/cs007.png" alt></p><p><img src="https://ae01.alicdn.com/kf/Hbeac22ce6e5840728e7c1875ddd3bfeea.jpg" data-original="cso2/cs008.png" alt></p><p>然后点击保存，如果询问你是都要构建服务器之类的，或者是其它的，直接允许即可！然后根据你的网络情况，可以选择本地启动游戏，或者是连接到其它服务器加入游戏！开始游玩吧！</p><p>运行成功之后，会有cso2_launcher.ini，这个文件里面有登陆账号和密码，是你不联网的情况下，在本地使用的。</p><h3 id="其它方法"><a href="#其它方法" class="headerlink" title="其它方法"></a>其它方法</h3><p><del>这个其它方法嘛，就是各个搭建私服的工作组，给大家介绍的玩他们的私服的方法，略有不同，具体的自己去看看呢！</del>建议有条件玩外(私)服，国内的私服。。。</p><h2 id="再次鸣谢"><a href="#再次鸣谢" class="headerlink" title="再次鸣谢"></a>再次鸣谢</h2><p>感谢Ochii，主服务器GitHub👉<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL09jaGlpL2NzbzItbWFzdGVyLXNlcnZlcg==">地址<i class="fa fa-external-link-alt"></i></span>，客户端启动程序GitHub👉<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL09jaGlpL2NzbzItbGF1bmNoZXIv">地址<i class="fa fa-external-link-alt"></i></span>，感谢！均有MIT许可证许可！</p><p>感谢“I’m Not MentaL”大神的GUI启动器，他的👉<span class="exturl" data-url="aHR0cHM6Ly93d3cucGF0cmVvbi5jb20vcG9zdHMvY291bnRlci1zdHJpa2UtMi0yNDU5NzQ1Nj9mYmNsaWQ9SXdBUjI1VUJERXltMldoWWlzaFJjYkZVdFVEN1VSbTFaNHBoUU9sOUFzVUdzZTduRVJQMGRGT3kxRHdoZw==">Patreon<i class="fa fa-external-link-alt"></i></span>！感谢！</p><p>Counter-Strike Online2的👉<span class="exturl" data-url="aHR0cHM6Ly9jc29ubGluZTIubmV0Lw==">网站<i class="fa fa-external-link-alt"></i></span>，感谢！</p><p>Counter-Strike Online2的👉<span class="exturl" data-url="aHR0cHM6Ly9jc29ubGluZTIubmV0L2ZvcnVtLw==">论坛<i class="fa fa-external-link-alt"></i></span>，感谢！</p><p>感谢<del>你们</del>国外大神所做出的努力！</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><iframe width="680" height="360" src="https://www.youtube-nocookie.com/embed/4qsRxFNMuL0" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p>视频链接👉<span class="exturl" data-url="aHR0cHM6Ly95b3V0dS5iZS80cXNSeEZOTXVMMA==">https://youtu.be/4qsRxFNMuL0<i class="fa fa-external-link-alt"></i></span></p><p>有什么问题或建议，欢迎留言或者发邮箱。<del>这里没有商业合作，每一个团队需要宣传都欢迎联系我！</del>感谢无私帮助玩家们的开发者们，你们辛苦了！~~感谢国外的几个大神！</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;反恐精英Online2，英文名：Counter-Strike Online2，粉丝们称为蛋拐兔2。世纪天成公司于2013年9月5日正式宣布代理《反恐精英Online2》，国服于2015年2月5日起源首测，3月5号二测，4月22号正式公测。然而不辛的是，在2018年5月18日，国服（世纪天成代理）正式停止运营。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CSO2" scheme="https://blog.52bess.com/categories/CSO2/"/>
    
    
      <category term="CSO2" scheme="https://blog.52bess.com/tags/CSO2/"/>
    
  </entry>
  
</feed>
