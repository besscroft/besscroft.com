<?xml version="1.0" encoding="utf-8"?>


<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN">
    <title type="text">桃花岛</title>
    <subtitle type="html">这里是 BessCroft 的生活与技术博客！非常高兴认识你！</subtitle>
    <updated>2021-12-05T12:28:16&#43;08:00</updated>
    <id>https://blog.besscroft.com/</id>
    <link rel="alternate" type="text/html" href="https://blog.besscroft.com/" />
    <link rel="self" type="application/atom&#43;xml" href="https://blog.besscroft.com/atom.xml" />
    <author>
            <name>Bess Croft</name>
            <uri>https://blog.besscroft.com/</uri>
            
                <email>besscroft@foxmail.com</email>
            </author>
    <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights>
    <generator uri="https://gohugo.io/" version="0.84.0">Hugo</generator>
        <entry>
            <title type="text">普罗米修斯の初体験</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2021/prometheus-boot/" />
            <id>https://blog.besscroft.com/tech/2021/prometheus-boot/</id>
            <updated>2021-12-01T18:28:12&#43;08:00</updated>
            <published>2021-12-01T18:30:16&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">前言 为什么我会选择普罗米修斯(Prometheus)？Prometheus 是按照 Google SRE……</summary>
            
                <content type="html">&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;为什么我会选择普罗米修斯(Prometheus)？Prometheus 是按照 Google SRE 运维之道的理念构建的，具有实用性和前瞻性。同时也是基于 Go 语言开发的，性能好，安装部署也简单，甚至跨平台（包括 arm 平台）。作为对服务基础和业务监控，Prometheus 是一个非常好的选择。&lt;/p&gt;
&lt;h2 id=&#34;什么是普罗米修斯&#34;&gt;什么是普罗米修斯？&lt;/h2&gt;
&lt;p&gt;咱们这里引用官方的术语：
Prometheus 是一个开源系统监控和警报工具包，它可以收集系统信息，并将其发送到一个或多个监控中心。Prometheus 将其指标收集并存储为时间序列数据，即指标信息与记录它的时间戳一起存储，以及称为标签的可选键值对。&lt;/p&gt;
&lt;p&gt;这里引入官网的图，说明 Prometheus 的架构及其一些生态系统组件：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2021/prometheus-boot/prometheus001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;p&gt;安装方式有很多，二进制包或者 Docker 都可以，这里我们选择二进制包。&lt;/p&gt;
&lt;h3 id=&#34;安装环境&#34;&gt;安装环境&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2021/prometheus-boot/prometheus002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里俺用的是 Ubuntu 20.04，别问我为啥，主要是我内存最大的机器就是这台了（24G 内存），只不过，它是 arm64 架构的，所以下面的教程是运行在 arm64 架构的服务器上面的，当然，你也可以用本教程在 amd64 架构下安装，只有一些细微的区别，咱们下面会讲到。&lt;/p&gt;
&lt;h3 id=&#34;安装-prometheus&#34;&gt;安装 Prometheus&lt;/h3&gt;
&lt;h4 id=&#34;下载-prometheus&#34;&gt;下载 Prometheus&lt;/h4&gt;
&lt;p&gt;你可以去官网，或者 GitHub 的&lt;a href=&#34;https://github.com/prometheus/prometheus/releases&#34;&gt;发布页面&lt;/a&gt;下载安装包，这里我下载的是 GitHub 仓库的包。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果你是 amd64 架构的服务器&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget https://github.com/prometheus/prometheus/releases/download/v2.31.0/prometheus-2.31.0.linux-amd64.tar.gz
tar xfz prometheus-2.31.0.linux-amd64.tar.gz
sudo cp prometheus-2.31.0.linux-amd64/prometheus /usr/local/bin/
sudo cp prometheus-2.31.0.linux-amd64/promtool /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;如果你是 arm64 架构的服务器&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget https://github.com/prometheus/prometheus/releases/download/v2.31.0/prometheus-2.31.0.linux-arm64.tar.gz
tar xfz prometheus-2.31.0.linux-arm64.tar.gz
sudo cp prometheus-2.31.0.linux-arm64/prometheus /usr/local/bin/
sudo cp prometheus-2.31.0.linux-arm64/promtool /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;最主要的差异，就是要下载不同的包，后面的配置几乎相同&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;配置-prometheus&#34;&gt;配置 Prometheus&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;检查&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;prometheus --version
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;执行命令，出现如下图所示，就成功了！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2021/prometheus-boot/prometheus003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们在刚才解压后的文件夹下面，可以找到一个子目录 &lt;code&gt;prometheus&lt;/code&gt; ，然后可以找到一个配置文件 &lt;code&gt;prometheus.yml&lt;/code&gt; 。咱们现在需要把 &lt;code&gt;prometheus.yml&lt;/code&gt; 这个初始配置文件复制到 &lt;code&gt;/etc/prometheus&lt;/code&gt; 目录下，然后简单配置就可以启动啦。当然，你也可以按照自己的需求来配置，具体可以参考官方的&lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/configuration/configuration/&#34;&gt;配置文档&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mkdir -p /etc/prometheus
sudo cp prometheus.yml /etc/prometheus/
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;默认的部分配置如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;scrape_configs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;job_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;prometheus&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;static_configs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;targets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;localhost:9090&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我们可以看到端口是 &lt;code&gt;9090&lt;/code&gt; ，你可以按需求改为其它的。&lt;/p&gt;
&lt;h4 id=&#34;启动-prometheus&#34;&gt;启动 Prometheus&lt;/h4&gt;
&lt;p&gt;接下来咱们启动看看&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;prometheus --config.file &lt;span class=&#34;s2&#34;&gt;&amp;#34;/etc/prometheus/prometheus.yml&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;如果发生了异常，则可以使用 &lt;code&gt;prometool&lt;/code&gt; 工具来检查你的配置文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;promtool check config &lt;span class=&#34;s2&#34;&gt;&amp;#34;/etc/prometheus/prometheus.yml&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果输出如下提示，说明没问题了！&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Checking /etc/prometheus/prometheus.yml
  SUCCESS: 0 rule files found
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;配置-service-方式运行-prometheus&#34;&gt;配置 service 方式运行 Prometheus&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;新建一个 &lt;code&gt;service&lt;/code&gt; 文件&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo vim /etc/systemd/system/prometheus.service
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;编辑如下内容保存即可！&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;Unit&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;Description&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;prometheus

&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;Service&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;root
&lt;span class=&#34;nv&#34;&gt;ExecStart&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;prometheus --config.file &lt;span class=&#34;s2&#34;&gt;&amp;#34;/etc/prometheus/prometheus.yml&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;Restart&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;on-abort

&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;Install&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;WantedBy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;设置开机启动&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo systemctl &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; prometheus
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;启动 Prometheus&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo systemctl start prometheus
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这样便大功告成啦！&lt;/p&gt;
&lt;h3 id=&#34;配置-https-和反向代理&#34;&gt;配置 HTTPS 和反向代理&lt;/h3&gt;
&lt;p&gt;如果你的服务器是 HTTPS 的，那么需要配置 HTTPS 的证书和私钥，这里俺使用的是 Let&#39;s Encrypt 的证书，可以去官网下载。具体如何操作就不说了，如果你不会，应该去学习如何使用 Nginx，并学会配置 HTTPS 证书。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置 Nginx 反向代理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里我放出我的配置吧，你可以根据你的需求，参考使用：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;location /
{
    proxy_pass http://127.0.0.1:9090;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header REMOTE-HOST $remote_addr;
    
    add_header X-Cache $upstream_cache_status;
    
    #Set Nginx Cache
    add_header Cache-Control no-cache;
}
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;Prometheus 启动监听在本地回环地址 localhost:9090 ，所以公网是无法直接访问的，我也不太建议你开放防火墙，这样能带来一定的安全保护。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;预览&#34;&gt;预览&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2021/prometheus-boot/prometheus004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;这时候咱们访问域名，就能看到页面啦！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里提示，我这不是生产环境，只是拿来练手学习，所以无所谓，生产环境不建议这么做！可以通过 ssh 端口转发方式实现远程访问。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/prometheus/" term="Prometheus" label="Prometheus" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E6%99%AE%E7%BD%97%E7%B1%B3%E4%BF%AE%E6%96%AF/" term="普罗米修斯" label="普罗米修斯" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">学习与人生——使用 GitHub Copilot 后的思考</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/life/2021/%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BA%BA%E7%94%9F%E4%BD%BF%E7%94%A8github-copilot%E5%90%8E%E7%9A%84%E6%80%9D%E8%80%83/" />
            <id>https://blog.besscroft.com/life/2021/%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BA%BA%E7%94%9F%E4%BD%BF%E7%94%A8github-copilot%E5%90%8E%E7%9A%84%E6%80%9D%E8%80%83/</id>
            <updated>2021-11-26T16:19:48&#43;08:00</updated>
            <published>2021-11-26T15:00:52&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">起因 在 10 月 27 号的时候，我收到了一封邮件，是一封关于 GitHub Copilot Preview 的测试邀请邮件。当然，这是我……</summary>
            
                <content type="html">&lt;h2 id=&#34;起因&#34;&gt;起因&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2021/GitHubCopilot/github001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 10 月 27 号的时候，我收到了一封邮件，是一封关于 GitHub Copilot Preview 的测试邀请邮件。当然，这是我提前申请过的，怀着无比激动的心情，体验了一番。三分钟的热度过去之后，随之而来的担忧，不得不让我认真的反思这项技术所带来的问题。&lt;/p&gt;
&lt;h2 id=&#34;github-copilot&#34;&gt;GitHub Copilot&lt;/h2&gt;
&lt;h3 id=&#34;什么是-github-copilot-&#34;&gt;什么是 GitHub Copilot ?&lt;/h3&gt;
&lt;p&gt;这里引用官方的术语：GitHub Copilot is an AI pair programmer that helps you write code faster and with less work. GitHub Copilot draws context from comments and code, and suggests individual lines and whole functions instantly.&lt;/p&gt;
&lt;p&gt;大体意思是：GitHub Copilot 是一个“搭档”程序员，可帮助您以减少工作量和更快地编写代码。GitHub Copilot 从评论和代码中提取上下文（即当前文件内容和光标位置），并立即给出单行或整个函数的代码建议。&lt;/p&gt;
&lt;h3 id=&#34;github-copilot-可以做什么&#34;&gt;GitHub Copilot 可以做什么？&lt;/h3&gt;
&lt;h4 id=&#34;将注释转换为代码&#34;&gt;将注释转换为代码&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2021/GitHubCopilot/github002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;比如说，我在文件中写了一行注释：【新增商品套餐】，然后我就可以在 GitHub Copilot 中看到一个建议：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2021/GitHubCopilot/github003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;此时我按下了【Tab】键，GitHub Copilot 就会自动将注释转换为代码，并且自动插入到当前光标位置。甚至 Github Copilot 提示的方法，并不存在我的代码中，而是自动帮我生成的。&lt;/p&gt;
&lt;h4 id=&#34;自动填充重复代码&#34;&gt;自动填充重复代码&lt;/h4&gt;
&lt;p&gt;我在图中举例一个场景，如果我想在一个方法中完成一系列的事情，但是其中一项是需要把用户信息转换成其它 Dto 对象，而恰好我在另一个地方这么用过的话。此时我只需要写下注释即可：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2021/GitHubCopilot/github004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后我就可以在 GitHub Copilot 中看到一个建议，并且我主观上认为这个建议是按照我的需求来的，那我便可以按下【Tab】键，GitHub Copilot 就会自动将注释转换为代码，并且自动插入到当前光标位置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2021/GitHubCopilot/github005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;换做以前，我写这段代码的时候，我估计会对代码进行抽样封装，然后再把这段代码放到一个方法中。或者直接找到相应的代码进行复制粘贴。
当然，无论哪种方式，我们自己的处理肯定跟 Github Copilot “不太一样”，要结合上下文和实际情况判断，哪种选择才是最优的。Github Copilot 能给出解，但不一定是最优解。&lt;/p&gt;
&lt;h4 id=&#34;其它&#34;&gt;其它&lt;/h4&gt;
&lt;p&gt;除此之外，GitHub Copilot 还能自动填写测试方法，甚至还能直接通过它获得一些【隐私信息】，不知道这个问题后面会不会解决。
顺便说一下快捷键，感兴趣的小伙伴们可以去尝试：
在 Windows 或 Linux 上，按 &lt;code&gt;Alt + ]&lt;/code&gt; 下一个或 &lt;code&gt;Alt + [ &lt;/code&gt;上一个。
接受建议，按下 &lt;code&gt;Tab&lt;/code&gt; 键，就能帮你自动填充了，按下 &lt;code&gt;Esc&lt;/code&gt; 就会取消建议。&lt;/p&gt;
&lt;h3 id=&#34;github-copilot-是如何工作的呢&#34;&gt;GitHub Copilot 是如何工作的呢？&lt;/h3&gt;
&lt;p&gt;根据官方的说明，主要的训练集来源于 GitHub 上的开源仓库的代码（私有仓库有没有用俺就不清楚了），以及自然语言训练。
在你写代码的过程中，GitHub Copilot 会将你的代码上传至服务器，然后 AI 会根据接收到的上下文进行处理，你用的越多，模型的输出就越精确。&lt;/p&gt;
&lt;h2 id=&#34;误解&#34;&gt;误解&lt;/h2&gt;
&lt;h3 id=&#34;为什么会说误解&#34;&gt;为什么会说误解？&lt;/h3&gt;
&lt;p&gt;很多人肯定跟我一样，对 GitHub Copilot 会产生偏见和误解，认为这不过是“人”写出来的“人工智能”，通过训练大量现有的代码，从而对目标代码进行运算后，给出模板代码而已。
我最开始看到 GitHub Copilot 介绍时，确实是这么想的，但是当我自己体验过后，看法就发生了改变。但也可能是它足够的强大，致使（欺骗）我的想法改变了。
在往后阅读之前，我希望你明白一件事儿：&lt;strong&gt;软件开发的主体仍是你自己，并不是 GitHub Copilot，它无法也难以取代你！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我总结了一下一些可能产生的误解，同时也是我暂时还没弄明白的事情（没证据）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub Copilot 只是跟官方说的一样，依靠大量现有的训练集和自然语言训练而来。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里是指，它只能通过已经存在过的代码给你提示，并不能自己想出全新的代码。这点我不敢肯定，但是我认为它迟早能做到。我在使用过程中，它确实能给我提示在我的程序中未出现过的代码，但是没有证据表明其它人没写过。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;与其他训练目标是预测下一个词符的大型语言模型一样，Codex 会生成与其训练分布尽可能相似的代码。这样做的一个后果是，这种模型可能会做一些对用户无益的事情。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;GitHub Copilot 不擅长“编程”，没有“编程思想”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可能真的没有，但是“编程思想”毕竟难以被量化，但是它从某方面来说，是擅长编程的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub Copilot 缺乏创造性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对它自己而言，我不敢说。但是对我而言，可以说是充满了创造性。GitHub Copilot 有时候提示的代码，会让我思考，如何写才是比较好的方案，怎么写才更优雅？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub Copilot 的能力不强，“感觉没啥用”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;咱不能忘了，这玩意是 AI，时间越长，他只会被训练的越来越聪明。&lt;/p&gt;
&lt;p&gt;不知道大家还记不记得 Google 围棋 AI AlphaGo？
这里咱们引用国际围棋联盟秘书长李夏辰的一段话吧：&lt;/p&gt;
&lt;blockquote class=&#34;quote-center&#34;&gt;
        &lt;p&gt;第一次听说电脑要挑战顶级棋手李世乭时，我非常惊讶。
我觉得挑战者一定对顶级棋手有多强毫无概念；
但事实上，是我对电脑有多强没有概念。&lt;/p&gt;&lt;/blockquote&gt; 

&lt;h2 id=&#34;担忧&#34;&gt;担忧&lt;/h2&gt;
&lt;h3 id=&#34;github-copilot-会取代我吗&#34;&gt;GitHub Copilot 会取代我吗？&lt;/h3&gt;
&lt;p&gt;我个人是对此持乐观态度的，因为我觉得它的最终的设计目标一定是最大限度的提升【开发者效率】，而不是很多人担心的【替代开发者】，至少短时间内不会。&lt;/p&gt;
&lt;p&gt;GitHub Copilot 无法解决系统复杂度的问题，咱们编程最核心的，并不是你多会用 GitHub Copilot，也不是你会用多少框架，最核心的是人，那个坐在电脑面前敲代码的人。作为一个优秀的开发者，你必须掌握哪些基础知识，而不是陷入框架、插件和工具的使用当中。&lt;/p&gt;
&lt;p&gt;最重要的，AI 无法理解来自产品经理和客户的需求，也无法沟通。&lt;/p&gt;
&lt;h3 id=&#34;github-copilot-安全吗&#34;&gt;GitHub Copilot 安全吗？&lt;/h3&gt;
&lt;p&gt;咱们可以肯定的一点是，你如果要使用它，那么你的代码以及配置文件，都是会被传送到 GitHub Copilot 的服务器的。这也就意味着你的隐私、配置文件、访问密钥等等，都会有泄露的风险。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你在政府或者银行工作，那么请一定不要在工作时使用它，因为风险极大，你必须对此负责！如果你是在普通的公司上班，也请三思而后行！如果你觉得 GitHub Copilot 会给你们公司的开发带来帮助，至少得拉上部门相关负责人和项目组开一个评审会议后再做决定！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;总结和一些建议&#34;&gt;总结和一些建议&lt;/h2&gt;
&lt;p&gt;大家应该都听说过“结对编程”（Pair Programming）吧？这是一种敏捷软件开发的方法，两个程序员在一个计算机上共同完成工作。一个人输入代码，另一个人审查他输入的代码。这是不是和你使用 GitHub Copilot 时很像？但是你却不能和 GitHub Copilot 互换角色，甚至不能和它沟通。&lt;/p&gt;
&lt;p&gt;AI 自动生成程序，是根本不可能的事情。就像我上面说的，AI 无法理解来自产品经理和客户的需求，也无法沟通。让 AI 凭空生成一个程序，是没有意义的，所以你必须告诉 AI，你想要什么。而最难的，恰恰就是你“表达需求”的这个过程，难度甚至不亚于编程。咱们好好想一想，编程的本质，是不是在告诉电脑自己想要什么？输入什么就必然输出什么，数据结构、算法等等，已经被 AI 拿去训练了，但是表达“想要什么”，它自己是无法自动完成的。没有任何机器可以代替人的思考，所以俺觉得，程序员是一种无法被机器取代的工作。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你的雇主可能不会这么想，他们可能会认为，好的工具节省了你的编程开销，甚至会成为压你工资的借口之一。他们会把你当成机器上的“可替换零件”，觉得随时可以替代掉。其实这样往往会适得其反，节省人力开销最好的办法，就是聘用优秀的程序员，给他们足够的尊重，良好的待遇、让他们开心的工作和生活，就能让他们做出更好地软件。那些名词满天飞，光说不做的管理者，才是真正浪费公司资源的人，降低软件开发效率和软件质量的祸根。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最好的发展方向是什么？我觉得人的【智慧】+ 机器的【智能】相结合，才应该是未来人工智能发展的方向。&lt;/p&gt;
&lt;p&gt;最后给列举一些建议吧：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 AI 辅助编程时，注意隐私和法律风险，切记不要随意在公司使用。&lt;/li&gt;
&lt;li&gt;不要过度依赖 GitHub Copilot 之类的 AI，编程的主体和核心应该是你自己，也不要因为用着爽就忘记了自己应该如何学习了。&lt;/li&gt;
&lt;li&gt;如果你担心被 AI 取代（卷起来了🤣），那么你就应该去面对它，去学习编程知识是你最重要的事情之一。&lt;/li&gt;
&lt;li&gt;兴趣不是最好的老师，生存才是！&lt;/li&gt;
&lt;/ul&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E7%94%9F%E6%B4%BB/" term="生活" label="生活" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BA%BA%E7%94%9F/" term="学习与人生" label="学习与人生" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/github-copilot/" term="GitHub Copilot" label="GitHub Copilot" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E6%80%9D%E8%80%83/" term="思考" label="思考" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E5%8F%8D%E6%80%9D/" term="反思" label="反思" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/openai/" term="OpenAI" label="OpenAI" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">在微服务项目中引入 knife4j</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2021/introduce-knife4j-into-the-project/" />
            <id>https://blog.besscroft.com/tech/2021/introduce-knife4j-into-the-project/</id>
            <updated>2021-11-17T09:52:05&#43;08:00</updated>
            <published>2021-11-17T09:50:51&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">什么是 Knife4j ？ knife4j 是为 Java MVC 框架集成 Swagger 生成 Api 文档的增强解决方案。说白了，如果项目开发为前后端……</summary>
            
                <content type="html">&lt;h2 id=&#34;什么是-knife4j-&#34;&gt;什么是 Knife4j ？&lt;/h2&gt;
&lt;p&gt;knife4j 是为 Java MVC 框架集成 Swagger 生成 Api 文档的增强解决方案。说白了，如果项目开发为前后端分离开发的话，这个插件就非常的省事儿，不用再很麻烦的写接口文档了。之前用过 Swagger 来生成文档，但是在某些情况下，Swagger 却并不适合国内的项目，尤其是验收文档。给甲方的验收文档往往包含接口文档，这是 knife4j 的导出就派上用场了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;没有好不好用，只有适不适合！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;引入项目&#34;&gt;引入项目&lt;/h2&gt;
&lt;h3 id=&#34;说明&#34;&gt;说明&lt;/h3&gt;
&lt;p&gt;本文章以我自己的开源项目 &lt;a href=&#34;https://github.com/besscroft/aurora-mall&#34;&gt;aurora-mall&lt;/a&gt; 为例，详细讲述在 Spring Cloud 2020 &amp;amp;  Alibaba 2021 中，应该如何引用。为什么必须加上这个说明呢？因为不同的项目，引入方式还是有一些差别的。&lt;/p&gt;
&lt;h3 id=&#34;开始&#34;&gt;开始&lt;/h3&gt;
&lt;h4 id=&#34;导包&#34;&gt;导包&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;在项目的根 &lt;code&gt;pom.xml&lt;/code&gt; 文件中导包。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;knife4j.version&amp;gt;&lt;/span&gt;2.0.4&lt;span class=&#34;nt&#34;&gt;&amp;lt;/knife4j.version&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;dependencyManagement&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
		&lt;span class=&#34;nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.github.xiaoymin&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;knife4j-micro-spring-boot-starter&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${knife4j.version}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.github.xiaoymin&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;knife4j-spring-boot-starter&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${knife4j.version}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
	&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependencyManagement&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;在网关服务的 &lt;code&gt;pom.xml&lt;/code&gt; 中，导包&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.github.xiaoymin&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;knife4j-spring-boot-starter&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;在每一个需要生成文档的服务的 &lt;code&gt;pom.xml&lt;/code&gt; 中，导包(一般放在 common 中，然后不需要屏蔽即可)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.github.xiaoymin&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;knife4j-micro-spring-boot-starter&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;gateway 服务模块的接口，需要多一个包，用来输出文档到前端（包含UI包）它会把我们所有的微服务都聚合到一个文档，统一输出到前端，其它服务只需控制数据，这样便于节约资源！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;生产环境屏蔽&#34;&gt;生产环境屏蔽&lt;/h4&gt;
&lt;p&gt;目前 &lt;code&gt;Springfox-Swagger&lt;/code&gt; 以及 &lt;code&gt;Knife4j&lt;/code&gt; 提供的资源接口包括如下：&lt;strong&gt;如果你要用的话，记得白名单放行&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;资源&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;/doc.html&lt;/td&gt;
&lt;td&gt;Knife4j提供的文档访问地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/v2/api-docs-ext&lt;/td&gt;
&lt;td&gt;Knife4j提供的增强接口地址,自&lt;code&gt;2.0.6&lt;/code&gt; 版本后删除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/swagger-resources&lt;/td&gt;
&lt;td&gt;Springfox-Swagger提供的分组接口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/v2/api-docs&lt;/td&gt;
&lt;td&gt;Springfox-Swagger提供的分组实例详情接口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/swagger-ui.html&lt;/td&gt;
&lt;td&gt;Springfox-Swagger提供的文档访问地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/swagger-resources/configuration/ui&lt;/td&gt;
&lt;td&gt;Springfox-Swagger提供&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/swagger-resources/configuration/security&lt;/td&gt;
&lt;td&gt;Springfox-Swagger提供&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;当我们部署系统到生产系统,为了接口安全,需要屏蔽所有 Swagger 的相关资源&lt;/p&gt;
&lt;p&gt;如果使用 SpringBoot 框架,只需在 &lt;code&gt;application.properties&lt;/code&gt; 或者 &lt;code&gt;application.yml&lt;/code&gt; 配置文件中配置&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;knife4j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 开启增强配置 &lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;　&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 开启生产环境屏蔽&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;production&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;java-化配置&#34;&gt;Java 化配置&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;配置基类&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;咱们一般会放在 common 包里面。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;76
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;77
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;78
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;79
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;80
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;81
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;82
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;83
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;84
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;com.besscroft.aurora.mall.common.config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;com.besscroft.aurora.mall.common.domain.SwaggerProperties&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.context.annotation.Bean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;springfox.documentation.builders.ApiInfoBuilder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;springfox.documentation.builders.PathSelectors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;springfox.documentation.builders.RequestHandlerSelectors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;springfox.documentation.service.*&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;springfox.documentation.spi.DocumentationType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;springfox.documentation.spi.service.contexts.SecurityContext&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;springfox.documentation.spring.web.plugins.Docket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;java.util.ArrayList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;java.util.List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * swagger 通用配置
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @Author Bess Croft
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @Date 2021/4/2 12:28
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;abstract&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;BaseSwaggerConfig&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@Bean&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Docket&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;createRestApi&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;SwaggerProperties&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;swaggerProperties&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;swaggerProperties&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;Docket&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;docket&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Docket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DocumentationType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;SWAGGER_2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;apiInfo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;apiInfo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;swaggerProperties&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;apis&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RequestHandlerSelectors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;basePackage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;swaggerProperties&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getApiBasePackage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()))&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;paths&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PathSelectors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;any&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;swaggerProperties&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isEnableSecurity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;docket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;securitySchemes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;securitySchemes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;securityContexts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;securityContexts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;docket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ApiInfo&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;apiInfo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SwaggerProperties&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;swaggerProperties&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ApiInfoBuilder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;swaggerProperties&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getTitle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;swaggerProperties&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getDescription&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;contact&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Contact&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;swaggerProperties&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getContactName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;swaggerProperties&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getContactUrl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;swaggerProperties&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getContactEmail&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()))&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;swaggerProperties&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getVersion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ApiKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;securitySchemes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// 设置请求头信息
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ApiKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ArrayList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;ApiKey&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;apiKey&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ApiKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Authorization&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Authorization&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;header&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;apiKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SecurityContext&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;securityContexts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// 设置需要登录认证的路径
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SecurityContext&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ArrayList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getContextByPath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/*/.*&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SecurityContext&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getContextByPath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pathRegex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SecurityContext&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;securityReferences&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;defaultAuth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;forPaths&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PathSelectors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;regex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pathRegex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SecurityReference&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;defaultAuth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SecurityReference&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ArrayList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;AuthorizationScope&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;authorizationScope&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AuthorizationScope&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;global&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;accessEverything&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;AuthorizationScope&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;authorizationScopes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AuthorizationScope&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;];&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;authorizationScopes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;authorizationScope&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SecurityReference&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Authorization&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;authorizationScopes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     * 自定义Swagger配置
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;abstract&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SwaggerProperties&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;swaggerProperties&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;新建 SwaggerProperties 类&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@Data&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@Builder&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@EqualsAndHashCode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;callSuper&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SwaggerProperties&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     * API文档生成基础路径
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;apiBasePackage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     * 是否要启用登录认证
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;enableSecurity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     * 文档标题
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     * 文档描述
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     * 文档版本
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     * 文档联系人姓名
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;contactName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     * 文档联系人网址
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;contactUrl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     * 文档联系人邮箱
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;contactEmail&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     * 版权信息
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;license&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     * 版权协议地址
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;licenseUrl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;在网关服务新增 Swagger 资源配置&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;com.besscroft.aurora.mall.gateway.config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;lombok.AllArgsConstructor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;lombok.extern.slf4j.Slf4j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.cloud.gateway.config.GatewayProperties&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.cloud.gateway.route.RouteLocator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.cloud.gateway.support.NameUtils&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.context.annotation.Primary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.stereotype.Component&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;springfox.documentation.swagger.web.SwaggerResource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;springfox.documentation.swagger.web.SwaggerResourcesProvider&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;java.util.ArrayList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;java.util.List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * swagger资源配置
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @Author Bess Croft
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @Date 2021/4/2 12:37
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@Slf4j&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@Component&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@Primary&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@AllArgsConstructor&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SwaggerResourceConfig&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SwaggerResourcesProvider&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RouteLocator&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;routeLocator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GatewayProperties&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gatewayProperties&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SwaggerResource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SwaggerResource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resources&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ArrayList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;routes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ArrayList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;//获取所有路由的ID
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;routeLocator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRoutes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;subscribe&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;route&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;routes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;route&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()));&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;//过滤出配置文件中定义的路由-&amp;gt;过滤出Path Route Predicate-&amp;gt;根据路径拼接成api-docs路径-&amp;gt;生成SwaggerResource
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;gatewayProperties&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRoutes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;routeDefinition&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;routes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;routeDefinition&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;route&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;route&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getPredicates&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
                    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;predicateDefinition&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Path&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;equalsIgnoreCase&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;predicateDefinition&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()))&lt;/span&gt;
                    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;predicateDefinition&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;swaggerResource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;route&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt;
                            &lt;span class=&#34;n&#34;&gt;predicateDefinition&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getArgs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NameUtils&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;GENERATED_NAME_PREFIX&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
                                    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;**&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;v2/api-docs&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))));&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;});&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SwaggerResource&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;swaggerResource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;name:{},location:{}&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;SwaggerResource&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;swaggerResource&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SwaggerResource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;swaggerResource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;swaggerResource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setLocation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;swaggerResource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setSwaggerVersion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;swaggerResource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;配置网关的 Swagger 处理器，自定义 Swagger 的各个配置节点&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;com.besscroft.aurora.mall.gateway.config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.http.HttpStatus&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.http.ResponseEntity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.web.bind.annotation.GetMapping&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.web.bind.annotation.RestController&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;reactor.core.publisher.Mono&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;springfox.documentation.swagger.web.*&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;java.util.Optional&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * 自定义Swagger的各个配置节点
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @Author Bess Croft
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @Date 2021/3/30 21:35
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@RestController&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SwaggerHandler&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@Autowired&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;required&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SecurityConfiguration&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;securityConfiguration&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@Autowired&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;required&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UiConfiguration&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;uiConfiguration&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SwaggerResourcesProvider&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;swaggerResources&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;SwaggerHandler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SwaggerResourcesProvider&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;swaggerResources&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;swaggerResources&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;swaggerResources&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     * Swagger安全配置，支持oauth和apiKey设置
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;nd&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/swagger-resources/configuration/security&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Mono&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SecurityConfiguration&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;securityConfiguration&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Mono&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;just&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;ofNullable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;securityConfiguration&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;orElse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SecurityConfigurationBuilder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HttpStatus&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;OK&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     * Swagger UI配置
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;nd&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/swagger-resources/configuration/ui&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Mono&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;UiConfiguration&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;uiConfiguration&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Mono&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;just&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;ofNullable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uiConfiguration&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;orElse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;UiConfigurationBuilder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HttpStatus&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;OK&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     * Swagger资源配置，微服务中的各个服务的api-docs信息
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;nd&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/swagger-resources&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Mono&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;swaggerResources&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Mono&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;just&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;swaggerResources&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HttpStatus&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;OK&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)));&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;在每个业务系统服务配置 Swagger&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;com.besscroft.aurora.mall.admin.config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;com.besscroft.aurora.mall.common.config.BaseSwaggerConfig&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;com.besscroft.aurora.mall.common.domain.SwaggerProperties&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.context.annotation.Configuration&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.context.annotation.Profile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;springfox.documentation.swagger2.annotations.EnableSwagger2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * swagger配置
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @Author Bess Croft
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @Date 2021/3/30 13:43
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@Configuration&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@EnableSwagger2&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@Profile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;dev&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SwaggerConfiguration&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BaseSwaggerConfig&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SwaggerProperties&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;swaggerProperties&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SwaggerProperties&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;apiBasePackage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;com.besscroft.aurora.mall.admin.controller&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;极光商城开发文档&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;后台相关接口文档&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;contactName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Bess Croft&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;contactEmail&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;besscroft@foxmail.com&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;contactUrl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://github.com/besscroft/aurora-mall&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;license&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Open Source&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;licenseUrl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://github.com/besscroft/aurora-mall/blob/main/LICENSE&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;0.1.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;enableSecurity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这里注意2点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@Profile&lt;/code&gt; 注解可以规定在哪个环境下生效，咱们只控制开发环境就ok了。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apiBasePackage&lt;/code&gt; 设置生成的接口在哪个包里面。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;同时，如果网关配置了白名单机制，记得放行 &lt;code&gt;/v2/api-docs&lt;/code&gt; 地址！因为这里咱没做认证功能！（对于线上生产环境来说，白名单可以更好地控制访问权限，能一定程度保证安全性！）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;启动&#34;&gt;启动&lt;/h4&gt;
&lt;p&gt;然后咱们启动项目，来查看是否配置成功！&lt;/p&gt;
&lt;p&gt;访问分组接口地址：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plain&#34; data-lang=&#34;plain&#34;&gt;http://localhost:8000/swagger-resources
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre&gt;&lt;code class=&#34;language-jaon&#34; data-lang=&#34;jaon&#34;&gt;[
    {
        &amp;quot;name&amp;quot;: &amp;quot;mall-auth&amp;quot;,
        &amp;quot;url&amp;quot;: &amp;quot;/mall-auth/v2/api-docs&amp;quot;,
        &amp;quot;swaggerVersion&amp;quot;: &amp;quot;2.0&amp;quot;,
        &amp;quot;location&amp;quot;: &amp;quot;/mall-auth/v2/api-docs&amp;quot;
    },
    {
        &amp;quot;name&amp;quot;: &amp;quot;mall-admin&amp;quot;,
        &amp;quot;url&amp;quot;: &amp;quot;/mall-admin/v2/api-docs&amp;quot;,
        &amp;quot;swaggerVersion&amp;quot;: &amp;quot;2.0&amp;quot;,
        &amp;quot;location&amp;quot;: &amp;quot;/mall-admin/v2/api-docs&amp;quot;
    },
    {
        &amp;quot;name&amp;quot;: &amp;quot;mall-elasticsearch&amp;quot;,
        &amp;quot;url&amp;quot;: &amp;quot;/mall-elasticsearch/v2/api-docs&amp;quot;,
        &amp;quot;swaggerVersion&amp;quot;: &amp;quot;2.0&amp;quot;,
        &amp;quot;location&amp;quot;: &amp;quot;/mall-elasticsearch/v2/api-docs&amp;quot;
    },
    {
        &amp;quot;name&amp;quot;: &amp;quot;mall-log&amp;quot;,
        &amp;quot;url&amp;quot;: &amp;quot;/mall-log/v2/api-docs&amp;quot;,
        &amp;quot;swaggerVersion&amp;quot;: &amp;quot;2.0&amp;quot;,
        &amp;quot;location&amp;quot;: &amp;quot;/mall-log/v2/api-docs&amp;quot;
    }
]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;有正常值，表示接口返回正常！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;访问前端地址：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plain&#34; data-lang=&#34;plain&#34;&gt;http://localhost:8000/doc.html#/home
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;注意，实例中的 8000，指的是网关的端口号！&lt;/p&gt;
&lt;h4 id=&#34;使用注解&#34;&gt;使用注解&lt;/h4&gt;
&lt;p&gt;实际上就是 Swagger 的注解，比如说：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;接口类上面可以加 &lt;code&gt;@Api(tags = &amp;quot;主页接口&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接口方法上可以加 &lt;code&gt;@ApiOperation(value = &amp;quot;首页排行接口&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实体类上可以加 &lt;code&gt;@ApiModel(value = &amp;quot;登录对象&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实体类字段上可以加 &lt;code&gt;@ApiModelProperty(value = &amp;quot;用户名&amp;quot;, dataType = &amp;quot;String&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当然，不加也可以默认扫描读取！&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;白名单&#34;&gt;白名单&lt;/h4&gt;
&lt;p&gt;最后，放上一些可能需要放行的白名单地址：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/doc.html&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/v2/api-docs-ext&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/swagger-resources&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/v2/api-docs&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/swagger-ui.html&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/swagger-resources/configuration/ui&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/swagger-resources/configuration/security&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;最后&#34;&gt;最后&lt;/h3&gt;
&lt;p&gt;我觉得 knife4j 最大的好处就是，可以导出离线文档，有：Markdown、Word、Html、OpenAPI 格式！如果它正好命中你的需求，不妨试试引入到项目中呢！&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/" term="微服务" label="微服务" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/knife4j/" term="knife4j" label="knife4j" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/spring-cloud-2020/" term="Spring Cloud 2020" label="Spring Cloud 2020" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/spring-cloud-alibaba-2021/" term="Spring Cloud Alibaba 2021" label="Spring Cloud Alibaba 2021" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/swagger/" term="swagger" label="swagger" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">学习与人生——聊聊我的学习方法</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/life/2021/%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BA%BA%E7%94%9F%E8%81%8A%E8%81%8A%E6%88%91%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/" />
            <id>https://blog.besscroft.com/life/2021/%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BA%BA%E7%94%9F%E8%81%8A%E8%81%8A%E6%88%91%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/</id>
            <updated>2021-10-25T19:45:08&#43;08:00</updated>
            <published>2021-10-25T19:45:52&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">2 次“网络视频研讨会” 在 8 月份的时候，当时的工作还不算特别的忙，于是便组织了 2 次“网……</summary>
            
                <content type="html">&lt;h2 id=&#34;2-次网络视频研讨会&#34;&gt;2 次“网络视频研讨会”&lt;/h2&gt;
&lt;p&gt;在 8 月份的时候，当时的工作还不算特别的忙，于是便组织了 2 次“网络视频研讨会”。当时的初衷就是抱着与他人能够在网上面对面的交流和思想碰撞。&lt;/p&gt;
&lt;p&gt;所以，我以问卷调查的方式，汇集了一些有想法的朋友，在 2 个美好的周末，组织了 2 次。至于为什么没有第 3 场了，一方面是因为我的工作越来越忙，没有时间准备且需要休息；另一方面则是，参与的人数还是太少，多少有些提不起劲来了。这种形式并不像提笔写字，把想法写下来就行。当你倾诉时，没有人倾听，实际上是难以坚持下去的！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2021/study-method/study001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;第一次交流时，可能是图个新鲜，大家交流都比较积极。自我介绍、闲聊环节、分享近期状况以及对未来规划的交流，基本上是大家都发言。而扩展话题，主要就是由我来主讲。第一期主要的环节——互相认识、围绕每个人自身进行总结、个人规划、以及对后续会议有无建议。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2021/study-method/study002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;第二次交流，实际上新增了一个流程——嘉宾发言。主要是让第一次之后参与进来的同学，进行发言，当然，你想分享也是可以的。第二期主要的环节——嘉宾发言、系统性学习（在任何环境下如何学习）、作为一名开发人员你需要完善自己的基础设施。&lt;/p&gt;
&lt;h2 id=&#34;我平常是如何学习的&#34;&gt;我平常是如何学习的？&lt;/h2&gt;
&lt;h3 id=&#34;学习前期的准备&#34;&gt;学习前期的准备&lt;/h3&gt;
&lt;h4 id=&#34;目标规划&#34;&gt;目标规划&lt;/h4&gt;
&lt;p&gt;不知道是否已经养成了习惯，还是怕自己经常会迷茫，不知道该干啥。以至于我经常会给自己指定目标和规划。常用的软件比如：Trello、Notion、JIRA等。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2021/study-method/study003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上大学那会儿，还只会用 Trello，写文章时打开了以前的看板，截了个图。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2021/study-method/study004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2021/study-method/study005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;毕业之后，就开始以 Notion 为主了，相比而言，功能更强大，但是也有一些不足。&lt;/p&gt;
&lt;p&gt;回到正题，做目标规划的意义是什么呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;清空大脑，把大脑从「要做什么」和「怎么做」的混乱当中拯救出来。&lt;/li&gt;
&lt;li&gt;随时随地都明确地知道，下一步应该做什么。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;估计可能有读者朋友已经发现了，这2句话，其实是 GTD 的目的。GTD（Getting Things Done） 时间管理法则，我的理解就是，把事情处理完！这里俺就不详细说 GTD 了，因为我目前也在实践阶段，等自己“完全掌握”或者有所心得了，再跟大伙儿聊聊！&lt;/p&gt;
&lt;h4 id=&#34;学习如何正确的开始&#34;&gt;学习如何正确的开始？&lt;/h4&gt;
&lt;p&gt;如果你要开始学习一个新东西，却不知道如何正确的开始，那么不妨参考下我的方法——“从思维导图开始，从思维导图结束。”&lt;/p&gt;
&lt;p&gt;拿 Golang 学习为例吧，在我在最开始学习前，肯定不能再像我高中刚入门 Java 时那样买本书就开始盲目地学习了。我先去网上找到了 Golang 学习路径图，这个对我学习的方向有极大的帮助。&lt;/p&gt;
&lt;p&gt;👉&lt;a href=&#34;https://github.com/Alikhll/golang-developer-roadmap/blob/master/i18n/zh-CN/ReadMe-zh-CN.md&#34;&gt;Go 开发者路线图&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后，我自己又讲里面的内容，整理到了自己的思维导图里面。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2021/study-method/study006.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后，根据路线图来学（学习不要一步登天、也不要心浮气躁），我怕自己学的太枯燥，又不想在找书上面浪费太多的时间，于是就选择了——《Head First Go语言程序设计》。这真的是一本极佳的入门书，里面在恰当的位置，总是能出现有趣的插图。想当初我在高中买的第一本书时，体验就远不如这本。当时冲着名字买——《Java 从入门到精通》，看上去很震撼，实则不然，前往精通的路上，竟然是我一步步用笔注解书中的错误过来的。直到高二时，买了一本 Oracle 官方的《Java 8 编程入门官方教程》，才对 Java 这门语言有了不一样的了解，后来才一步步纠正了学习的方法，逐渐熟练起来。&lt;/p&gt;
&lt;h3 id=&#34;学习动机&#34;&gt;学习动机&lt;/h3&gt;
&lt;p&gt;我们都知道，学习可以分为两类：主动学习和被动学习。对于我来说，上学时，我喜欢的科目，叫主动学习；我不喜欢的科目，叫被动学习（这可能也是我偏科的原因之一吧）。而现在，学习编程，就完完全全的是主动学习了。&lt;/p&gt;
&lt;h4 id=&#34;找到自己的兴趣点&#34;&gt;找到自己的兴趣点&lt;/h4&gt;
&lt;p&gt;为什么我学习编程属于主动学习呢？因为编程属于我的兴趣点。也就是咱们常说的，对某种事物感兴趣。每当我开发出一个新东西、解决一个新 bug、学习一个新的技术点，都会让我获得满足感与成就感。&lt;/p&gt;
&lt;p&gt;这里其实我父亲的作用也挺大的，在我小时候，只是对计算机和编程“充满好奇”，算不上感兴趣。小孩子好奇的时候，总喜欢问各种奇怪的问题。但是我父亲有意的“引导”我，强化了对计算机和编程的好奇心。也许是为了让我少打游戏这么干的吧，我也没有找他本人确认过，但是有一点可以肯定的是，不善的引导、甚至用小孩子认为的更粗暴的方式对对待他这种行为的话，很容易讲好奇心扼杀在摇篮中的！&lt;/p&gt;
&lt;h4 id=&#34;成隐性和快感&#34;&gt;成隐性和快感&lt;/h4&gt;
&lt;p&gt;不知道大家有没有这样的感受，就拿我自己来说吧。当我在家“折腾”项目时，或者写开源项目时，总是乐在其中（当然，音乐也是得放的）。在这个过程中，就会让人产生快感——过程性快感。而当我 commit 代码时，也会感到快乐——结果性快感。当你经常性的出现这些快感的话，就会产生“成隐性”。以至于只要周末一有空，我就会写写代码。&lt;/p&gt;
&lt;p&gt;我想，玩游戏可能也是这样吧，一玩就停不下来。但如果你 LOL 跟人一起五黑，然后连输10把，大概率你最近都不想打了。🤣&lt;/p&gt;
&lt;h3 id=&#34;学习媒介很重要&#34;&gt;学习媒介很重要&lt;/h3&gt;
&lt;h4 id=&#34;我最常用哪些媒介学习&#34;&gt;我最常用哪些媒介学习？&lt;/h4&gt;
&lt;p&gt;我在大学时，不像现在这么喜欢看书自学，而是更倾向与看视频学习。但是却从来没有一个视频是看完了的，往往看了几个视频后，就看不进去了。最重要的一点，不知道大家有没有体会过，看完之后，你感觉自己什么都没学会，是不是？以至于后来，我学习编程就剩下3种主要方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;看书&lt;/li&gt;
&lt;li&gt;看官方文档&lt;/li&gt;
&lt;li&gt;看别人的开源项目&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;为什么我更喜欢看书而非视频&#34;&gt;为什么我更喜欢看书而非视频？&lt;/h4&gt;
&lt;p&gt;一句话总结：看视频会导致你的思考变少，而看书不会！&lt;/p&gt;
&lt;p&gt;看视频学习的时候，往往难以深入思考。而视频本身的质量，我们是不确定的，更别说为了吸引流量而特地设计的视频了。如果你想看质量更高的视频，我推荐你去 YouTube 看公开课，当然，有时候你也能在 B站找到中译版的公开课视频。&lt;/p&gt;
&lt;p&gt;从时间的角度来讲，更不应该看视频。一句话，用眼睛看完的时间，肯定是会小于用嘴巴念完的时间。并且，视频是有很多“空白时间”的，空白时间你真的用来思考了吗？别人一个方法，敲了多久你就要等多久再看，但是文字版你能直接阅读。而且视频版切来切去的，都容易打断思维。所以，我个人是更青睐与看书的，看书能够让我更多地独立思考！&lt;/p&gt;
&lt;h3 id=&#34;学习结果的产生&#34;&gt;学习结果的产生&lt;/h3&gt;
&lt;p&gt;咱们不能光学不练呀，是吧？在看编程书的时候，一定要照着书上的代码示例，手动敲一敲。你可以预先在脑海中演练一遍，然后再去手动敲出来，看是否符合你的预期。炉火纯青之后，再省略这一步，节约时间。&lt;/p&gt;
&lt;p&gt;如果是学习新的知识，一定要做好笔记和总结，同时要画思维导图，这样你才能把知识消化掉！&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E7%94%9F%E6%B4%BB/" term="生活" label="生活" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BA%BA%E7%94%9F/" term="学习与人生" label="学习与人生" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/" term="学习方法" label="学习方法" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">高效上网与系统性学习</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2021/internet_surfing/" />
            <id>https://blog.besscroft.com/tech/2021/internet_surfing/</id>
            <updated>2021-10-09T17:01:28&#43;08:00</updated>
            <published>2021-10-09T17:01:51&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">前言 我接触互联网的十几年，整个世界似乎发生了天翻地覆的变化。过去的人们，喜欢贴吧，论……</summary>
            
                <content type="html">&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;我接触互联网的十几年，整个世界似乎发生了天翻地覆的变化。过去的人们，喜欢贴吧，论坛。而现在，不知道为什么，就拿起了手机，仿佛离手之后就好像失去了什么。打开抖音或者B乎，一个接一个的滑动，能够看到大半夜不睡觉。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;手里握着手机时，我们好像变成了幽灵，在现实和虚拟两个世界间摇摆。——《玻璃笼子》尼古拉斯·卡尔&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;英文搜索&#34;&gt;英文搜索&lt;/h2&gt;
&lt;h3 id=&#34;为什么我们需要英文搜索&#34;&gt;为什么我们需要英文搜索？&lt;/h3&gt;
&lt;p&gt;我不知道大家有没有跟我一样的经历。比如说在程序开发过程中，遇到问题，我可能会去搜索引擎搜索。但是我们必须明白的事情是，中文互联网的内容农场实在是太多了。几乎全是采集站，不仅对你毫无帮助，还会影响你的心情。&lt;/p&gt;
&lt;p&gt;可能你会疑问，高质量的中文内容也是有的呀？这点我并不反对，但是采集站的 seo，往往做的比独立博客好，这点我相信你也明白。甚至有的搜索引擎，一直在做劣化中文搜索的事情，我不说大家也知道吧？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当然，不谈场景，就是在耍流氓！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是我相信，每位读者应该都知道何时用中文搜索，何时用英文搜索，以及如何选择搜索引擎吧😁&lt;/p&gt;
&lt;p&gt;那如果你要问，我用英文搜索，也有很多内容农场呀，有时候也搜不到东西。别急，咱们接着往下看！&lt;/p&gt;
&lt;h3 id=&#34;基本的英文搜索技巧&#34;&gt;基本的英文搜索技巧&lt;/h3&gt;
&lt;p&gt;最简单的，能立即想到的，绝对是：&lt;strong&gt;关键词&lt;/strong&gt;+&lt;strong&gt;引导词&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;比如我们可以搜索：&lt;code&gt;Java Tutorial&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;给大伙儿列举一些常用的引导词：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;概述（Overview，Introduction，Getting Started）&lt;/li&gt;
&lt;li&gt;指南（Tutorial，Guide，Howto）&lt;/li&gt;
&lt;li&gt;功能参考（Reference，Index）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可能用到的逻辑关系：&lt;/p&gt;
&lt;p&gt;与（一般空白即可）、或（OR）、非（-）&lt;/p&gt;
&lt;p&gt;举个例子：&lt;code&gt;Java -csdn&lt;/code&gt; 🤣&lt;/p&gt;
&lt;h2 id=&#34;科学上网&#34;&gt;科学上网&lt;/h2&gt;
&lt;h3 id=&#34;为什么我们需要科学上网&#34;&gt;为什么我们需要科学上网？&lt;/h3&gt;
&lt;p&gt;这里就不讨论敏感的因素了，单纯的从学术以及上网的舒适度来考虑。&lt;/p&gt;
&lt;p&gt;上面刚提到了，国内的搜索引擎，体验确实有点差，尤其是竞价排名和采集站，导致第一页基本上都不是你想要找到的内容。而诸如 Google 之类的搜索引擎，是可以一定程度上避免的。然后就是一些学习资料、影视资料之类的，也得借助科学上网才能有良好的搜索和使用体验。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这一点在开发程序时，查找资料是深有体会！没有坚挺的工具，只有愿意学习的人！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;获取和筛选信息&#34;&gt;获取和筛选信息&lt;/h2&gt;
&lt;h3 id=&#34;了解媒介形态&#34;&gt;了解“媒介形态”&lt;/h3&gt;
&lt;p&gt;媒介形态即媒介的生存状态（包括媒介的外部形态和作为内部结构的传播符号）、生存依据、媒介的传播方式方法（包括受众接受媒介信息的形式和途径）以及由此展示的媒介功能与特征。&lt;/p&gt;
&lt;p&gt;比如说当我们要学习 Java 时，可以去B站看视频、也可以看书、看官方文档，还可以去看各种博客，这些都属于“媒介”。&lt;/p&gt;
&lt;p&gt;当然，媒介不同的形式，给你带来的“信息”，也是不同的。举个例子，学习 Java 而看视频，确实能让你迅速上手，但是这种被动式的媒介形式，也会不可避免的“抑制”你的思考。视频容易让你的大脑停留在“心里舒适区”，你对事物的思考程度，是远比不上读书的。&lt;/p&gt;
&lt;p&gt;书籍这种媒介形式，具有主动性、系统性以及深刻性的优势。像编程这种复制的领域，书籍在“系统性”的方面，优势绝对不亚于其它任何一种媒介。&lt;/p&gt;
&lt;h3 id=&#34;信息获取渠道&#34;&gt;信息获取渠道&lt;/h3&gt;
&lt;p&gt;个人信息源在社会信息交流系统中具有重要的作用。人是社会性的物种，一个社会人对信息是有强烈需求的，而信息源会影响你的行动决策。一个低效低质量的信息渠道可能会让你做出很多错误的决策，以至于会让你形成错误的认知。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;后面可以聊聊，我是如何构建自己的“信息源”的~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;dikw-模型&#34;&gt;DIKW 模型&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2021/internet_surfing/internet_surfing001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;DIKW 模型是一个可以很好的帮助我们理解数据（Data）、信息（Information）、知识（Knowledge）和智慧（Wisdom）之间的关系的模型，这个模型还向我们展现了数据是如何一步步转化为信息、知识、乃至智慧的方式。——来源：智库百科&lt;/p&gt;
&lt;p&gt;为了更好地理解这个模型，咱们得知道，模型的每一层是干什么的，以及相邻层次之间的差异。下面我就拿大伙儿日常生活中，最不起眼的事来举例子吧，没错，就是——“花钱”。&lt;/p&gt;
&lt;h4 id=&#34;数据data-与信息information-的区别&#34;&gt;数据(Data) 与信息(Information) 的区别&lt;/h4&gt;
&lt;p&gt;你每天都会花钱吧，对不对？你花的每一笔钱，都可以被记录下来，从某种角度来讲，每一条记录，都只是一条数据而已，并没有什么意义。因为这时的数据，还是属于“原始资料”的形态。但是，我们可以把每一天，每个月，每年的数据汇总，然后我们进行相应的处理，是不是就能得到一些信息？&lt;/p&gt;
&lt;p&gt;比如说一年的总收入和总支出、哪个月花钱最多，钱都花到哪里去了？这些都是“信息”。我们通过分析原始资料，获得了信息。这些信息分为显性和隐性的，比如：谁？什么（内容）？哪里？什么时间？为什么这样？&lt;/p&gt;
&lt;p&gt;单个的数据，其实是没啥意义的，但是当我们将它转化为信息之后，它的意义自然就显现了！&lt;/p&gt;
&lt;h4 id=&#34;信息information-与知识knowledge-的区别&#34;&gt;信息(Information) 与知识(Knowledge) 的区别&lt;/h4&gt;
&lt;p&gt;信息的生命周期太短，以至于你不去主动的消化它，它也会失去意义。比如说，你可以反思下过去一年，有哪些东西，是你买了但没必要买的，而且很贵的东西。对过去一年的消费记录（信息）进行归纳、比较、复盘，使信息中有价值的部分沉淀下来，并和自己本身已经存在的知识体系相结合，那么这部分信息就转变成知识了。&lt;/p&gt;
&lt;p&gt;想想读书的时候，老师在讲台上讲解题目时，你突然想到做过的另一个类似的题目，然后进行了比较，这也是信息转化为知识的过程。&lt;/p&gt;
&lt;h4 id=&#34;知识knowledge-与智慧wisdom-的区别&#34;&gt;知识(Knowledge) 与智慧(Wisdom) 的区别&lt;/h4&gt;
&lt;p&gt;知识和智慧，我个人的理解就是：知识关注的是过去，智慧关心的是未来。&lt;/p&gt;
&lt;p&gt;引用一下专业点的解释：人类基于已有的知识，针对物质世界中运动过程中产生的问题根据获得的信息进行分析、对比、演绎找出解决方案的能力。这种能力运用的结果是将信息的有价值部分挖掘出来并使之成为知识架构的一部分。&lt;/p&gt;
&lt;h3 id=&#34;结合搜索引擎挖掘网络资源&#34;&gt;结合搜索引擎挖掘网络资源&lt;/h3&gt;
&lt;p&gt;咱们上面有聊到，为什么要使用英文搜索和科学上网。&lt;/p&gt;
&lt;p&gt;但是搜索引擎层面，尽量还是要选择 Google 之类的搜索引擎。并且我建议大家使用 google.com/ncr ，这样就能用国际版（禁用国别重定向），经常逛开源社区的小伙伴应该能见到不少人这么推荐。&lt;/p&gt;
&lt;h4 id=&#34;网页快照&#34;&gt;网页快照&lt;/h4&gt;
&lt;p&gt;基本上很多人都碰到过 &lt;code&gt;404&lt;/code&gt; 和 &lt;code&gt;重定向&lt;/code&gt;，这会给我们造成不好的上网体验。我们可以在地址前面加上 &lt;code&gt;cache:&lt;/code&gt; ，比如 &lt;code&gt;baidu.com&lt;/code&gt; 变成 &lt;code&gt;cache:baidu.com&lt;/code&gt;。或者可以使用互联网档案馆（Internet Archive）进行搜索，查看纯文字版的快照，还可以过滤掉 JavaScript 脚本，也会更安全！&lt;/p&gt;
&lt;h4 id=&#34;过滤搜索&#34;&gt;过滤搜索&lt;/h4&gt;
&lt;p&gt;可以结合搜索引擎语法，进行过滤搜索。比如只查看某网站的相关内容，或者搜索特定的文件。&lt;/p&gt;
&lt;h3 id=&#34;搜索引擎也搜不到该怎么办&#34;&gt;搜索引擎也搜不到该怎么办？&lt;/h3&gt;
&lt;p&gt;一般有这么几种情况，可能会搜不到想要的信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对应的内容提供商，打算“圈地”，禁止了搜索引擎爬虫爬取。&lt;/li&gt;
&lt;li&gt;还没搜录。&lt;/li&gt;
&lt;li&gt;你打开方式不对。&lt;/li&gt;
&lt;li&gt;内容农场太多，导致你找不到正常的内容，从而丧失耐心！&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我这里也给出几种对应的解决方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;看看别人是怎么搜的（是的没错，你可以搜索相关内容，学习下别人怎么搜索你想搜的这个内容的）。&lt;/li&gt;
&lt;li&gt;花时间学一下搜索引擎语法吧。&lt;/li&gt;
&lt;li&gt;专业的事，交给专业的工具去做。比如说你想找一本书，有时候搜索引擎并不是最好的解决方案，不妨试试 &lt;code&gt;z-library&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/" term="科学上网" label="科学上网" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E8%8B%B1%E6%96%87%E6%90%9C%E7%B4%A2/" term="英文搜索" label="英文搜索" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E5%AD%A6%E4%B9%A0/" term="学习" label="学习" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E7%B3%BB%E7%BB%9F%E6%80%A7%E5%AD%A6%E4%B9%A0/" term="系统性学习" label="系统性学习" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/dikw-%E6%A8%A1%E5%9E%8B/" term="DIKW 模型" label="DIKW 模型" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">数字时代如何管理你的数字隐私</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2021/manage-digital-privacy/" />
            <id>https://blog.besscroft.com/tech/2021/manage-digital-privacy/</id>
            <updated>2021-09-12T19:13:02&#43;08:00</updated>
            <published>2021-07-07T10:14:51&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">前言 1、盘点近年来重大数据泄露和攻击事件 事件其实是非常多的，这里挑一部分出来。 泄露事……</summary>
            
                <content type="html">&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;h3 id=&#34;1盘点近年来重大数据泄露和攻击事件&#34;&gt;1、盘点近年来重大数据泄露和攻击事件&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2021/manage-digital-privacy/manage-digital-privacy001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;事件其实是非常多的，这里挑一部分出来。&lt;/p&gt;
&lt;h4 id=&#34;泄露事件&#34;&gt;泄露事件&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;微软Bing 服务器暴露 6.5 TB 用户搜索记录数据 &lt;a href=&#34;https://www.wizcase.com/blog/bing-leak-research/&#34;&gt;https://www.wizcase.com/blog/bing-leak-research/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;雷蛇 泄露了超 10 万用户的个人信息 &lt;a href=&#34;https://hackernews.cc/archives/32120&#34;&gt;https://hackernews.cc/archives/32120&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;英特尔 20GB机密数据泄漏，含有BIOS和专有技术源代码等 &lt;a href=&#34;https://mp.weixin.qq.com/s/4uu1Fb3plI-MB2KB7zYKCg&#34;&gt;https://mp.weixin.qq.com/s/4uu1Fb3plI-MB2KB7zYKCg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;暗网泄漏的两千万多台湾省公民数据库 &lt;a href=&#34;https://mp.weixin.qq.com/s/HsIhl0JV3qA3yMKupbgNxw&#34;&gt;https://mp.weixin.qq.com/s/HsIhl0JV3qA3yMKupbgNxw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;号百信息服务有限公司 出售中国电信超 2 亿用户信息，售价低至 0.01 元/条 &lt;a href=&#34;https://mp.weixin.qq.com/s/shk1LGrtKWS9fPwpM1U46A&#34;&gt;https://mp.weixin.qq.com/s/shk1LGrtKWS9fPwpM1U46A&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;微博 数据泄露事件 &lt;a href=&#34;https://securityaffairs.co/wordpress/100243/data-breach/weibo-data-dark-web.html&#34;&gt;https://securityaffairs.co/wordpress/100243/data-breach/weibo-data-dark-web.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;最近大家最熟悉的，应该是滴滴的事情了吧，大家可以去看一下官方的通报！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;攻击事件&#34;&gt;攻击事件&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;NPM 遭遇供应链投毒攻击窃取K8S集群凭证 &lt;a href=&#34;https://mp.weixin.qq.com/s/Qx7WCVicPsZQvYarskqB8w&#34;&gt;https://mp.weixin.qq.com/s/Qx7WCVicPsZQvYarskqB8w&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2345 旗下下载站被发现传播木马 &lt;a href=&#34;https://www.huorong.cn/info/1583504456441.html&#34;&gt;https://www.huorong.cn/info/1583504456441.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;驱动人生 供应链攻击事件 &lt;a href=&#34;https://www.freebuf.com/articles/system/192194.html&#34;&gt;https://www.freebuf.com/articles/system/192194.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;惠普 笔记本音频驱动内置键盘记录后门事件 &lt;a href=&#34;https://www.anquanke.com/post/id/86085&#34;&gt;https://www.anquanke.com/post/id/86085&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2自查泄露途径&#34;&gt;2、自查泄露途径&lt;/h3&gt;
&lt;p&gt;列举一些渠道，你可以自查一下，你的这些信息，都在什么地方使用过/泄露过。&lt;/p&gt;
&lt;h4 id=&#34;邮箱&#34;&gt;邮箱&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2021/manage-digital-privacy/manage-digital-privacy002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://hunter.io/&#34;&gt;Find email addresses in seconds • Hunter (Email Hunter)&lt;/a&gt; - email 信息查询工具&lt;/li&gt;
&lt;li&gt;Firefox Monitor &lt;a href=&#34;https://monitor.firefox.com/&#34;&gt;https://monitor.firefox.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&#39;;--have i been pwned? &lt;a href=&#34;https://haveibeenpwned.com/&#34;&gt;https://haveibeenpwned.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;手机号&#34;&gt;手机号&lt;/h4&gt;
&lt;p&gt;涉及到个人隐私问题，我无法保证读者不滥用，所以手机号自查就跳过了。&lt;/p&gt;
&lt;h4 id=&#34;常用用户名&#34;&gt;常用用户名&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://instantusername.com/#/&#34;&gt;Instant Username Search&lt;/a&gt; - 实时搜索100多个社交媒体网站的用户名。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://checkusernames.com/&#34;&gt;CheckUsernames&lt;/a&gt; - 测某账号是否在全球500多个社交媒体中是否有注册。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://whatsmyname.app/&#34;&gt;WhatsMyName Web&lt;/a&gt; - 搜索许多网站上存在的用户名。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://namecheckup.com/&#34;&gt;NameCheckup&lt;/a&gt; - 查找可用的用户名&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;对上面查出来的结果不要惊讶，因为数据不一定就是100%正确的。我自己在自查的时候，就发现，自己常用用户名被人抢注的情况。一种可能是别人也想到这个用户名了，另一种可能的情况就是，有人故意而为之。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;密码泄露查询&#34;&gt;密码泄露查询&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Firefox Monitor &lt;a href=&#34;https://monitor.firefox.com/&#34;&gt;https://monitor.firefox.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://snusbase.com/&#34;&gt;Snusbase&lt;/a&gt; - 搜索电子邮件，名称和用户名，IP地址，电话，哈希或密码，检测自己的信息是否已泄露。&lt;/li&gt;
&lt;li&gt;&#39;;--have i been pwned? &lt;a href=&#34;https://haveibeenpwned.com/&#34;&gt;https://haveibeenpwned.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;ipdns自反查&#34;&gt;IP/DNS自/反查&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dnsleaktest.com/&#34;&gt;DNS leak test&lt;/a&gt; - 检测 DNS 泄露的网站&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ipip.net/&#34;&gt;IPIP.NET&lt;/a&gt; 专注 IP 地理位置以及 IP 画像数据的研究、整理与发行&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3隐私信息搜集&#34;&gt;3、隐私信息搜集&lt;/h3&gt;
&lt;p&gt;涉及到个人隐私问题，我无法保证读者不滥用，所以隐私信息收集就跳过了。我不可能教别人去搜集隐私啊，对吧？&lt;/p&gt;
&lt;h3 id=&#34;4保护措施&#34;&gt;4、保护措施&lt;/h3&gt;
&lt;p&gt;说了这么多，本期的重点来了。主要是教大家如何最大程度的保护自己的数据隐私，防止自己的隐私泄露。&lt;/p&gt;
&lt;h4 id=&#34;操作系统&#34;&gt;操作系统&lt;/h4&gt;
&lt;p&gt;在操作系统层面，凡是可能涉及到隐私的东西，&lt;strong&gt;尽量&lt;/strong&gt;不要用移动操作系统。你可以使用 Windows、macos 和 *unix 操作系统进行这些操作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不建议使用预装的操作系统。我虽然不反对大家用 Windows 或者 macos 来操作，因为实际上很多读者也就是普通人，所以要考虑到大家的使用习惯和学习成本。因此，这里强调的防范也是相对的。即你可能使用某大公司或银行的服务，但是同时又想规避第三方公司恶意收集你的信息，你就可以从操作系统层面做一些隔离。&lt;/li&gt;
&lt;li&gt;Linux 操作系统建议选社区主导的发行版。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;软件&#34;&gt;软件&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;除非你有充分的理由，否则请去官方下载任何软件，不要在什么XX软件管家、XX下载站下载。这些地方除了会有捆绑软件之外，可能还会携带病毒，甚至提供被篡改的软件安装包给你，毕竟很多读者，并不会去核查安装包的数字签名。&lt;/li&gt;
&lt;li&gt;建议使用虚拟机来隔离你的操作系统，保证进一步的安全。我个人比较喜欢用 &lt;a href=&#34;https://www.vmware.com/products/workstation-pro.html&#34;&gt;VMware Workstation&lt;/a&gt; 虚拟机，当然 &lt;a href=&#34;https://www.virtualbox.org/&#34;&gt;VirtualBox&lt;/a&gt; 也挺好用。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;更深入的虚拟机颗粒度、虚拟机穿透、虚拟机快照等等知识，这里就不做多讲解了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;使用软件是，如果可以，同类型产品优先考虑开源软件。比如解压缩软件，我就使用的 7zip。&lt;/li&gt;
&lt;li&gt;对于一些出了名的垃圾软件，但是你又不得不用的，直接扔虚拟机吧。。。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;浏览器扩展&#34;&gt;浏览器扩展&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;HTTPS Everywhere&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;终结内容农场&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DuckDuckGo Privacy Essentials&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cookie AutoDelete&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Decentraleyes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NoScript&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;密码学&#34;&gt;密码学&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;一定要让你所有的平台的密码都不同！！！&lt;/li&gt;
&lt;li&gt;现在很多平台要求大小写+数字+特殊符号+8位以上，所以我建议你可以在脑海中构建一套自己的密码生成系统，将你所有的密码都换成这种形式的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;输入法&#34;&gt;输入法&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;尽量不要安装第三方输入法，或者使用开源和来源可信的输入法。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;搜索引擎&#34;&gt;搜索引擎&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;如果你一定要使用中文搜索引擎，我建议优先使用 Bing ，其次是搜狗。为什么不建议百度呢，主要是体验太差了，广告多，seo恶心，你几乎很难找到有价值的信息。&lt;/li&gt;
&lt;li&gt;如果你使用 Google ，那么我建议你把 Google 给 ncr 一下。&lt;/li&gt;
&lt;li&gt;你可以使用 DuckDuckGo 搜索引擎来进行隐私搜索。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;隐私上网&#34;&gt;隐私上网&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;邮箱&lt;/p&gt;
&lt;p&gt;这里可以使用临时邮箱进行替代，为什么这么说呢。因为你注册某些业务，可能并不需要经常访问，甚至只使用一次，而且这个东西也并不重要，这时你就可以使用临时邮箱了。要说临时邮箱最大的好处，我觉得是有效的避免了垃圾邮件和钓鱼邮件。试想一下这个场景，你的工作邮箱的通知，时刻保持开启，但是无时无刻都在接受着垃圾邮件的轰炸，是不是心情都坏了？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linshiyouxiang.net/&#34;&gt;临时邮箱- 十秒钟内收到邮件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://temp-mail.org/zh/&#34;&gt;Temp Mail - 临时性- 匿名电子邮件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yopmail.com/zh/&#34;&gt;临时、匿名的免费邮箱地址。 - YOPmail&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IP代理&lt;/p&gt;
&lt;p&gt;很多时候，非必要的上网，其实可以使用代理进行上网，从而隐藏你的真实 IP。而且你可以指定相应的规则，不同的 IP，不同的网站，使用不同的代理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;短信接码&lt;/p&gt;
&lt;p&gt;跟上面的邮箱一样，你注册某项访问，可能只使用一次，并且仅支持手机注册的话，那么你可以使用接码的方式进行，这样也能防止一些垃圾短信。接码，顾名思义是接收短信验证码。而很多接码平台，则提供了接收验证码、收发短消息、短消息通道、接收语言短信等服务。但是，据我了解，这个是有法律风险的，所以还请各位读者不要滥用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;身份生成&lt;/p&gt;
&lt;p&gt;对于某些平台，你可能并不想向他们提供你的真实信息，那么你可能需要生成假的身份信息。虽然国家有相应的法律法规保护着我们，但是总是有些公司会偷偷的贩卖你的信息，甚至有一部分公司，直接是没有保护好你的信息，导致了信息的泄露。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;照片信息&#34;&gt;照片信息&lt;/h4&gt;
&lt;p&gt;首先，我不建议你把自己的照片随便传到网上去，那样肯定是不太好的。如果你非要传，也可以处理下照片，比如照片的 EXIF 信息。而且手指的指纹也要保证能不被检测处理，当然，现在很多人的照片P的她妈都不认识，指纹当然也不会有啦🤣&lt;/p&gt;
&lt;p&gt;我觉得，对于普通人来说，想让他们引起对照片的重视的话，可以推荐看看&lt;strong&gt;侦探挑战赛&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;一些建议&#34;&gt;一些建议&lt;/h4&gt;
&lt;p&gt;身处数字时代，你身边的一切，都可能在贩卖和泄露你的隐私数据。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;外卖、快递单号。&lt;/li&gt;
&lt;li&gt;发布到网上的照片。&lt;/li&gt;
&lt;li&gt;社交媒体关联信息。&lt;/li&gt;
&lt;li&gt;你家里的语音助手音箱和其它未经授权的设备。&lt;/li&gt;
&lt;li&gt;买卖二手设备时，信息是否删除。&lt;/li&gt;
&lt;li&gt;广告商对你进行的追踪。&lt;/li&gt;
&lt;li&gt;你电脑/手机上的软件，扫描你的硬盘。&lt;/li&gt;
&lt;li&gt;你在社交平台的冲浪信息，在购物平台的消费信息，都有可能被爬取或泄露。&lt;/li&gt;
&lt;li&gt;浏览一个陌生网页时，首先想到的应该是查看网页快照。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5免责声明&#34;&gt;5、免责声明&lt;/h3&gt;
&lt;p&gt;1、本文章任何内容仅供学习和研究使用，请勿使用其中所描述的技术手段用于非法用途，任何人造成的任何负面影响，与本人无关。
2、本文章任何内容、新闻皆不代表本人态度、立场，如有侵权，请立即联系我删除！
3、互联网是有记忆的，互联网也并非法外之地！你可以教他人如何防范风险，但是不要教他人干坏事！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最后，本文不是教你干坏事的，而是说希望能引起每个人对自己隐私的重视，防范自己的隐私泄露问题。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E9%9A%90%E7%A7%81/" term="隐私" label="隐私" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E9%9A%90%E7%A7%81%E7%AE%A1%E7%90%86/" term="隐私管理" label="隐私管理" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">学习与人生——聊聊我的第一个微信公众号</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2021/wechatmp/" />
            <id>https://blog.besscroft.com/tech/2021/wechatmp/</id>
            <updated>2021-08-03T17:36:05&#43;08:00</updated>
            <published>2021-06-29T16:12:53&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">缘起 大概18年的年初，我创建了自己的第一个微信公众号。 刚才去后台看了眼，第一篇群发文……</summary>
            
                <content type="html">&lt;h3 id=&#34;缘起&#34;&gt;缘起&lt;/h3&gt;
&lt;p&gt;大概18年的年初，我创建了自己的第一个微信公众号。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2021/wechatmp/wechatmp001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;刚才去后台看了眼，第一篇群发文章是在2018年01月21日，最后一篇文章更新于2021年04月23日。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2021/wechatmp/wechatmp002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;想不到自己还维护了3年多，历史单篇文章阅读量最高为2346次，3年多公众号总收入未超过1000。现在的总用户数还剩1094位，不知是不是太长时间没更新，以至于没人记得这个公众号，就没什么人取关了。。。&lt;/p&gt;
&lt;p&gt;上大学之前是寄读学校，而且严查手机，所以算是和互联网半脱轨状态。上大学之后，又重新开始上网冲浪，上课时就喜欢在下面刷公众号文章看，索性自己也就开了一个。主要用来记录自己的学习与成长过程。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当时写文章，给他人分享自己收获的那种反馈（喜悦），确实挺鼓励人的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;放弃更新&#34;&gt;放弃更新&lt;/h3&gt;
&lt;p&gt;放弃微信公众号的原因嘛，可以看看我这篇文章：&lt;a href=&#34;https://blog.besscroft.com/life/%E5%90%91%E7%9D%80%E6%9C%AA%E6%9D%A5%E8%80%8C%E7%94%9F/&#34;&gt;向着未来而生&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;背后的故事&#34;&gt;背后的故事&lt;/h3&gt;
&lt;p&gt;为什么我要把这件事单独拿出来说呢？因为我在互联网上进行“创作”，算是从这里开始的吧，不论任何形式。&lt;/p&gt;
&lt;p&gt;从写微信公众号开始，到写博客和技术笔记，再到成立自己的圈子（社区），以及后面的邮件订阅，我也是这么一步步走过来的。在这个过程中，学会了如何写作与思考，并养成了写作的这个习惯。同时我的“能力曲线”也是在这个阶段实现增长的。自己曾经的学习成绩并不算好，也偏科，索性后面用各种方式向自己证明了智商不算太低。在坚持写作的这几年，阅读了各种高质量的文章和书籍，算是让自己领悟到了学习的方法（开窍了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;笔者在学生时代最害怕写作文，那800字对当时的我来说，是极大的挑战！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;最后&#34;&gt;最后&lt;/h3&gt;
&lt;p&gt;这个微信公众号我以后肯定也不会再去维护了，重心暂时放在博客和邮件订阅。后面有时间，跟大家聊聊“子弹笔记”，是如何改变我的人生的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其实没这么夸张，但是子弹笔记法，确实让我养成了很多良好的习惯，我也用它来进行管理和规划。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BA%BA%E7%94%9F/" term="学习与人生" label="学习与人生" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/" term="微信公众号" label="微信公众号" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">超卖和分布式锁解决方案</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2021/redis-distributed-lock-solution/" />
            <id>https://blog.besscroft.com/tech/2021/redis-distributed-lock-solution/</id>
            <updated>2021-08-03T17:35:49&#43;08:00</updated>
            <published>2021-05-06T16:08:03&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">超卖和分布式锁解决方案 背景 要说现在在高并发场景中，哪个概念最火，那当属“秒杀”了。那……</summary>
            
                <content type="html">&lt;h1 id=&#34;超卖和分布式锁解决方案&#34;&gt;超卖和分布式锁解决方案&lt;/h1&gt;
&lt;h3 id=&#34;背景&#34;&gt;背景&lt;/h3&gt;
&lt;p&gt;要说现在在高并发场景中，哪个概念最火，那当属“秒杀”了。那么秒杀也是有自己的一些特点的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;大量用户同一时间访问，造成瞬时访问量激增。&lt;/li&gt;
&lt;li&gt;数据库的并发读写激增，导致负载非常高。&lt;/li&gt;
&lt;li&gt;请求数远大于库存数，只有部分人才能秒杀成功。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，这篇文章不具体讲秒杀系统的设计了，主要讲一讲在秒杀系统中的一环——Redis分布式锁。虽然商家都希望自己的东西卖的越多越好，但是大多数场景下，秒杀的库存并不是特别多，这时候我们就得避免“超卖”问题的发生了。&lt;/p&gt;
&lt;h2 id=&#34;下单的流程&#34;&gt;下单的流程&lt;/h2&gt;
&lt;h3 id=&#34;正常下单的流程&#34;&gt;正常下单的流程&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2021/redis-distributed-lock-solution/r001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;当用户的下单请求到达服务端时，为了防止恶意下单，首先系统中肯定要做风控的。如果说有大量的请求过来，可能需要接口限流。然后创建订单、创建成功后扣除库存。这种方案，算是最常见的解决方案了。而且也能够保证订单不会超卖，因为创建订单之后就减库存，已经封装成了一个原子操作。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;但是这样也有很明显的缺点：并发高了，操作数据库的次数会增加，对数据库的压力不用想都知道很高。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;预扣库存&#34;&gt;预扣库存&lt;/h3&gt;
&lt;p&gt;为了避免数据库负载增加太多，我们就可以从减少操作数据库 IO 入手。比如说扣库存这一操作，我们就没必要直接去数据库了，对吗？我们可以把库存缓存到 redis 进行预扣库存。然后通过消息队列来异步生成订单，这样用户等待的速度就会快很多，同时也给数据库减压了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2021/redis-distributed-lock-solution/r002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;订单的生成是异步的，咱们一般都会放到 MQ、kafka 这样的即时消费队列中处理，订单量比较少的情况下，生成订单非常快，用户几乎不用排队。而且在电商平台买，订单都会有个超时时间的，时间到了未支付，会自动退单。&lt;/p&gt;
&lt;h3 id=&#34;单机下扣库存的处理&#34;&gt;单机下扣库存的处理&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2021/redis-distributed-lock-solution/r003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;上面我们说到了，下单的流程中，是需要保证扣库存和创建订单的原子性的，那么在单机的情况下，就需要用事务来进行处理了。&lt;/p&gt;
&lt;h3 id=&#34;分布式锁&#34;&gt;分布式锁&lt;/h3&gt;
&lt;p&gt;秒杀的场景，往往伴随着高并发，但是单机的承载能力并不算很好，而且要考虑到服务的可用性，所以我们可能要上集群。在分布式场景中，我们为了实现不同客户端的线程对代码和资源的同步访问，保证在多线程下处理共享数据的安全性，就需要用到分布式锁技术。本篇文章的主角就来了——Redis分布式锁。&lt;/p&gt;
&lt;p&gt;记得刚学到Java的锁概念的时候，一个通俗易懂的例子就是：一个进程进入了叫redis的厕所，但是发现坑满了（上锁了），然后就只能放弃上厕所（加锁）或者等一下再看看（重试）🤣&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Redis 分布式锁的三大核心要素就是：加锁、解锁、锁超时。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先，redis 单机和多机实现的锁，是不同的。一些人将单机 Redis 排除了分布式锁的范畴，为了避免争议，这里我也不站边了。就我所了解的，有以下一些方案：&lt;/p&gt;
&lt;h4 id=&#34;setnx-命令&#34;&gt;SETNX 命令&lt;/h4&gt;
&lt;p&gt;直接使用 Redis 的 &lt;code&gt;SETNX&lt;/code&gt; 命令，该指令只在 key 不存在的情况下，将 key 的值设置为 value，若 key 已经存在，则 SETNX 命令不做任何动作。key 是锁的唯一标识，可以按照业务需要锁定的资源来命名。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这种方式比较简单，但也存在弊端，三大核心要素的锁超时给漏了。一旦业务在释放锁之前，出现了问题，就可能导致锁无法释放，从而导致死锁。你可以理解为上厕所时纸掉坑里了，，，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;expire-命令&#34;&gt;EXPIRE 命令&lt;/h4&gt;
&lt;p&gt;为了防止死锁，我们可以在拿到锁之后，用 &lt;code&gt;EXPIRE&lt;/code&gt; 对 key 设置一个过期时间。这样就能保证在没有显式释放的情况下，防止长时间被独占，因为时间到了锁会自动释放。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;没错，即使实现了三大核心要素，依旧存在着一些问题。很明显的，加锁命令和设置超时时间的命令，是非原子性的。也就是说，如果在执行 SETNX 和 EXPIRE 之间发生异常，仍然可能会导致锁的超时。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;使用-set-指令扩展&#34;&gt;使用 SET 指令扩展&lt;/h4&gt;
&lt;p&gt;为了解决前面出现的原子性问题，我们可以使用 &lt;code&gt;SET&lt;/code&gt; 指令的扩展参数来解决。但是同时引来了一个新的问题：&lt;strong&gt;锁可能被提前释放了&lt;/strong&gt;。我举个例子，线程 A 加锁后，设定的超时时间是 5s ，但是处于某些意外，执行时间为 6s。但是这时候锁已经早就自动释放了，同时被线程 B 给抢占了。但是线程 A 依旧释放了锁，也就导致了&lt;strong&gt;错误释放了锁&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;但是也不是无法解决的，我们可以给每个锁设置一个唯一的标记。别忘了 redis 是 key-value 形式的。我们加锁，是加到 key 上面去了，但是我们同样的可以在 value 上面，设置唯一的标识。然后在释放锁之前验证一下，如果当前锁的 value 和我加上去的 value 一样，那我们就释放。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;又双叒叕新问题了（逐渐暴躁），判断 value 和删除 key 是两个独立的操作，所以肯定无法保证原子性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;使用-lua-脚本&#34;&gt;使用 lua 脚本&lt;/h4&gt;
&lt;p&gt;为了保证判断 value 和删除 key 的原子性，我们就需要用到 lua 脚本进行处理了，lua 脚本可以保证连续多个指令的原子性执行。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;redis.call&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;get&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;KEYS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ARGV&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;redis.call&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;del&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;KEYS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;else&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;lua 脚本解决了错误释放锁的问题，但是却依旧没解决提前释放锁的问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;redlock&#34;&gt;Redlock&lt;/h4&gt;
&lt;p&gt;Redlock 本质上是使用 Redis 实现分布式锁的规范算法，它有很多实现，我们常见的 Redisson 就是其中一个。但是 Redlock 争议也是有的，贴几个链接大家自己去看吧：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://martin.kleppmann.com/2016/02/08/how-to-do-distributed-locking.html&#34;&gt;https://martin.kleppmann.com/2016/02/08/how-to-do-distributed-locking.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://antirez.com/news/101&#34;&gt;http://antirez.com/news/101&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://redis.io/topics/distlock&#34;&gt;https://redis.io/topics/distlock&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://carlosbecker.com/posts/distributed-locks-redis/&#34;&gt;https://carlosbecker.com/posts/distributed-locks-redis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;主要是关于安全性方面的一些争议，不过对于大多数场景来说，其实是完全够用了。&lt;/p&gt;
&lt;h4 id=&#34;基于java-实现的-redisson&#34;&gt;基于Java 实现的 Redisson&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2021/redis-distributed-lock-solution/r004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;这是一张网图，基本上可以看出工作机制。&lt;/p&gt;
&lt;p&gt;Redisson 是一个在Redis的基础上实现的Java驻内存数据网格（In-Memory Data Grid）。它不仅提供了一系列的分布式的Java常用对象，还提供了许多分布式服务。&lt;/p&gt;
&lt;p&gt;官方文档地址：https://github.com/redisson/redisson/wiki/%E7%9B%AE%E5%BD%95&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/" term="分布式锁" label="分布式锁" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/redisson/" term="Redisson" label="Redisson" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E4%B8%8B%E5%8D%95%E6%B5%81%E7%A8%8B/" term="下单流程" label="下单流程" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">极光商城服务架构设计</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2021/service-architecture-design/" />
            <id>https://blog.besscroft.com/tech/2021/service-architecture-design/</id>
            <updated>2021-05-06T16:07:45&#43;08:00</updated>
            <published>2021-05-06T16:07:38&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">服务架构设计 高并发支撑思考 我们先来看看这张图，首先我们可以思考一下，这个架构中，哪些……</summary>
            
                <content type="html">&lt;h1 id=&#34;服务架构设计&#34;&gt;服务架构设计&lt;/h1&gt;
&lt;h3 id=&#34;高并发支撑思考&#34;&gt;高并发支撑思考&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://ae05.alicdn.com/kf/H3a8dcaf6409549e0a94a0b7a4a8507199.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们先来看看这张图，首先我们可以思考一下，这个架构中，哪些地方可以做负载均衡，来承载更高的 &lt;code&gt;QPS&lt;/code&gt; 呢？&lt;/p&gt;
&lt;p&gt;首先，我们可以在 &lt;code&gt;Nginx&lt;/code&gt; 外层，做负载均衡。举个例子，如果产品部署在阿里云，那么可以用阿里云的 NAT 网关，结合 &lt;code&gt;ALB&lt;/code&gt; 来对 &lt;code&gt;Nginx&lt;/code&gt; 做负载均衡。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ae04.alicdn.com/kf/H6687fa8c2f524bbf961ffd816d5e87b9x.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们可以看到，在 &lt;code&gt;NAT网关&lt;/code&gt; 的最外层，是 &lt;code&gt;EIP&lt;/code&gt; ，也就是阿里云的弹性公网ip，它最大的优点，我觉得就是“灵活”。然后在整个 &lt;code&gt;VPC&lt;/code&gt; 外面，做 &lt;code&gt;ALB&lt;/code&gt; 负载均衡。最后，请求来到了我们部署在 &lt;code&gt;ECS&lt;/code&gt; 上的 &lt;code&gt;Nginx&lt;/code&gt; ，这里的 &lt;code&gt;Nginx&lt;/code&gt; ，到底是一台还是多台，肯定是根据当前业务的 QPS 来了，如果产品刚上线，每天的用户并不多，其实可以只放单台。然后我们的 &lt;code&gt;Nginx&lt;/code&gt; ，将后端请求转发给 &lt;code&gt;Gateway&lt;/code&gt; 网关，好了，这时候请求已经到了网关了，后面的也不用多解释了吧？&lt;/p&gt;
&lt;p&gt;也就是说，从请求到服务器经历了三层负载均衡：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应用型负载均衡ALB：支持加权轮询和最小连接数调度算法，可根据自身需求选择相应算法来分配用户流量。支持根据不同的域名和URL进行流量调度，提升应用系统灵活性。支持包含TCP协议和UDP协议的四层负载均衡；支持HTTP协议和HTTPS协议的七层负载均衡。由于本身是支持弹性伸缩的，所以单实例支持100万 &lt;code&gt;QPS&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;NAT网关：是一款企业级的公网网关，提供NAT代理（SNAT和DNAT）功能，具有10 Gbps级别的转发能力和跨可用区的容灾能力。跟我们理解的不太一样，但是也可以做一定的负载均衡，毕竟它拥有灵活易用的转发能力，还可以充当防火墙。NAT网关会将所有访问EIP的请求都转发到目标ECS实例上，同时会将以指定协议和端口访问EIP的请求转发到目标ECS实例的指定协议和端口上。&lt;/li&gt;
&lt;li&gt;Nginx 负载均衡：&lt;code&gt;Nginx&lt;/code&gt; 应该没有小伙伴不熟悉的吧？一块高性能的 http 代理/反向代理服务器，一般在 Java 开发中，也经常用来做“负载均衡”。Nginx实现负载均衡的方式主要有三种:轮询、加权轮询、ip hash轮询。详细的我们在后面的文章中介绍。&lt;/li&gt;
&lt;li&gt;Gateway 网关负载均衡：这个应该是接触过 Spring Cloud 的小伙伴们都知道是啥了。在 Gateway 中，以 &lt;code&gt;lb://&lt;/code&gt; 开头的请求, 会被全局过滤器 RetryLoadBalancerClientFilter 拦截并进行负载均衡处理, 所有的动态路由都会自动负载均衡。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;业务架构设计&#34;&gt;业务架构设计&lt;/h3&gt;
&lt;p&gt;回到最上面的那张图片，用户最先访问网站的时候，加载的静态资源通过 &lt;code&gt;CDN&lt;/code&gt; 进行分发，这里当然也包括图片了。然后在未命中缓存等一些情况下，肯定需要回源到 &lt;code&gt;Nginx&lt;/code&gt; 来，所以专门的静态资源服务器是必须的，也可以用诸如阿里云OSS、腾讯云COS、AWS S3等来托管，设置回源地址。&lt;/p&gt;
&lt;p&gt;然后发往后端的请求，通过上面我们介绍的方式，最终请求到我们后端的服务，进行处理。 &lt;code&gt;MySQL&lt;/code&gt; 则是我们的数据仓库， &lt;code&gt;redis&lt;/code&gt; 和 &lt;code&gt;elasticsearch&lt;/code&gt; 则用来做数据中间件。同时也可以用 &lt;code&gt;ELK&lt;/code&gt; 来进行日志分析处理。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Nacos&lt;/code&gt; 作为系统中的服务注册于发现中心和配置中心，在必要情况下也是可以做集群的。mq就是最基本的消息队列了，然后部署的话，自然得化自动起来，结合 &lt;code&gt;DevOps&lt;/code&gt; ，易于交付和维护。&lt;/p&gt;
&lt;p&gt;最后，服务集群也可以做进一步的优化。比如说网关的黑/白名单、非入侵监控设计、数据库路由组件、服务治理、调用限流等等，都可以抽出来做中间件，这样能一定程度的解耦，而且便于以后的维护。&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/" term="架构设计" label="架构设计" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/" term="负载均衡" label="负载均衡" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">我的第一个“正式”开源项目</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2021/first-open-source/" />
            <id>https://blog.besscroft.com/tech/2021/first-open-source/</id>
            <updated>2021-04-29T12:30:15&#43;08:00</updated>
            <published>2021-04-27T13:42:24&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">前言 接触编程和开源也有好几年了，不论是自己、和朋友一起写，还是在公司写项目，都积累了……</summary>
            
                <content type="html">&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;接触编程和开源也有好几年了，不论是自己、和朋友一起写，还是在公司写项目，都积累了不少的经验了。但是我为什么把这个项目叫做&lt;code&gt;我的第一个正式开源项目&lt;/code&gt;呢，因为只有这个项目，才真的是我自己从0开始一步步规划，设计，要一步一步把它做完的。里面有很多概念，新的技术我以前只是听说过，但是都没有深入的学习，正好可以跟着这个项目，边学边做，一步步地提升自己！&lt;/p&gt;
&lt;h2 id=&#34;项目介绍&#34;&gt;项目介绍&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/besscroft/aurora-mall&#34;&gt;aurora-mall&lt;/a&gt; 是一个基于 Spring Cloud Alibaba + Vue + Element-UI 开发的开源商城项目。&lt;/p&gt;
&lt;p&gt;文档地址：&lt;a href=&#34;https://mall.doc.besscroft.com/&#34;&gt;https://mall.doc.besscroft.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;预览地址：&lt;a href=&#34;https://mall.aurora.besscroft.com/&#34;&gt;https://mall.aurora.besscroft.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其中也用到了一些现在主流的框架/架构：&lt;/p&gt;
&lt;p&gt;比如说服务注册与发现用到了 &lt;code&gt;nacos&lt;/code&gt; ，声明式服务调用采用的是 &lt;code&gt;OpenFeign&lt;/code&gt; 和 &lt;code&gt;okhttp&lt;/code&gt; 。服务多了，彼此之间调用进行交互，出现了异常我们肯定得想办法快速定位吧？于是也用到了 &lt;code&gt;Spring Boot Actuator&lt;/code&gt; ，可以查看应用配置的详细信息（这个我也是在《Spring Boot 实战》这本书上面学的）。服务间的交互，没有人能保证不出问题，虽然 &lt;code&gt;Ribbon&lt;/code&gt; 可以设置超时，来触发重试机制，但毕竟是和 &lt;code&gt;Hystrix&lt;/code&gt; 有区别的，而 Hystrix 能对延迟和故障提供更强大的容错能力。配置中心，也可以用 nacos 实现。网关则采用了 &lt;code&gt;Spring Cloud Gateway&lt;/code&gt;，我同时也用它来结合 &lt;code&gt;Oauth2&lt;/code&gt; 来处理认证和授权，也实现了白名单机制（以后可能会把白名单改成中间件的形式在系统中启用）。数据库中间件，则是采用了 &lt;code&gt;Redis&lt;/code&gt; ，并且分布式锁也打算交给 redis 来处理。搜索引擎的话，肯定就是 &lt;code&gt;ElasticSearch&lt;/code&gt; 了，消息队列就考虑 &lt;code&gt;rabbitmq&lt;/code&gt; 或者 &lt;code&gt;rocketmq&lt;/code&gt; 。分布式事务暂时考虑的是 &lt;code&gt;Seata&lt;/code&gt; ，&lt;code&gt;Hmily&lt;/code&gt; 等解决方案还不了解，所以学习难度未知。 链路追踪的话，&lt;code&gt;Zipkin&lt;/code&gt; 老熟人了，就你了。分布式id解决方案，尤其是订单id这个玩意儿，最近了解了推特的 &lt;code&gt;Snowflake&lt;/code&gt; 和索尼的 &lt;code&gt;Sonyflake&lt;/code&gt;，很受启发啊！&lt;/p&gt;
&lt;h2 id=&#34;我的想法&#34;&gt;我的想法&lt;/h2&gt;
&lt;p&gt;目前项目的第一阶段的设计，我已经全部处理完了。因为是第一次，在一些地方可能设计的不是很好，你通过 commit 其实就能发现，结构和数据库设计，有时候都会做出调整。李智慧前辈，在他的《大型网站技术架构》这本书里面，有句话说的很好：“这个世界没用哪个网站从诞生起就是大型网站；也没有哪个网站第一次发布就拥有庞大的用户，高并发的访问，海量的数据；大型网站都是从小型网站发展而来。网站的价值在于它能为用户提供什么价值，在于网站能做什么，而不在于它是怎么做的，所以在网站还很小的时候就去追求网站的架构是舍本逐末，得不偿失的。小型网站最需要做的就是为用户提供好的服务来创造价值，得到用户的认可，活下去，野蛮生长。”&lt;/p&gt;
&lt;p&gt;这句话，放到我这里，我其实可以理解成：我做开源本意是为了热爱与学习，做的本就是我喜欢的事情，也能为我自己带来成长与提升，同时能够帮助到他人。所以我在项目一开始设计的时候，也是不可能考虑的特别深入的，但是会随着一个个 commit 慢慢的发展迭代，变成一个好的开源项目。也正是因为如此，在项目中碰到任何问题，我都不是想着别人这样写能跑，我拿过来用就行了。而是要更多地考虑，为什么要这样写？我怎么就没想到？还有没有更好的解决方案？它的原理是什么？也就是这样，我的收获才能够更多吧😄&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;最后&lt;/h2&gt;
&lt;p&gt;希望我能在编程这条路上一直走下去，虽然工作生活中都会有很多困难，但是这些都无法抵挡我对编程的热爱。&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E5%BC%80%E6%BA%90/" term="开源" label="开源" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/spring-cloud-alibaba/" term="Spring Cloud Alibaba" label="Spring Cloud Alibaba" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">学习与人生——利用GitHub学习</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/life/2021/%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BA%BA%E7%94%9F%E5%88%A9%E7%94%A8github%E5%AD%A6%E4%B9%A0/" />
            <id>https://blog.besscroft.com/life/2021/%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BA%BA%E7%94%9F%E5%88%A9%E7%94%A8github%E5%AD%A6%E4%B9%A0/</id>
            <updated>2021-08-03T17:23:50&#43;08:00</updated>
            <published>2021-04-24T16:20:52&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">判断一个人是否具备“换位思考”的能力有一个好方法，那就是看他怎样向没有技术背景的人解……</summary>
            
                <content type="html">&lt;blockquote class=&#34;quote-center&#34;&gt;
        &lt;p&gt;判断一个人是否具备“换位思考”的能力有一个好方法，那就是看他怎样向没有技术背景的人解释技术问题。
——《黑客与画家》保罗·格雷厄姆&lt;/p&gt;&lt;/blockquote&gt; 

&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;从第一次注册 GitHub 账号开始使用，到写下这篇文章，应该有4年了吧。从最开始的查阅资料，慢慢也用的多了起来，现在 GitHub 几乎是我每天必去的网站之一。当然，它也可以帮你完成很多事，不仅仅是功能强大。&lt;/p&gt;
&lt;h2 id=&#34;学习思路&#34;&gt;学习思路&lt;/h2&gt;
&lt;p&gt;先来看看我画的一个简易的思维导图，列举了8个简单的模块，当然，像什么利用技术作恶、白嫖等，我自然是不会说的，咱们只讲利用 GitHub 进行&lt;code&gt;学习和提升&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2021/%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BA%BA%E7%94%9F1/xxyrs1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;找demo练手&#34;&gt;找Demo练手&lt;/h3&gt;
&lt;p&gt;找 Demo 练手，我想这是大多数人最开始接触 GitHub 的原因之一吧。举个简单的例子，比如说我刚学 SpringBoot ，在B站看了几个视频，然后买了几本书速览了一遍，现在想找个东西实践一下怎么办呢？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2021/%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BA%BA%E7%94%9F1/xxyrs2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;这时候我们就可以通过在 GitHub 上搜索，达到我们的目的了。有很多程序员前辈，为我们提供了高质量的 Demo 来练手。你想要什么东西的 Demo ，就搜什么就行了。&lt;/p&gt;
&lt;h3 id=&#34;搜索技术架构解决方案&#34;&gt;搜索技术架构（解决方案）&lt;/h3&gt;
&lt;p&gt;这也是一大用途之一，比如说我现在有个需求，需要生成分布式 id 的系统，但是考虑到自己水平设计出的架构肯定不够好，那这种情况下，咱也可以上 GitHub。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2021/%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BA%BA%E7%94%9F1/xxyrs3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;当我们在工作中，碰到了新的需求，我建议你不要一开始就百度，因为这是一个不好的习惯，它反而可能会害了你、误导你。你应当拆分需求，在脑海中自己设计/构建架构，并着手实现它。当然，在有些时候，我们自己并不能完美的解决，毕竟术业有专攻嘛，每个人擅长的和掌握的都不同。这时我们就可以在 GitHub 上找找，有没有合适的解决方案了。至于为什么没有让你一开始就直接去找，因为这个思考的过程对你来说是无价的。&lt;/p&gt;
&lt;h3 id=&#34;寻找顺手的脚本或工具&#34;&gt;寻找顺手的脚本或工具&lt;/h3&gt;
&lt;p&gt;虽然不能教白嫖，但是利用脚本帮我们抢东西，还是能说说的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2021/%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BA%BA%E7%94%9F1/xxyrs4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;比如大伙最熟悉的 12306，不少小伙伴过年过节回家的时候，应该深有体会吧，几乎是一票难求。我的朋友圈，基本上放假前一段时间，几乎每天都会有发朋友圈让帮忙“加速的”。有的时候，真的不如靠自己，就算是抢票平台，也是有优先级的，花了钱的，肯定排在你前面。&lt;/p&gt;
&lt;p&gt;一些好用的脚本或工具，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;京东茅台秒杀脚本（这个真得魔改，因为太多人用一样的脚本，你没了优势）&lt;/li&gt;
&lt;li&gt;包括京东之类的各种签到脚本（每天100多京豆，挂着不管就行，挺香的）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/peterq/pan-light&#34;&gt;百度网盘不限速客户端&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cobaltdisco/Google-Chinese-Results-Blocklist&#34;&gt;我终于能用谷歌搜中文了……&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;至于好用的工具，嗯~ o(&lt;em&gt;￣▽￣&lt;/em&gt;)o，开源的真的一大堆。我个人习惯就是，除非无法替代，否则有开源的，我就一定不会考虑商业软件。&lt;/p&gt;
&lt;h3 id=&#34;寻找学习资源&#34;&gt;寻找学习资源&lt;/h3&gt;
&lt;p&gt;这点确实不得不说，挺方便的，有很多资源类仓库和博客类仓库，各种面经、XX天学会XX、计算机电子书仓库，都是不少的。但是我最喜欢看的就是，很多大佬在学完某项技术之后，写的“小册”，因为它不想普通的技术文章那样，“小册”有完整的大纲，思路清晰，甚至还会有周刊。&lt;/p&gt;
&lt;p&gt;说到这里，还是推荐几个吧：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ascoders/weekly&#34;&gt;前端精读周刊&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/byoungd/English-level-up-tips-for-Chinese&#34;&gt;可能是让你受益匪浅的英语进阶指南&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/unknwon/the-way-to-go_ZH_CN&#34;&gt;Go 入门指南&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/qiurunze123/miaosha&#34;&gt;秒杀系统设计与实现.互联网工程师进阶与分析&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/fuzhengwei/itstack-demo-design&#34;&gt;重学Java设计模式&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/doocs/advanced-java&#34;&gt;互联网 Java 工程师进阶知识完全扫盲&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;查找数据或者爬虫&#34;&gt;查找数据或者爬虫&lt;/h3&gt;
&lt;p&gt;你甚至能在 GitHub 上，找到几乎所有你听过的平台的爬虫，甚至还有大量的代理池。但是你如果要使用的话，还是要慎重，稍有不慎就要喝茶了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你甚至能在 GitHub 找到各种社工库和网络攻击脚本，但是，我希望你明白什么是违法行为。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;各种练手框架&#34;&gt;各种练手框架&lt;/h3&gt;
&lt;p&gt;其实准确的说，叫练手项目更好。抱歉，推荐一波自己的项目，虽然还在边学边写：https://github.com/besscroft/aurora-mall&lt;/p&gt;
&lt;h3 id=&#34;万能的awesome系列&#34;&gt;万能的awesome系列&lt;/h3&gt;
&lt;p&gt;也就是我们常说的“真棒”系列，但凡任何一门语言，和一些比较好的项目，都会有&lt;code&gt;awesome&lt;/code&gt;系列，直接在 GitHub 搜索框搜索 &lt;code&gt;awesome&lt;/code&gt;即可，也可以搜&lt;code&gt;awesome + 关键字&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;搜索语法&#34;&gt;搜索语法&lt;/h3&gt;
&lt;p&gt;这个跟搜索引擎语法一样，真的是非常重要的必学内容之一，掌握搜索语法，可以让你在找任何东西时都事半功倍！！！&lt;/p&gt;
&lt;p&gt;贴上官方文档：&lt;a href=&#34;https://docs.github.com/cn/github/searching-for-information-on-github/understanding-the-search-syntax&#34;&gt;了解搜索语法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;举个简单的例子：&lt;code&gt;java stars:&amp;gt;1000&lt;/code&gt;，搜索关键字 java ，star数量大于1000的所有仓库。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可选条件：&lt;code&gt;&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;gt;=&lt;/code&gt;、&lt;code&gt;&amp;lt;&lt;/code&gt;、&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可选值：&lt;code&gt;stars&lt;/code&gt;仓库、&lt;code&gt;topics&lt;/code&gt;主题、&lt;code&gt;size&lt;/code&gt;文件大小&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;最后&#34;&gt;最后&lt;/h2&gt;
&lt;p&gt;如果你仅仅认为 GitHub 就只有这些，那就图样图森破了。上面其实也充斥着大量的黑灰产业相关的东西，各种zz内容、色情暴力相关的其实也不少。怎么说呢，&lt;code&gt;科技是一把双刃剑&lt;/code&gt;，但是怎么挥舞这把剑的人却是你自己，切勿在里面迷失了自己。&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E7%94%9F%E6%B4%BB/" term="生活" label="生活" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%BA%BA%E7%94%9F/" term="学习与人生" label="学习与人生" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">向着未来而生</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/life/2021/%E5%90%91%E7%9D%80%E6%9C%AA%E6%9D%A5%E8%80%8C%E7%94%9F/" />
            <id>https://blog.besscroft.com/life/2021/%E5%90%91%E7%9D%80%E6%9C%AA%E6%9D%A5%E8%80%8C%E7%94%9F/</id>
            <updated>2021-04-23T22:43:53&#43;08:00</updated>
            <published>2021-04-23T22:30:52&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">很抱歉，标题可能把你给骗进来了，不过不要紧，这篇文章将是我在国内发的最后一篇文章了。……</summary>
            
                <content type="html">&lt;blockquote&gt;
&lt;p&gt;很抱歉，标题可能把你给骗进来了，不过不要紧，这篇文章将是我在国内发的最后一篇文章了。首先声明一点，我是爱国遵纪守法的好公民。这篇文章也就是一篇碎碎念，请抱着平和的心态阅读。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下班回家的地铁上，再一次看到了《赛博空间网络宣言》，想起了几年前第一次看到时的感受。虽然平常会写作，但是日志、笔记类的，我一般都是会私有化同步保存。但毕竟我写博客的出发点是不同的，目前有2个博客，一个是现在可以直接在网上搜到的，甚至域名实名了的博客，但是屏蔽了国内爬虫；另一个是高度匿名的博客，从注册开始，邮箱之类的，全部都走了虚拟机-&amp;gt;前置匿名代理-&amp;gt;Tor网络来确保匿名，即【VPN over Tor】。&lt;/p&gt;
&lt;p&gt;也就是再次看到这篇宣言的时候，我就做出了这个决定—删除我所有在受到审查/核的地方发表的文章（并不集中，很分散），而微信公众号，将保留当前这篇文章，并且平台的功能仅用来做部分的开发学习用。&lt;/p&gt;
&lt;p&gt;首先，原本我所有的写作计划将保留，但仅限于私人同步和博客了。其次，所有的站点都将屏蔽某度之类的爬虫，至于为什么，每次碰到问题打开百度一无所获就是最好的理由。真不是我杠，某些情况下，就连搜索引擎语法都拯救不了它。以后给大家分享学习资料之类的文件，也将优先采取自建、去中心化的分布式网盘、不限速的Google Drive、OneDrive和天翼云盘。分享文件载体的优先级，应该很明显了。聊天将优先采用端到端加密进行聊天，考虑到很多朋友和我联系都是用的微信，本着“看到必回复”的原则，还是会继续使用的。&lt;/p&gt;
&lt;p&gt;不过我平常喜欢用RSS来进行订阅阅读，甚至自建了一个RSS订阅中心，这样就可以自定义规则，且不受限制的阅读。&lt;/p&gt;
&lt;p&gt;最后，如果你以后还愿意看我的文章的话，可以采取以下方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Google搜索：besscroft&lt;/li&gt;
&lt;li&gt;访问域名：blog.besscroft.com&lt;/li&gt;
&lt;li&gt;订阅RSS源：https://blog.besscroft.com/rss.xml&lt;/li&gt;
&lt;li&gt;Atom聚合：https://blog.besscroft.com/atom.xml&lt;/li&gt;
&lt;li&gt;以及博客内能获取到的其它方式。&lt;/li&gt;
&lt;/ul&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E7%94%9F%E6%B4%BB/" term="生活" label="生活" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E6%97%B6%E9%97%B4%E4%B8%8E%E4%BA%BA%E7%94%9F/" term="时间与人生" label="时间与人生" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">我和Docker的故事</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2021/docker%E7%AC%94%E8%AE%B0/" />
            <id>https://blog.besscroft.com/tech/2021/docker%E7%AC%94%E8%AE%B0/</id>
            <updated>2021-08-03T17:35:09&#43;08:00</updated>
            <published>2021-04-18T15:14:24&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">初次接触 想起第一次用Docker的原因，当时还在读书，所以手里的海外服务器并不多。当……</summary>
            
                <content type="html">&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2021/Docker%E7%AC%94%E8%AE%B0/docker.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;初次接触&#34;&gt;初次接触&lt;/h3&gt;
&lt;p&gt;想起第一次用Docker的原因，当时还在读书，所以手里的海外服务器并不多。当时为了方便自己科学上网查学习资料，由于众所周知的原因，必须得用手里数量不多的服务器来代理了。但是手里又有其它服务需要跑，那么一台服务器运行包括科学上网在内的众多服务也就司空见惯了。然而令人头痛的就在这里，因为不同服务的环境问题，导致某些服务通常只能正常运行其中一个，这种情况下，我就只能进行环境隔离了。所以，首先想到的就是利用容器了，也就开始用起了Docker。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;后记：果然懒才是第一生产力，后面直接分别写了公共脚本和自己私用的shell脚本，直接一把梭😅&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;一起成长梦想依在人生正当年&#34;&gt;一起成长(梦想依在，人生正当年)&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Docker: 与社区共同成长&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用Docker的过程中，其实也并不是想象的那么美好，不过好在，Docker经过这几年的迭代，变得越来越优秀，而我的技术也在稳步提升。这几年，提供容器服务的厂商，井喷式的增长，当然，也有不少被薅倒闭的，曾经的三大容器服务，如今只剩 &lt;code&gt;HeroKu&lt;/code&gt; 还在继续。虽然 &lt;code&gt;Heroku&lt;/code&gt; 每个月免费额度只有550小时，但是它不同地域、不同容器之间，竟然可以做负载均衡，曾经一度是科学上网“最佳实践”。&lt;/p&gt;
&lt;p&gt;最开始，只是想着把不同服务的环境隔离开，才使用Docker。到后来，每次接触到新技术，我都会去看能不能用 Docker 运行。就好比“世界运行在 SharePoint 上一样”（doge，我绝大部分的服务，都是跑在 Docker 上的，包括开发、测试和部署环境。在确保开发与生产之间一致性的同时，我可以完全在本地进行编码和测试。&lt;/p&gt;
&lt;p&gt;到毕业后，惊喜的发现，不少公司面试的时候，熟悉 Docker 都是一个加分项（明明只是开发，硬是被逼成了全干工程师🤣&lt;/p&gt;
&lt;h3 id=&#34;我的一些docker笔记&#34;&gt;我的一些Docker笔记&lt;/h3&gt;
&lt;p&gt;几乎所有主流平台，我都使用过，但限于我有60%的服务器是 &lt;code&gt;CentOS 7.x&lt;/code&gt;，那就围绕这个系统来写吧。&lt;/p&gt;
&lt;h4 id=&#34;centos-7x--docker&#34;&gt;CentOS 7.x &amp;amp;&amp;amp; Docker&lt;/h4&gt;
&lt;h5 id=&#34;安装docker&#34;&gt;安装Docker&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;卸载可能存在的旧版本&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@besscroft ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# sudo yum remove docker \&lt;/span&gt;
                  docker-client &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;                  docker-client-latest &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;                  docker-common &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;                  docker-latest &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;                  docker-latest-logrotate &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;                  docker-logrotate &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;                  docker-engine
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;设置稳定的存储库并安装&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@besscroft ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# sudo yum install -y yum-utils&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@besscroft ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# sudo yum-config-manager \&lt;/span&gt;
    --add-repo &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    https://download.docker.com/linux/centos/docker-ce.repo
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;安装最新版本的Docker Engine和容器，或者转到下一步安装特定版本：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@besscroft ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# sudo yum install docker-ce docker-ce-cli containerd.io -y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;如果提示您接受 GPG 密钥，请验证指纹是否匹配 &lt;code&gt;060A 61C5 1B55 8A7F 742B 77AA C52F EB6B 621E 9F35&lt;/code&gt;，如果是，则接受它。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;设置开机启动，并启动Docker&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@besscroft ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# sudo systemctl enable docker&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@besscroft ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# sudo systemctl start docker&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h5 id=&#34;docker安装配置redis&#34;&gt;Docker安装配置Redis&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;拉取镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@besscroft ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# docker pull redis:6.0.9&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;在合适的位置创建下面两个文件夹&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@besscroft ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# mkdir conf&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@besscroft ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# mkdir data&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;启动容器&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@besscroft ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# docker run -d -p 6379:6379 --restart always --name bess-redis \&lt;/span&gt;
-v /root/conf/redis.conf:/usr/local/etc/redis/redis.conf &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-v /root/data:/data &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;redis:6.0.9 redis-server /usr/local/etc/redis/redis.conf &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;--requirepass &lt;span class=&#34;s2&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt; --appendonly yes
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;-d 在后台运行&lt;/p&gt;
&lt;p&gt;-p 6379:6379 端口映射，左边为宿主机的端口，右边为容器的端口&lt;/p&gt;
&lt;p&gt;--restart always 自动启动&lt;/p&gt;
&lt;p&gt;--privileged=true 给容器root权限&lt;/p&gt;
&lt;p&gt;-v /root/conf/redis.conf:/usr/local/etc/redis/redis.conf 挂载配置文件，冒号左边为宿主机，右边为容器&lt;/p&gt;
&lt;p&gt;-v /root/data:/data 数据目录，冒号左边为宿主机，右边为容器&lt;/p&gt;
&lt;p&gt;--requirepass 冒号里面填密码，也可以在conf里面配置&lt;/p&gt;
&lt;p&gt;--appendonly 是否开启持久化，也可以在conf里面配置&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;启动自定义的容器&#34;&gt;启动自定义的容器&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;创建用户定义的网络&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@besscroft ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# docker network create somenetwork&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;运行镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@besscroft ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# docker run -d --name &amp;lt;容器名&amp;gt; --net somenetwork -p&amp;lt;主机端口&amp;gt;:&amp;lt;容器端口&amp;gt; &amp;lt;镜像名&amp;gt;:&amp;lt;版本号&amp;gt; --appendonly yes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;基本上大部分容器可以按照此思路来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;windows-10-配置狗东自动脚本&#34;&gt;Windows 10 配置狗东自动脚本&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;下载镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@besscroft ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# docker pull registry.cn-hangzhou.aliyuncs.com/supermanito/jd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;启动容器&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@besscroft ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# docker run -dit \&lt;/span&gt;
-v D:/data/jd/scripts:/jd/scripts &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 设置活动脚本的主机挂载目录为D:/data/jd/scripts` \&lt;/span&gt;
-v D:/data/jd/config:/jd/config &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 设置配置文件的主机挂载目录为D:/data/jd/config` \&lt;/span&gt;
-v D:/data/jd/log:/jd/log &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 设置日志文件的主机挂载目录为D:/data/jd/log` \&lt;/span&gt;
-p 5678:5678 &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 设置端口映射，格式为 &amp;#34;主机端口:容器端口&amp;#34;，主机端口号可自定义` \&lt;/span&gt;
-e &lt;span class=&#34;nv&#34;&gt;ENABLE_HANGUP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 启用挂机功能` \&lt;/span&gt;
-e &lt;span class=&#34;nv&#34;&gt;ENABLE_WEB_PANEL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 启用控制面板功能` \&lt;/span&gt;
--name jd &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 设置容器名为 jd ` \&lt;/span&gt;
--network bridge &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 设置容器网络类型为桥接，直连主机` \&lt;/span&gt;
--hostname jd &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 设置容器内主机名为 jd ` \&lt;/span&gt;
--restart always &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 设置容器开机自启` \&lt;/span&gt;
registry.cn-hangzhou.aliyuncs.com/supermanito/jd
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;学习docker&#34;&gt;学习Docker&lt;/h3&gt;
&lt;p&gt;推荐2本书：《Docker实战》、《第一本Docker书》，我只看过《第一本Docker书》，个人感觉还不错。&lt;/p&gt;
&lt;p&gt;然后就是官方文档了，已经够详细了，碰到问题也可以去仓库的issues看看。&lt;/p&gt;
&lt;h3 id=&#34;arm-docker&#34;&gt;ARM Docker&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2021/Docker%E7%AC%94%E8%AE%B0/docker-desktop-m1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;2021年4月15日，Docker能够运行在M1芯片的Macbook上面了，也预示着 ARM 架构的未来。虽然现在还需要安装 Rosetta 来进行兼容，当你想要在官网下载时，就会提醒你。V站上不少人都说，M1开发很香😯现在估计就是兼容性问题，让很多人不敢上车。&lt;/p&gt;
&lt;p&gt;不过我这里还是忍不住吐槽一下，苹果你不出小键盘，我是绝对不会买 MacBook 的🙄反正不买也能照样用 MacOS，而且性能也不差。&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/docker/" term="Docker" label="Docker" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/linux/" term="Linux" label="Linux" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">时间与人生——开启篇</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/life/2021/%E6%97%B6%E9%97%B4%E4%B8%8E%E4%BA%BA%E7%94%9F%E5%BC%80%E5%90%AF%E7%AF%87/" />
            <id>https://blog.besscroft.com/life/2021/%E6%97%B6%E9%97%B4%E4%B8%8E%E4%BA%BA%E7%94%9F%E5%BC%80%E5%90%AF%E7%AF%87/</id>
            <updated>2021-08-03T17:23:24&#43;08:00</updated>
            <published>2021-04-15T16:18:52&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">许多人所谓的成熟，不过是被习俗磨去了棱角，变得世故而实际了；那不是成熟，而是精神的早……</summary>
            
                <content type="html">&lt;blockquote class=&#34;quote-center&#34;&gt;
        &lt;p&gt;许多人所谓的成熟，不过是被习俗磨去了棱角，变得世故而实际了；那不是成熟，而是精神的早衰和个性的夭亡！
真正的成熟，应当是独特个性的形成，真实自我的发现，精神上的结果和丰收。
——《在世纪的转折点上》尼采 （哲学家 思想家）&lt;/p&gt;&lt;/blockquote&gt; 

&lt;h3 id=&#34;主旋律的开启&#34;&gt;主旋律的开启&lt;/h3&gt;
&lt;p&gt;大概在去年疫情在家的某个时间，我就有个写下这篇文章的想法了。一番思索之后，确定了自己的主旋律——《时间与人生》篇章、《学习与人生》篇章、《爱情与人生》篇章。可能是我性格有点内向的原因吧，相较于和人打交道，我更擅长与计算机打交道。不知道有没有读者会有这种体验——“人机合一”，就是当你精神力高度集中时，你和计算机互相知道自己要干什么了🙃进入了一种忘我的状态，思维已经完全进入了计算机的世界，在这种情况下，思考、冥想、学习的效率都会极大地增加（如果你是打游戏才这样，该好好反思下自己了😅。不过，这可能也是我喜欢写作的原因之一，虽然只有少部分被我发到网上了。&lt;/p&gt;
&lt;p&gt;这篇文章算是我主旋律篇章的开启篇了，后面会不定时的更新，当然，《爱情与人生》得等脱单后再写了。如果你在互联网和我产生了激烈的“思维碰撞”，也欢迎和我交流！&lt;/p&gt;
&lt;h3 id=&#34;时间的流逝与我的思想转变&#34;&gt;时间的流逝与我的思想转变&lt;/h3&gt;
&lt;p&gt;相信认识我的读者，应该知道我以前非常的内心，且带有太多的不自信。在就连上课老师点人回答问题，都不会点我，我想他们应该是知道我站起来之后，并不会开口说话。当然，有部分老师，在说完“有没有同学回答的”之后，就一直盯着我看（面带微笑）。说实话，现在还是挺感谢老师的😊&lt;/p&gt;
&lt;p&gt;真正让我改变的转折，要从我高二在亚马逊买了第一本编程书开始。为什么这么说呢？因为编程让我开始相信自己，我并不是什么都不行。并且因为接触了编程，我开始慢慢接触到了“真正的世界”。在一次偶然的冲浪中，遇到了我的“启蒙老师”。有句话叫“授人以鱼不如授人以渔”，而他带给我的，正是“渔”。以前的我，就是贪玩、调皮，不爱学习，甚至可以说，根本就不懂得如何去学习。他教会了我如何系统性的学习、完善自己的知识结构、寻找自己真正的兴趣爱好（编程只是其中之一）、如何阅读一本书、如何拥有/加强自己获取信息和甄别信息的能力、区分事实与观点并进行分析与批判、独立思考、提升自己解决问题的能力，以及学习编程的各种“渔”。&lt;/p&gt;
&lt;p&gt;仔细观察我的主旋律系列的标题——时间、学习、爱情、人生，我只从他身上学到了前两个，或许，爱情和人生，需要我自己去好好的经历。现在的我，对自己能够有完整的认识。如果能有时光机器，我想，我可能会教年幼的我早点学会这些吧（虽然现在也不算迟👻&lt;/p&gt;
&lt;h3 id=&#34;时间&#34;&gt;时间&lt;/h3&gt;
&lt;p&gt;说到时间，相信每个人都想与时间做朋友吧？我也想，但是我不知道时间会不会愿意跟我做朋友，至少我不应该跟它成为敌人，没有人能战胜时间。自从我学了&lt;a href=&#34;https://bulletjournal.com/pages/learn&#34;&gt;子弹笔记&lt;/a&gt;之后，能够轻松的为自己制定详细的计划，基本上在一天中的任何时候，只要我感觉到自己闲下来了，我几乎都会打开 &lt;code&gt;Notion&lt;/code&gt; 去查看自己的计划，尽可能的减少时间的浪费。当然，计划赶不上变化，所以时间是绝对不能排满的，你要留给自己喘息的时间。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;子弹笔记是可定制的、宽松的笔记系统。它可以用作待办清单、素描本、笔记本或是日记本，更多时候，它包含了以上所有。它会让你事半功倍。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不少人都说，我们这个时代，是个娱乐至死的时代。当你打开手机/电脑，到处都是“好看”的小姐姐、遍地的奇葩新闻，看看自己和身边的人，是不是感觉大家都把自己的业余时间浪费在了消遣性的内容上面了呢？打开抖音，不停地往下刷，时间一下就浪费了（这事儿我只在大学干过，当时抖音的推广，我基于&lt;code&gt;auto.js&lt;/code&gt;写了个脚本自己刷视频，基本上可以抵扣我每个月200元的话费，反正只是挂着不管🤣随着互联网的普及，你身边的每一个人都在这样，你就会非常容易陷入“心里舒适区”。并且每一个平台，都会采用各种手段来增加“用户粘性”，来增加你对平台的“依赖”，毕竟产品经理和策划的工资没白拿啊。。。&lt;/p&gt;
&lt;p&gt;如果你想跳出“心里舒适区”的话，就需要很强的自控能力了。如果你的自控力不够强，可以试着像我一样，做好详细的规划和目标，并强迫自己去完成它。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2021/%E6%97%B6%E9%97%B4%E4%B8%8E%E4%BA%BA%E7%94%9F1/timeandlife1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;学习&#34;&gt;学习&lt;/h3&gt;
&lt;p&gt;后面更新《学习与人生》系列，会每一期都会从不同的方向/思路，聊聊我是怎么学习的。&lt;/p&gt;
&lt;h3 id=&#34;爱情&#34;&gt;爱情&lt;/h3&gt;
&lt;p&gt;没谈过恋爱，以后更新《爱情与人生》再写😅&lt;/p&gt;
&lt;h3 id=&#34;人生&#34;&gt;人生&lt;/h3&gt;
&lt;p&gt;关于人生的感悟，会放在每年的最后一篇《XX与人生》系列写。&lt;/p&gt;
&lt;h3 id=&#34;最后&#34;&gt;最后&lt;/h3&gt;
&lt;p&gt;还记得上面我说的“启蒙老师”吗？其实，我也不知道他到底是谁，不过我确实从他身上学到了不少东西。希望在未来的某一天，我这位“启蒙老师”在看到我的文章之后，能给我发一封匿名邮件。&lt;/p&gt;
&lt;p&gt;这是我主旋律系列的第一篇文章，没有聊太多，毕竟不能算正式内容吧。也希望我能坚持写下去，仿佛给自己挖了个大坑呢🤣就让时间来检验自己吧！&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E7%94%9F%E6%B4%BB/" term="生活" label="生活" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E6%97%B6%E9%97%B4%E4%B8%8E%E4%BA%BA%E7%94%9F/" term="时间与人生" label="时间与人生" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">再见Hexo,你好Hugo</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2021/%E7%AB%99%E7%82%B9%E8%BF%81%E7%A7%BB/" />
            <id>https://blog.besscroft.com/tech/2021/%E7%AB%99%E7%82%B9%E8%BF%81%E7%A7%BB/</id>
            <updated>2021-08-03T17:34:28&#43;08:00</updated>
            <published>2021-04-14T11:05:49&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">距离我上一次更新文章，也有一小段时间了。本来从第一次搭建博客开始，每年五一左右都会重……</summary>
            
                <content type="html">&lt;p&gt;距离我上一次更新文章，也有一小段时间了。本来从第一次搭建博客开始，每年五一左右都会重构以下博客，主要就是：结构优化、样式更新、功能调整等等。当然，这只是针对博客的，因为个人云服务相对较多，所以五一时间还是被占用比较多的。去年五一就几乎把所有的个人服务都整成自动化的了，这也是享受到了科技进步的福利。而我要做的，基本就是把&lt;code&gt;commit&lt;/code&gt;给&lt;code&gt;push&lt;/code&gt;到私有仓库里面，然后就不用管了。&lt;/p&gt;
&lt;h3 id=&#34;迁移前后对比&#34;&gt;迁移前后对比&lt;/h3&gt;
&lt;p&gt;旧的Hexo博客&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2021/newblog/newblog02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;新的Hugo博客&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2021/%E7%AB%99%E7%82%B9%E8%BF%81%E7%A7%BB/zd001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;首先，不可否认的是，外观上的变化是很大的。主题我采用的是&lt;a href=&#34;https://github.com/reuixiy/hugo-theme-meme&#34;&gt;MemE&lt;/a&gt;，并在此基础上进行了一点点魔改，加入了我自己需要的功能，同时调整了一些样式。原先用Hexo，至少有2年了吧，说实话，有不少让人头疼的事情。比如说一个好好的插件，可能哪天就突然不兼容了，要么就是天天炸依赖，每次build的时间，也是越来越长，一度到达一分钟（虽然跟博客的东西太多离不开😅&lt;/p&gt;
&lt;p&gt;当我把所有的内容全部迁移到Hugo之后，每次构建的时间不到一秒钟，当时就想着，再也不用Hexo了，虽然Hexo的生态挺好的。如果你在这之前来过我的博客，你可能会发现差别还是比较大的。比如视频播放替换成了资源占用更少的原生，取消了网站实时客服，甚至取消了看板娘，，，（有空还是会加个好看的看板娘上来的，在不影响整体阅读的情况下。&lt;/p&gt;
&lt;p&gt;博客的友链页面对比之前做了修改，相册页面也是，然后取消了豆瓣的三个页面（感觉没什么用）。字体依旧沿用适合阅读的&lt;code&gt;思源宋体&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;个人云服务升级&#34;&gt;个人云服务升级&lt;/h3&gt;
&lt;p&gt;从去年五一到写文章这时候，基本上所有的站点都给套上了一层CDN，但是部分服务并没有针对中国大陆的网络进行优化，因为我更希望你是通过Google搜索到我的。今年五一准备拆分一下整体的架构了，首先自动化运维肯定跑不掉，毕竟不能老是让人盯着维护。从过去的经验看，我需要提升的是整体的可用率。很多情况下，可能是网络攻击、服务器宕机、DNS劫持等等造成的原因，导致服务暂时不可用。一般我会收到邮件通知，XX服务又挂了，一般情况下我是不会管的，除非程序判断服务无法再次正常运行或者暂停时间过长，才会去手动处理。&lt;/p&gt;
&lt;p&gt;这五一假期也快来了，最近挖矿也又火热了起来。最重要的事就是进行架构重整，比如在&lt;code&gt;aws&lt;/code&gt;上，运行我整个个人云服务的核心服务；在国内的阿里云和腾讯云，则会运行个人的测试环境；在&lt;code&gt;DigitalOcean&lt;/code&gt;上，部署自己或他人的开源项目在上面；在&lt;code&gt;Azure&lt;/code&gt;上面，部署离线下载（因为服务器下行流量不收费，而Azure的机器，上传文件到同区域的&lt;code&gt;OneDrive&lt;/code&gt;是免流的😄。然后其他的平台，可能就会用来挂游戏、挂通知机器人和挖矿了。配合&lt;code&gt;telegram&lt;/code&gt;的&lt;code&gt;bot&lt;/code&gt;，还是挺好用的。&lt;/p&gt;
&lt;p&gt;这样一算下来，服务器(VPS)的数量其实有不少了，每年也要花掉我好几千是吧？但实际上我没怎么花钱，得益于近乎0成本的挖矿，再加上云服务本身产生的价值，几乎可以填补我所花的资金。&lt;/p&gt;
&lt;p&gt;可是，就算花了钱，其实也是没关系的，说难听点，叫瞎鼓捣，但是说好听点，这可都是实战经验。因为基本上把各大平台的，不管是免费还是付费的服务，都玩了个遍，在简历上，其实是可以写上的，总归是个加分项，是吧？&lt;/p&gt;
&lt;h3 id=&#34;关于博客的体验&#34;&gt;关于博客的体验&lt;/h3&gt;
&lt;p&gt;新博客的一个增强功能就是，采用了 &lt;a href=&#34;https://developers.google.com/web/tools/workbox/&#34;&gt;Workbox&lt;/a&gt; 来构建了一个渐进式的 Web 应用程序，极大的提升了体验，当然，我也是第一次接触这个东西。&lt;/p&gt;
&lt;p&gt;最后，我阅读一直有个习惯，就是基于&lt;code&gt;RSS&lt;/code&gt;的订阅制阅读，自己也创建和发布了订阅源，欢迎订阅呀！&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/hugo/" term="Hugo" label="Hugo" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E5%8D%9A%E5%AE%A2/" term="博客" label="博客" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">第一次加班</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/life/2021/%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%8A%A0%E7%8F%AD/" />
            <id>https://blog.besscroft.com/life/2021/%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%8A%A0%E7%8F%AD/</id>
            <updated>2021-05-06T16:13:11&#43;08:00</updated>
            <published>2021-04-13T13:56:13&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">4月7号，经历了人生中第一次加班，晚上11点钟才到家。身心疲惫，感触也挺多的。。。 9……</summary>
            
                <content type="html">&lt;p&gt;4月7号，经历了人生中第一次加班，晚上11点钟才到家。身心疲惫，感触也挺多的。。。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;996工作制&lt;/code&gt;最致命的点在于——剥夺了你的业余时间。因此也就剥夺了你通过业余时间进行自学的机会。如果你难以进行自学，也就难以提升自身能力；如果你无法提升自身能力，你就无法提升自己的&lt;code&gt;议价能力&lt;/code&gt;；在缺乏议价能力的情况下，你就只好默默忍受这种工作制的压榨。
跳出问题的关键，在于&lt;code&gt;时间突破口&lt;/code&gt;和&lt;code&gt;“坚持&lt;/code&gt;，每天挤出一定量的时间。即使是一点微弱的时间，只要这个习惯长期保持，&lt;code&gt;累积效应&lt;/code&gt;也将非常惊人。当然，如果你的工作不是你的兴趣所在，长时间加班之后，回到家里，你很难再有动力去学习其它新技能。
最后，最可靠的东西，永远是自己的能力（&lt;code&gt;核心竞争力&lt;/code&gt;）。提高核心竞争力来提升你的议价能力，在获得同等报酬的情况下，降低工作强度，获取更多的学习时间。&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E7%94%9F%E6%B4%BB/" term="生活" label="生活" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E5%8A%A0%E7%8F%AD/" term="加班" label="加班" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">网站和服务器速度优化</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2021/website-server-speed-optimization/" />
            <id>https://blog.besscroft.com/tech/2021/website-server-speed-optimization/</id>
            <updated>2021-04-11T13:23:38&#43;08:00</updated>
            <published>2021-03-16T16:49:16&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">前言 很多接触过云服务的小伙伴，可能经常会有一个困扰：为什么我的CPU、内存占用明明不……</summary>
            
                <content type="html">&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;很多接触过云服务的小伙伴，可能经常会有一个困扰：为什么我的CPU、内存占用明明不高，网站速度/服务器响应速度却还是这么慢呢？~~哪个可爱的男孩子不想拥有一个速度很快的博客呢？~~说到优化，我们得从诸如硬件、软件等很多地方入手。&lt;/p&gt;
&lt;h2 id=&#34;开始优化&#34;&gt;开始优化&lt;/h2&gt;
&lt;h3 id=&#34;为什么我们需要优化&#34;&gt;为什么我们需要优化？&lt;/h3&gt;
&lt;p&gt;当我们购买了一台云服务器/VPS，并在上面架设了网站，那么我们肯定是需要给用户提供访问的。当别人或者你自己，访问这个网站时，通常会在浏览器中输入&lt;code&gt;example.com&lt;/code&gt;之类的网址吧。但是，浏览器并不会知道这个网址的任何信息，这时我们的电脑会在Internet找到网址所在。在这个过程中，有相当多的因素，可以影响我们的网站速度，所以我们必须考虑服务器和浏览器之间的所有情况。&lt;/p&gt;
&lt;h3 id=&#34;dns解析优化&#34;&gt;DNS解析优化&lt;/h3&gt;
&lt;p&gt;我们知道，每一个网址都会对应着一个IP地址，而我们请求网址的时候，会通过DNS服务器去进行解析，从而将访问路由到对应的网站或者应用服务器。在设置DNS解析时，我们可以对域名进行分运营商设置、分地域设置等等，甚至，你还可以做负载均衡。比如电信用户的请求，可以设置解析到针对电信优化的线路的服务器上；分地域解析，同样可以设置成针对当前用户的最优解析。&lt;/p&gt;
&lt;h3 id=&#34;链路优化&#34;&gt;链路优化&lt;/h3&gt;
&lt;p&gt;浏览器是需要与服务器之间进行通信的，但如果服务器位置距离浏览器很远，或者是它们之间的网络链路并不算很好（想象一下高速公路和普通公路😀）。那么坑你会增加等待的时间，尤其是丢包，这是很致命的问题，可能会导致网站一直无法响应完成。每次询问服务器，毕竟是要耗时间的，不是吗？&lt;/p&gt;
&lt;h3 id=&#34;动态or静态&#34;&gt;动态OR静态&lt;/h3&gt;
&lt;p&gt;一般来讲，静态网站加载速度是比动态网站要快的。有时候会取决于Web服务器的开销，有时候是数据库的。&lt;/p&gt;
&lt;h3 id=&#34;数据库&#34;&gt;数据库&lt;/h3&gt;
&lt;p&gt;对于动态网站，我们也是可以针对数据库进行优化的。比如数据库放在本机还是其它机器上，如果放在其它机器上，是内网通信还是公网通信。用不用读写分离、集群、Redis等等？扯远了扯远了，咱还是以普通的网站/博客来进行讨论吧😅&lt;/p&gt;
&lt;h3 id=&#34;数据的计算渲染时间&#34;&gt;数据的计算/渲染时间&lt;/h3&gt;
&lt;p&gt;网站上面可能需要进行一些数学计算、过程处理、动画渲染等，会消耗相应的时间。当然，我们可以适当的调整尺度，或者是放在服务端处理部分内容。&lt;/p&gt;
&lt;h3 id=&#34;cpu的性能&#34;&gt;CPU的性能&lt;/h3&gt;
&lt;p&gt;网站在浏览器的加载速度，在一定程度上也会受到用户计算机的CPU影响。不过一般来说，对于简单的网页应该不成问题。当然，服务器的CPU也是关键因素之一。如果你的网站，有太多人访问的话，你可以考虑下升级服务器的配置了。&lt;/p&gt;
&lt;h3 id=&#34;加密安全&#34;&gt;加密/安全&lt;/h3&gt;
&lt;p&gt;现在绝大部分的网站，都是支持HTTPS的了。为了安全使用SSL或TLS，会给网页的加载带来额外的性能开销。但是大多数情况下，这种开销是值得的👻&lt;/p&gt;
&lt;h3 id=&#34;内存优化&#34;&gt;内存优化&lt;/h3&gt;
&lt;p&gt;每一次针对服务器的请求，都会占用Web服务器在单位时间内可以处理的请求数，同时也会占用内存。不过，我们得先调查清楚，在自己的服务器上，到底是请求数先被消耗完，还是内存先被消耗完。&lt;/p&gt;
&lt;h3 id=&#34;网络攻击防护&#34;&gt;网络攻击防护&lt;/h3&gt;
&lt;p&gt;互联网的公网环境，有时候并没有想象的那么好。我在阿里云的ECS，被人攻击进入过黑洞状态。在DigitalOcean的服务器，曾被人消耗掉了接近3T的流量。对于很多人/企业来说，遭受网络攻击带来的直接损失并不算什么，但导致业务无法正常运行才是致命的问题。有这方面需求的小伙伴，建议去Google多搜一搜怎么防护，我也只是会一些简单的防护😅。如果你想简单的了解下，可以看看阮一峰的&lt;a href=&#34;https://www.ruanyifeng.com/blog/2018/06/ddos.html&#34;&gt;DDOS 攻击的防范教程&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;服务器与cdn的优化&#34;&gt;服务器与CDN的优化&lt;/h3&gt;
&lt;p&gt;在选购服务器时，一个重要的指标就是网络。比如是按带宽选购，还是按流量选购。这2种不同的方式，效果肯定是不一样的，拿1M小水管来举例子，同时有很多用户访问的话，速度是相当的慢的。那么这种情况下，CDN就成为了一种可行的解决方案了。通过CDN可以将静态内容高速缓存到更靠近用户的位置，同时也能节省服务器带宽。&lt;/p&gt;
&lt;h3 id=&#34;服务器入侵自查&#34;&gt;服务器入侵自查&lt;/h3&gt;
&lt;p&gt;有时候，会有一些人入侵你的服务器，并用来挖矿、当作肉鸡等。如果服务器突然变慢，且CPU占用一直非常高，可能就需要注意了。当然，我们也得有些好习惯，比如不采用密码，而是用公钥登录，可以防止一部分脚本自动爆破，同时不要开放太多不必要的端口。&lt;/p&gt;
&lt;h3 id=&#34;静态资源优化&#34;&gt;静态资源优化&lt;/h3&gt;
&lt;p&gt;我们可以对HTML、CSS、图片等资源进行压缩，以减少带来的带宽消耗。我是用的gulp进行压缩的，压缩前后对比，减少了不小的文件大小。&lt;/p&gt;
&lt;p&gt;在每次打包时，对资源进行压缩。其实我们可以在开发时，就将这个问题考虑进来。举个例子，引用一个CSS框架，我们一般可能会把完整的包，或者是min包整个引入。然后在浏览器加载的时候，会下载完整的包。但是这里有个问题，这个框架里面的所有属性你都用到了吗？显然是没有的。所以我们可以用Sass，在开发的时候按需加载组件（现在这么干的其实挺多了）。在编写HTML的时候，也可以适当的优化。更小的HTML和CSS，不仅减少了服务器的传输压力，也加快了浏览器的加载速度。更重要的是，浏览器不需要再去解析用不到的DOM和CSS Rules了，那么渲染速度也会得到很快的提升。&lt;/p&gt;
&lt;h3 id=&#34;懒加载&#34;&gt;懒加载&lt;/h3&gt;
&lt;p&gt;这个功能我觉得还是很重要的，懒加载的意思，我说个粗糙的理解吧：图片懒得加载，只有你想看它的时候，它才会去加载。图片在整个页面上的占比，一般也不小了，而对所有的图片进行懒加载，可以让用户首次访问时间快很多。包括预览图片的沙箱、评论系统等等，全部采用懒加载，对白屏的影响是会减少很多的，毕竟别人访问网站时，页面白屏可能会导致用户流失。&lt;/p&gt;
&lt;h3 id=&#34;最后&#34;&gt;最后&lt;/h3&gt;
&lt;p&gt;还有许多的方法，比如：优化资源加载顺序、避免JavaScript阻塞页面渲染、采用高效的缓存策略提供静态资源等等。可以去&lt;a href=&#34;https://developers.google.com/speed/pagespeed/insights/?hl=zh-cn&#34;&gt;PageSpeed Insights&lt;/a&gt;做一个简单的网站性能测试，测试完之后会给出一些诊断结果和优化建议。我虽然只是个菜鸟后端，不太懂前端，但还是希望能给大家提供一个优化的思路。&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E7%BD%91%E7%AB%99%E4%BC%98%E5%8C%96/" term="网站优化" label="网站优化" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BC%98%E5%8C%96/" term="服务器优化" label="服务器优化" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">IOC依赖注入——自动注入的三个注解</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2021/ioc-auto-injection-annotation/" />
            <id>https://blog.besscroft.com/tech/2021/ioc-auto-injection-annotation/</id>
            <updated>2021-04-11T13:20:10&#43;08:00</updated>
            <published>2021-03-14T15:12:16&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">前言 学过Spring的小伙伴应该知道，只要是能够运行Java程序的平台，就能运行Sp……</summary>
            
                <content type="html">&lt;h3 id=&#34;前言&#34;&gt;前言&lt;/h3&gt;
&lt;p&gt;学过Spring的小伙伴应该知道，只要是能够运行Java程序的平台，就能运行Spring应用程序。而Spring框架也同时为Java应用程序的开发，提供了基础架构支持和丰富的功能。但是这些功能的底层，都会依赖Spring框架的两大核心特性：依赖注入(dependency injection，DI)和面向切面编程(aspect-oriented programming，AOP)。&lt;/p&gt;
&lt;p&gt;最近一直在看的书单：&lt;code&gt;Spring 实战(第四版)&lt;/code&gt;和&lt;code&gt;Spring 实战(第五版)&lt;/code&gt;，同时在Google也查阅了一些资料，算是对一个小知识点的总结了。&lt;/p&gt;
&lt;h3 id=&#34;自动化装配&#34;&gt;自动化装配&lt;/h3&gt;
&lt;p&gt;Spring框架主要从两个角度来实现了自动化装配：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;组件扫描（component scanning）：Spring 会自动发现应用上下文中所创建的 bean。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自动装配（autowiring）：Spring 自动满足 bean 之间的依赖。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;实现自动装配的三大注解&#34;&gt;实现自动装配的三大注解&lt;/h3&gt;
&lt;h4 id=&#34;autowired&#34;&gt;@Autowired&lt;/h4&gt;
&lt;p&gt;我们可以对一个Bean的&lt;code&gt;构造器&lt;/code&gt; 、&lt;code&gt;属性&lt;/code&gt;、&lt;code&gt;Setter方法&lt;/code&gt;上面标注&lt;code&gt;@Autowired&lt;/code&gt;注解，无论采用构造器还是Setter方法，Spring都会尝试满足方法参数上所声明的依赖。标注在属性上，Spring也会按照属性对应的类型，从容器中找到对应的Bean赋值到对应的属性上。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;personsystem&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.stereotype.Component&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * 构造器注入
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@Component&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Boy&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Person&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  
    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Girl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;girl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Boy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Girl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;girl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;girl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;girl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;love&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;girl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;love&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面的例子，不出意外的话，Spring会注入一个girl给boy😅&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * Setter方法注入
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@Autowired&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;required&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@Qualifier&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;beautifulGirl&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;setGirl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Girl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;girl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;){&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;girl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;girl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在Spring初始化Bean之后，会尽可能的去满足Bean的依赖。但是如果没有girl给boy注入的话，Spring会抛出一个异常。为了避免这个异常的发生，我们需要将&lt;code&gt;@Autowired&lt;/code&gt;的&lt;code&gt;required&lt;/code&gt;属性设置为false。如果有多个Bean可供注入时，我们可以使用&lt;code&gt;@Qualifier&lt;/code&gt;注解指定要注入的Bean。&lt;/p&gt;
&lt;h4 id=&#34;resource&#34;&gt;@Resource&lt;/h4&gt;
&lt;p&gt;后面的两个注释，来源于Java 依赖注入规范（JSR, Java Specification Requests）。而&lt;code&gt;@Resource&lt;/code&gt;注解，依赖于JSR250规范，可以参考下官方文档：https://jcp.org/en/jsr/detail?id=250&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@Resource&lt;/code&gt;和&lt;code&gt;@Autowired&lt;/code&gt;的区别：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;注解名&lt;/th&gt;
&lt;th&gt;注入方式&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;@Resource&lt;/td&gt;
&lt;td&gt;按照属性名/Bean的名称注入，也提供按照类型注入&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@Autowired&lt;/td&gt;
&lt;td&gt;按照类型注入&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@Component&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Boy&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Person&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
	
    &lt;span class=&#34;nd&#34;&gt;@Resource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;beautifulGirl&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Girl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;girl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;当然，&lt;code&gt;@Resource&lt;/code&gt;也是可以指定要注入的Bean的。&lt;/p&gt;
&lt;h4 id=&#34;inject&#34;&gt;@Inject&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;@Inject&lt;/code&gt;注解依赖JSR330规范：https://jcp.org/en/jsr/detail?id=330 ，但是我们在用这个注解之前，是需要导入一个依赖的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!-- https://mvnrepository.com/artifact/javax.inject/javax.inject --&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;javax.inject&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;javax.inject&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;@Inject&lt;/code&gt;注解虽然来源于Java依赖注入规范，但是只和&lt;code&gt;@Autowired&lt;/code&gt;有着一点点差别，在绝大多数场景下，都是可以相互替换的。该规范还提供了一个&lt;code&gt;@Named&lt;/code&gt;注解，作用是等同于&lt;code&gt;@Qualifier&lt;/code&gt;注解的。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@Component&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Boy&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Person&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
	
    &lt;span class=&#34;nd&#34;&gt;@Inject&lt;/span&gt;
    &lt;span class=&#34;nd&#34;&gt;@Named&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;beautifulGirl&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Girl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;girl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;值得一提的是，&lt;code&gt;@Resource&lt;/code&gt;和&lt;code&gt;@Inject&lt;/code&gt;注解，并不属于Spring。而依赖特性，并不是只有Spring框架才有。但是我个人并没有什么偏向性，只是习惯使用某些注解了。比如&lt;code&gt;@Inject&lt;/code&gt;需要导包，我自己平常写代码喜欢用&lt;code&gt;@Resource&lt;/code&gt;，在idea里面，用&lt;code&gt;@Autowired&lt;/code&gt;会有红色的波浪线等等，不过搬砖的时候，还是用的&lt;code&gt;@Autowired&lt;/code&gt;。这都是些个人习惯，不知道是不是只有我一个人这样，哈哈😃&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/spring/" term="Spring" label="Spring" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/spring-ioc/" term="Spring IOC" label="Spring IOC" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">设计一个简易的订单系统</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2021/design-order/" />
            <id>https://blog.besscroft.com/tech/2021/design-order/</id>
            <updated>2021-08-03T17:34:39&#43;08:00</updated>
            <published>2021-01-16T20:49:30&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">前言 在电商系统中，订单系统往往承载着非常重要的角色。在极光商城项目的准备阶段，最耗费……</summary>
            
                <content type="html">&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;在电商系统中，订单系统往往承载着非常重要的角色。在极光商城项目的准备阶段，最耗费我时长的就是订单系统了（毕竟实力也不咋样😅。这期间我也查阅了大量资料，为这一块的设计做了些准备。只能说第一次设计，还是挺想做出个好东西来，但是这要考虑的东西，可比单纯的写业务代码要多得多了呀。&lt;/p&gt;
&lt;h2 id=&#34;业务关系&#34;&gt;业务关系&lt;/h2&gt;
&lt;h3 id=&#34;订单系统&#34;&gt;订单系统&lt;/h3&gt;
&lt;p&gt;先来看看订单系统在整个极光商城中扮演的角色，实际上是负责管理平台交易的订单处理系统。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2021/design-order/design_oeder001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;订单管理&#34;&gt;订单管理&lt;/h3&gt;
&lt;p&gt;订单管理模块，主要的体现就是在后台的订单管理模块了。主要功能为订单列表、订单详情、订单定时任务、订单操作、订单跟踪、订单售后、订单流水等。&lt;/p&gt;
&lt;h3 id=&#34;订单服务&#34;&gt;订单服务&lt;/h3&gt;
&lt;p&gt;订单服务模块，为整个商城的业务支撑，负责的业务也是较复杂的。主要有订单创建，订单支付、订单确认、取消订单、发起售后、订单跟踪等流程。其中的规则较为复杂，比如说在用户提交订单时，得根据相应的规则判断订单是否合法，也可以理解为风控吧。然后要计算订单的金额，购买了东西，相应的库存也要变化，还要考虑超卖问题。其中某些步骤可能是需要异步调用的，举个例子：我用12306买票时，付款后，先收到邮件，然后12306APP这边的状态过几秒钟能看到购买成功，这里发邮件的功能，可能就是用的异步调用。&lt;/p&gt;
&lt;h3 id=&#34;订单信息&#34;&gt;订单信息&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2021/design-order/design_oeder002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;整个订单的设计，是采取的主表和子表。主表主要会存放订单的基本信息、用户信息、订单流水，物流信息、促销信息、等。但是考虑到一个订单可能包含多个商品，所以说子订单就是用来存放这些不同商品的信息的，当然，也可以进行订单拆分业务，但是即使这么设计，也要考虑到用户只应该付一次款的问题。&lt;/p&gt;
&lt;h3 id=&#34;数据库设计&#34;&gt;数据库设计&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2021/design-order/design_oeder003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;数据库里面，目前只对订单系统设计了6张表，以目前的业务来看的话，是绰绰有余了，以后业务变更了再修改吧。&lt;/p&gt;
&lt;h2 id=&#34;订单流程&#34;&gt;订单流程&lt;/h2&gt;
&lt;p&gt;就以正常下单的流程来说吧，售后的订单这里就不过多介绍了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2021/design-order/design_oeder004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;订单创建&#34;&gt;订单创建&lt;/h3&gt;
&lt;p&gt;用户登录商城，挑选想要购买的商品，然后选择地址和促销信息并提交订单。然后生成订单前，我们需要获取用户信息、商品信息、促销信息等。当然，并不是所有的数据都从前端接收的，不然的话用户传个假的价格过来，岂不是0元购了😂。获取完信息后，这时后台的风控系统，可以进行一系列的规则校验。咱们还得判断库存吧，库存不够了也不能卖，这里的业务设计，以提交订单为准进行库存的扣除。最后生成订单信息和支付信息，同步当前订单即创建完成。&lt;/p&gt;
&lt;h3 id=&#34;订单支付&#34;&gt;订单支付&lt;/h3&gt;
&lt;p&gt;支付的话，肯定就是对接第三方平台做一个支付功能了，具体的可以去看支付宝开放平台的文档做个参考。这里主要阐述下订单拆分问题。根据订单里面的商品的性质等原因，可以进行不同的订单拆分。但是，订单建议设计成同时支付和绑定订单。不然的话，很容易被凑单，从而造成一定的损失。除非你的业务就是想弄成淘宝那种，为了凑单拼到300元，然后付款了秒退凑单商品，从而达到优惠的效果。最后根据订单支付的结果，对订单进行操作，成功了就走订单生产流程，失败了就走失败订单的流程，还原被扣除的库存。&lt;/p&gt;
&lt;h3 id=&#34;订单生产&#34;&gt;订单生产&lt;/h3&gt;
&lt;p&gt;如果有多个仓库，可根据用户收货地址等因素来调配仓库的货物。并将商品打包寄出，同时更新快递状态实时同步。&lt;/p&gt;
&lt;h3 id=&#34;订单完成&#34;&gt;订单完成&lt;/h3&gt;
&lt;p&gt;用户收到商品后，确认收货，订单至此完成。&lt;/p&gt;
&lt;h3 id=&#34;用户体验&#34;&gt;用户体验&lt;/h3&gt;
&lt;p&gt;在订单的整个生命周期，都可以通过消息队列来异步操作。比如订单状态更新了，可以给用户发邮件或者短信通知，在商城系统的用户中心也可以推送通知等。&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;最后&lt;/h2&gt;
&lt;p&gt;将订单系统进行拆分，也就是订单的管理和订单的处理这两个模块是分开的。主要是考虑到用户下单，和客服进行订单管理的业务区别有点大，前者操作很频繁，后者可能更多的只是看看，做的操作较少。虽然移动端我现在还不会开发，但是得想到一个问题，不同的平台，对应的订单系统的处理逻辑肯定无法保证100%相同的。那么将逻辑拆分，统一管理，我觉得可能是较好的一个方案（目前也只能想到这一步了😅），脚踏实地，一步步来吧，毕竟自己要学的东西也很多。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;大公司的经验和成功模式固然重要，值得学习借鉴，但如果因此而变得盲从，就失去了坚持自我的勇气，在架构演化的道路上迟早会迷路。&lt;/p&gt;
&lt;p&gt;​				《大型网站技术架构：核心原理与案例分析》——李智慧&lt;/p&gt;
&lt;/blockquote&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/" term="软件工程" label="软件工程" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E6%9E%81%E5%85%89%E5%95%86%E5%9F%8E/" term="极光商城" label="极光商城" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/" term="数据库设计" label="数据库设计" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">再见，我的2020</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/life/2021/end2020hello2021/" />
            <id>https://blog.besscroft.com/life/2021/end2020hello2021/</id>
            <updated>2021-04-11T12:17:39&#43;08:00</updated>
            <published>2021-01-01T01:01:01&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">非淡泊无以明志，非宁静无以致远 ——《淮南子》刘安 过去 没想到2020就这么平凡的结束了……</summary>
            
                <content type="html">&lt;center&gt;&lt;B&gt;非淡泊无以明志，非宁静无以致远	——《淮南子》刘安&lt;/B&gt;&lt;/center&gt;
&lt;h3 id=&#34;过去&#34;&gt;过去&lt;/h3&gt;
&lt;p&gt;没想到2020就这么平凡的结束了，但这也是不平凡的一年。&lt;/p&gt;
&lt;p&gt;先看看去年的计划：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 学好Java，以及相关的一些技术。（不知道“好”怎么定义，但今年确实技术提升不少）&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 找一份自己喜欢的编程工作！&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 少玩游戏少熬夜（游戏确实玩的少了，但是熬夜真没办法）&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 坚持健身。&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 继续坚持做笔记。（虽然没怎么发博客，但是笔记做得还是非常丰富的）&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 精通Linux的日常使用以及掌握Linux平台的开发(以Java为主)&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 写一款自己的主题或web项目（一言难尽）&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 积极的拥抱开源。&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 学习或了解一项新技术&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 成立自己的小团队，或者找到一群有共同理想目标的人&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 完成以上所有的计划，最好能脱单！&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;反思&#34;&gt;反思&lt;/h3&gt;
&lt;p&gt;不可否认，这一年，我的编程水平确实提升不少，但是，这仅仅是&lt;code&gt;能力的渐进&lt;/code&gt;，而非&lt;code&gt;能力的跃迁&lt;/code&gt;。也就是说，我花了这么多时间去学习，这只是应有的收获，但它还不够！首先，技术确实可以应对我目前在公司日常开发的大部分场景，但是却无法形成体系。怎么说呢，一个项目/软件的整个生命周期，我无法全部兼顾，尤其是技术这一块，有不少自己的短板。很多时候，感觉自己只是个API调用工程师，虽然是在写业务/功能，但是很多时候会思考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我为什么要用这个东西？&lt;/li&gt;
&lt;li&gt;它是怎么实现的？&lt;/li&gt;
&lt;li&gt;有没有更好的解决方案？&lt;/li&gt;
&lt;li&gt;如果断网/不看文档，我还能不能写出来？&lt;/li&gt;
&lt;li&gt;真正碰到困难了，没有套路可以照搬，我该怎么办？&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;所以，我希望2021能沉下心来多读书，避免直接照搬别人的答案，而应该结合书本中成体系的知识，通过自己的独立思考得出自己的答案。&lt;strong&gt;对编程保持足够的热情、足够的动力、足够的耐心，最重要的是坚持下去！&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;
&lt;p&gt;先结合工作聊聊，在工作中，跟不少同事平常的聊天可以看出不少东西。虽然他们的技术知识面不一定有我的广（脸红😛），甚至很多东西都仅仅是听说过而已。但是呢，做项目的时候，总是会有一些刁钻的问题和让人摸不着头脑的bug，这时我自己尝试的时间过多的话，就会去问，避免项目进度停滞。而他们总是会说：“小伙子没事，你还年轻”，来避免尴尬。但是这确实是我经验不足，技术研究不够深入，不能很好的运用到项目中。所以我就会想，是不是我以前一直尝试的方向有些偏差。在过去，虽然我本身技术并不算好，但是也经常帮助朋友和同学解决问题，也许你能够猜到我为什么要这么做，因为你也可以这么做。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;工作年限&lt;/code&gt;不等于&lt;code&gt;工作经验&lt;/code&gt;，同理，&lt;code&gt;工作经验&lt;/code&gt;也不能等于&lt;code&gt;综合能力&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再聊聊开源，我最喜欢的两个作者：&lt;code&gt;@Evan You&lt;/code&gt;和&lt;code&gt;@DIYgod&lt;/code&gt;，虽然没见过真人，对他们也了解不太多。但是透过他们的作品可以发现，**他们总是在自己喜欢/擅长的领域，认真的在写代码，写到世界充满爱！**也就是说，一名程序员，并不需要什么都懂，不求广但求精。至少对于现阶段的我来说打好基础，弄清原理才是最重要的。编程本身就是强耦合性的复杂领域，而越是依赖关系很复杂的领域，越是需要通过【系统性学习】才能搞定它。&lt;strong&gt;知人者智，自知者明；胜人者有力，自胜者强。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我今年遇到了一本书，叫《如何阅读一本书》，怎么说呢，确实有点相遇恨晚的感觉。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;将来&#34;&gt;将来&lt;/h3&gt;
&lt;p&gt;又到了立flag的时间了，希望2021能将这些小目标一个个完成💪&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java，本职工作，可以针对集合、多线程、IO、jvm等作为切入点深入学习。&lt;/li&gt;
&lt;li&gt;深入学习Spring、SpringCloud、MySQL、Redis和Elasticsearch（看着有点多😅）。&lt;/li&gt;
&lt;li&gt;入坑Rust或Go。&lt;/li&gt;
&lt;li&gt;Vue/JavaScript/CSS的学习，起码得能写点有模有样的东西，虽然是Java程序员，但是前端不会点还是不太行。&lt;/li&gt;
&lt;li&gt;坚持锻炼身体（以跑步为主）。&lt;/li&gt;
&lt;li&gt;leetcode坚持刷题，希望不要碰到困难就停住了。&lt;/li&gt;
&lt;li&gt;不仅要有输入，也要有持续的输出。&lt;/li&gt;
&lt;li&gt;写一款自己的主题或web项目。&lt;/li&gt;
&lt;li&gt;成立一个小的开源开发团队，虽然技术目前不算好，但是一步一步走，总有一天会变好！&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;最后&#34;&gt;最后&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;送大家一句话：任何一个傻瓜都能写出计算机可以理解的代码。唯有写出人类容易理解的代码，才是优秀的程序员。——马丁·福勒 (Martin Fowler)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;每个人都有自己的人生，我不必羡慕他人，只需要走好自己的路，希望以后的生活会越来越好！&lt;/p&gt;
&lt;center&gt;&lt;b&gt;I shall rise oh well rise again and agian.&lt;/b&gt;&lt;/center&gt;
```java
public class Hello{
    public class void main(String[] args) {
    	System.out.println(&#34;你好，2021!&#34;);
    }
}
```
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E7%94%9F%E6%B4%BB/" term="生活" label="生活" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/" term="年终总结" label="年终总结" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">给vue-admin-template添加TagsView</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2020/vue-add-tagsview/" />
            <id>https://blog.besscroft.com/tech/2020/vue-add-tagsview/</id>
            <updated>2021-08-03T17:34:17&#43;08:00</updated>
            <published>2020-12-12T16:57:33&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">前言 之前规划着做一做自己的比较正式一点的项目，基于SpringBoot开发的前后端分……</summary>
            
                <content type="html">&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;之前规划着做一做自己的比较正式一点的项目，基于SpringBoot开发的前后端分离项目，但是自己本身只是Java后端为主的，所以前端功底并不好。于是就采用了&lt;a href=&#34;https://github.com/PanJiaChen/vue-element-admin&#34;&gt;vue-element-admin&lt;/a&gt;的基础模板&lt;a href=&#34;https://github.com/PanJiaChen/vue-admin-template&#34;&gt;vue-admin-template&lt;/a&gt;来进行开发。同时也可以基于自己的需要，增加很多组件上去。&lt;/p&gt;
&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;
&lt;h3 id=&#34;官方案例的对比&#34;&gt;官方案例的对比&lt;/h3&gt;
&lt;p&gt;{% tabs 选项卡 1 %}&lt;/p&gt;
&lt;!-- tab 无tagsView --&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/vue-add-tagsview/vue-add-tagsview01.png&#34; /&gt;&lt;/p&gt;
&lt;!-- endtab --&gt;
&lt;!-- tab 有tagsView --&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/vue-add-tagsview/vue-add-tagsview02.png&#34; /&gt;&lt;/p&gt;
&lt;!-- endtab --&gt;
&lt;p&gt;{% endtabs %}&lt;/p&gt;
&lt;p&gt;我们可以清楚的看到，有无tagsView的区别。&lt;/p&gt;
&lt;h3 id=&#34;添加&#34;&gt;添加&lt;/h3&gt;
&lt;p&gt;既然需要这个组件，那么就添加上去吧，好在官方的完整解决方案中，是有这个代码的。&lt;/p&gt;
&lt;h4 id=&#34;复制文件&#34;&gt;复制文件&lt;/h4&gt;
&lt;p&gt;我们需要先从&lt;a href=&#34;https://github.com/PanJiaChen/vue-element-admin&#34;&gt;vue-element-admin&lt;/a&gt;复制一些必要的文件过来。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;src/layout/components/TagsView&lt;/code&gt; 注意，这是一整个文件夹，全部复制进去。地址： &lt;a href=&#34;https://github.com/PanJiaChen/vue-element-admin/tree/master/src/layout/components&#34;&gt;https://github.com/PanJiaChen/vue-element-admin/tree/master/src/layout/components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/vue-add-tagsview/vue-add-tagsview03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;src/store/modules/tagsView.js&lt;/code&gt;，复制这个文件到相应的位置，不知道位置的，就看这个文件的路径。。。地址：https://github.com/PanJiaChen/vue-element-admin/blob/master/src/store/modules/tagsView.js&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;修改文件&#34;&gt;修改文件&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;修改&lt;code&gt;vue-admin-template\src\layout\components\AppMain.vue&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;修改如下代码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/vue-add-tagsview/vue-add-tagsview04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vue&#34; data-lang=&#34;vue&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;section&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;app-main&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;transition&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;fade-transform&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;out-in&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;keep-alive&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;:include&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;=&amp;#34;cachedViews&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;&amp;lt;!--&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;router-view&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;:key&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;=&amp;#34;key&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;router-view&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/router-view&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/keep-alive&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;transition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;section&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;修改如下代码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/vue-add-tagsview/vue-add-tagsview05.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;AppMain&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;computed&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;cachedViews&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$store&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tagsView&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cachedViews&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// ,
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// key() {
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//   return this.$route.path
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// }
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;新增如下代码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/vue-add-tagsview/vue-add-tagsview06.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;hasTagsView&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;err&#34;&gt;.app-main&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c&#34;&gt;/* 84 = navbar + tags-view = 50 + 34 */&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;min-height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;calc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;vh&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;84&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;fixed-header&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;app-main&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;padding-top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;84&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;修改&lt;code&gt;vue-admin-template\src\layout\components\index.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/vue-add-tagsview/vue-add-tagsview08.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vue&#34; data-lang=&#34;vue&#34;&gt;&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TagsView&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./TagsView&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;修改&lt;code&gt;src\layout\index.vue&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;修改如下代码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/vue-add-tagsview/vue-add-tagsview09.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vue&#34; data-lang=&#34;vue&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;:class&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;=&amp;#34;classObj&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;app-wrapper&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;v-if&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;=&amp;#34;device===&amp;#39;mobile&amp;#39;&amp;amp;&amp;amp;sidebar.opened&amp;#34; class=&amp;#34;drawer-bg&amp;#34; @click=&amp;#34;handleClickOutside&amp;#34; /&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;    &amp;lt;sidebar class=&amp;#34;sidebar-container&amp;#34; /&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;    &amp;lt;div class=&amp;#34;main-container&amp;#34;&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;      &amp;lt;div :class=&amp;#34;{&amp;#39;fixed-header&amp;#39;:fixedHeader}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;navbar&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;tags-view&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app-main&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;修改如下代码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/vue-add-tagsview/vue-add-tagsview10.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Navbar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Sidebar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppMain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TagsView&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./components&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;修改如下代码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/vue-add-tagsview/vue-add-tagsview11.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;err&#34;&gt;components:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;Navbar,&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;Sidebar,&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;AppMain,&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;TagsView&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;修改&lt;code&gt;src\settings.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/vue-add-tagsview/vue-add-tagsview12.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @type {boolean} true | false
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @description 是否开启标签栏缓存
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;tagsView&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;修改&lt;code&gt;src\store\getters.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/vue-add-tagsview/vue-add-tagsview13.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getters&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;sidebar&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sidebar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;device&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;device&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;token&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;token&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;avatar&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;avatar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;visitedViews&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tagsView&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;visitedViews&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;cachedViews&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tagsView&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cachedViews&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getters&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;修改&lt;code&gt;src/store/index.js &lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/vue-add-tagsview/vue-add-tagsview14.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./modules/user&amp;#39;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tagsView&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./modules/tagsView&amp;#39;&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Vuex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;store&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Vuex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Store&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;modules&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;settings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;tagsView&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;getters&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;修改&lt;code&gt;src/store/modules/settings.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/vue-add-tagsview/vue-add-tagsview15.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;defaultSettings&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;@/settings&amp;#39;&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;showSettings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tagsView&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fixedHeader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sidebarLogo&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;defaultSettings&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;showSettings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;showSettings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;tagsView&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tagsView&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;fixedHeader&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fixedHeader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;sidebarLogo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sidebarLogo&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;至此，我们就把新功能添加上去啦！😉&lt;/p&gt;
&lt;h3 id=&#34;完成&#34;&gt;完成&lt;/h3&gt;
&lt;p&gt;现在我们来看看添加后的效果吧！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/vue-add-tagsview/vue-add-tagsview16.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/vue/" term="Vue" label="Vue" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">【玩转腾讯云】用轻量应用服务器搭建网站</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2020/lighthouse/" />
            <id>https://blog.besscroft.com/tech/2020/lighthouse/</id>
            <updated>2021-08-03T17:33:21&#43;08:00</updated>
            <published>2020-06-29T20:29:56&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">前言 不少小伙伴应该知道，腾讯云正在内测轻量应用服务器，而且马上就要公测了！我提前申请……</summary>
            
                <content type="html">&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;不少小伙伴应该知道，腾讯云正在内测轻量应用服务器，而且马上就要公测了！我提前申请到了一台内测机器，那就来告诉大家，在公测后购买腾讯云轻量应用服务器之后如何玩转它吧，比如搭建静态或者动态网站！&lt;/p&gt;
&lt;h2 id=&#34;什么是轻量应用服务器-lighthouse&#34;&gt;什么是轻量应用服务器 Lighthouse&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;这里是文档上的介绍，让我们先了解下！&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://cloud.tencent.com/product/lighthouse&#34;&gt;轻量应用服务器&lt;/a&gt;（Lighthouse）是一种易于使用和管理、适合承载轻量级业务负载的云服务器，能帮助个人和企业在云端快速构建网站、博客、电商、论坛等各类应用以及开发测试环境，并提供应用部署、配置和管理的全流程一站式服务，极大提升构建应用的体验，是您使用腾讯云的最佳入门途径。&lt;/p&gt;
&lt;h2 id=&#34;购买&#34;&gt;购买&lt;/h2&gt;
&lt;p&gt;先去&lt;a href=&#34;https://console.cloud.tencent.com/lighthouse/instance/index&#34;&gt;控制台&lt;/a&gt;找到轻量应用服务器，然后按需求购买。可以选择不同的地域、镜像、套餐、时长和数量等。这里我申请到的内测机型是【上海区域、1核2G、系统盘40G，峰值5Mbps、1000G流量的套餐】。&lt;/p&gt;
&lt;h2 id=&#34;使用&#34;&gt;使用&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们购买成功后，来到轻量应用服务器控制台，打开详情页面后，需要先【重置密码】或者【绑定密钥】。由于是作演示用，所以我就选择了【重置密码】。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后打开XShell 6，新建会话，自定义名称，然后在【主机】里面输入【IP地址】。然后进行连接，并输入用户名和密码，连上去之后如图所示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;搭建网站&#34;&gt;搭建网站&lt;/h2&gt;
&lt;p&gt;这里我推荐使用BT面板，因为我这台轻量服务器的系统是CentOS，所以就需要自己安装了，当然，你也可以在控制台直接更换成BT面板的应用镜像，非常方便有木有！！！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;更新系统和软件包&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;yum update -y
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;安装一些软件包&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;yum install -y curl vim wget unzip git nano
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;安装BT面板&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;yum install -y wget &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sh install.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;中间会弹出一个提示，输入y，并回车，之后等待一会儿就好啦！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们可以看到，安装速度真的是很快啊，上面的Bt-Panel、username和password分别对应公网访问地址、用户名和密码。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse006.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后我们需要去控制台的防火墙，开放8888端口。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse007.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入到BT面板之后，就安装推荐的LNMP即可，具体的版本其实可以根据自己的实际情况来看。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse008.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后等待安装就行了。&lt;/p&gt;
&lt;h3 id=&#34;搭建静态网站&#34;&gt;搭建静态网站&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse009.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;安装好之后，选择左边的【网站】，然后点击【添加站点】，如上图，在域名这一栏，填上你的域名。当然，得先去把域名解析到当前的ip地址，而且还得先备案哦，在腾讯云备案，还是比较方便的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse010.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后在最右边，选择刚创建好的网站的【设置】。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse011.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后可以一键申请SSL证书，还是比较方便的，其它的就按照自己的需求来。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse012.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;在【文件】里面，可以管理和上传你自己的代码和静态文件资源。&lt;/p&gt;
&lt;p&gt;到这里，没啥问题的话，网站就已经可以访问了！&lt;/p&gt;
&lt;h3 id=&#34;搭建动态网站&#34;&gt;搭建动态网站&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse013.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;BT面板也可以搭建动态网站，你可以按照刚才搭建静态网站的方法，上传自己的安装包，或者去【软件商店】安装【宝塔一键部署源码1.1】。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse014.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;安装好之后，可以用这个插件一键部署源码，比如说我们要安装wordpress博客系统，找到之后，选择一键部署就行了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse015.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后在相应的空里面填就好了，域名还是一样，要提前解析好，其他的一般默认即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse016.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;部署好之后，访问站点，上面的数据库账号资料后面会用的到。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse017.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击【现在就开始】，进入下一步！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse018.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;在这一步，需要填好刚才准备的信息，然后点击提交！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse019.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;进行安装！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse020.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后根据自己的情况，填上相应的信息，注意密码不要用弱密码，我这里只是为了演示！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse021.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;成功之后，登录就能进到后台啦！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse022.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后就自己去探索功能吧！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/lighthouse/lighthouse023.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;至此，动态网站已经搭建完成！&lt;/p&gt;
&lt;h2 id=&#34;轻量服务器的应用场景&#34;&gt;轻量服务器的应用场景&lt;/h2&gt;
&lt;p&gt;腾讯云轻量应用服务器，除了可以搭建网站，还可以干很多事情哦！&lt;/p&gt;
&lt;p&gt;主要的应用场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网站搭建&lt;/li&gt;
&lt;li&gt;Web 应用服务&lt;/li&gt;
&lt;li&gt;快速搭建开发测试环境&lt;/li&gt;
&lt;li&gt;云端学习环境&lt;/li&gt;
&lt;/ul&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E7%8E%A9%E8%BD%AC%E8%85%BE%E8%AE%AF%E4%BA%91/" term="玩转腾讯云" label="玩转腾讯云" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/linux/" term="Linux" label="Linux" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E5%8D%9A%E5%AE%A2/" term="博客" label="博客" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">我和我的博客的过去、现在与未来</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/life/2020/newblog/" />
            <id>https://blog.besscroft.com/life/2020/newblog/</id>
            <updated>2021-08-03T17:23:13&#43;08:00</updated>
            <published>2020-04-30T15:17:13&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">前言 博客原来的样式，是去年五一晚上熬夜搞出来的，当时觉得蛮漂亮，但是看久了，就觉得乏……</summary>
            
                <content type="html">&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;博客原来的样式，是去年五一晚上熬夜搞出来的，当时觉得蛮漂亮，但是看久了，就觉得乏了！但这还不是我要重构的原因，博客代码冗余、加载速度慢、载入资源多等等，迫使我对整个博客进行了重构和魔改！&lt;/p&gt;
&lt;h2 id=&#34;过去&#34;&gt;过去&lt;/h2&gt;
&lt;p&gt;在我第一次使用hexo时，尝试过很多主题，但最终还是回到了&lt;a href=&#34;https://theme-next.iissnan.com/&#34;&gt;NexT&lt;/a&gt;主题。并且一用就是2年多了，期间经历了多次重大的更新和改进，从此也开始了自己的魔改之路。NexT主题，自带的样式虽然在很多人看来并不好看，但是它的功能非常强大，只要你想(不懒)，你几乎可以用它实现静态博客能实现的所有功能，不是说别的主题不行，而是NexT魔改起来对我而言更舒服！&lt;/p&gt;
&lt;p&gt;第一次自己建站写博客，是用的&lt;a href=&#34;https://wordpress.org/&#34;&gt;WordPress&lt;/a&gt;，确实很强大，但是在国内用起来也不是特别舒服。尤其是现在，国内用户的体验大不如以前了，并且已经打不开了。我知道，这些都不是事儿，我放弃wordpress的原因是，它太吃性能了！！！不是所有人都能承担的起这个费用的，因为没有必要。后来上网寻找替代方案，改用静态博客，最后选择了&lt;a href=&#34;https://hexo.io/zh-cn/&#34;&gt;Hexo&lt;/a&gt;。搭建的方式也逐步变得多样化，从单一的部署，变成多线部署、多解析，从原生加载到CDN加速和对象存储，从第三方服务到自建再到第三方等等。在去年，我也尝试了新的动态博客方案——&lt;a href=&#34;https://typecho.org/&#34;&gt;Typecho&lt;/a&gt;和&lt;a href=&#34;https://halo.run/&#34;&gt;Halo&lt;/a&gt;，而且Halo可是用Java写的呢，这跟我的专业也就一样啦！&lt;/p&gt;
&lt;p&gt;早些年，写日记这种东西，都是日记本。后来就慢慢的尝试在网上写日记，尝试了很多第三方的平台来写日记。然后慢慢的熟知了博客这个东西，也就想有一个自己的博客，也就有了以上一些经历。现在静态博客用的还是Hexo，动态博客用的是Typecho，第三方服务正在用&lt;a href=&#34;https://www.yuque.com/login?platform=wechat&amp;amp;inviteToken=357df65e3061673e3b03a080fade2e499d01ab65c01de1cd4e0f11cc6b9c938b&#34;&gt;语雀&lt;/a&gt;和&lt;a href=&#34;https://www.yinxiang.com/&#34;&gt;印象笔记&lt;/a&gt;，这里我强烈推荐一波语雀，是真的好用，目前正在逐步从印象笔记迁移到语雀！&lt;/p&gt;
&lt;h2 id=&#34;现在&#34;&gt;现在&lt;/h2&gt;
&lt;p&gt;我一直都有写日记的习惯(别问我为什么没看到，我想没有多少人会把日记放网上给人看的)，偶尔也会写写学习笔记、一些感想等，但是很少放到网上。我觉得，经常用文字记录下自己的学习、成长与生活，其实是非常好的一个习惯。而且用电脑写作，能够有很多手写所没有的好处，比如说用Markdown书写不仅美观、而且排版也更好看，能够在文章中插入流媒体、表格等，分类页更加方便。但最大的缺点就是，原本写字就不好看。。。长时间不握笔，就。。。&lt;/p&gt;
&lt;p&gt;来聊聊这次重构博客吧，我并不是在原来的基础上更改的，而是去下了最新的Hexo和NexT主题，在本地从零开始边预览边魔改的，目前用的是7.8.0版本。用&lt;code&gt;chrome&lt;/code&gt; + &lt;code&gt;git bash&lt;/code&gt; + &lt;code&gt;VS Code&lt;/code&gt;，慢慢的修改，经历了无数次的报错之后，终于搞定，chrome起到的最大的作用还不是预览网页，而是用搜索引擎排错🤣。我基本上删除了主题中所有我很难用的上的代码和插件，最大程度的减少多余的代码带来的文件大小过大的问题。NexT主题长时间不更新的话，它的源码也会改动特别大，需要重新看一遍才行。新版本中，会删掉一些模块，但是其中一些东西自己很喜欢怎么办？直接去GitHub上面的&lt;a href=&#34;https://github.com/theme-next/hexo-theme-next&#34;&gt;NexT的repo&lt;/a&gt;，查看commits的提交记录，并对照着自己修改代码即可！因为像这样的开源主题，是需要照顾到很多人的，如果只是自己单一的需求，自己添加代码就好啦！😅然后把博客内的颜色、样式等，全部改成了自己比较喜欢的风格。修改了部分模块的逻辑，以及修改了部分页面的布局等。&lt;/p&gt;
&lt;p&gt;可以简单看下前后的区别，我只截图了首页的头部的一小块部分，如果之前来访过的小伙伴，应该是能看到整站的大改的，后期考虑下做个以前的镜像。如果还留着我发的软件的小伙伴，直接在电脑上打开软件，就能第一时间看到啦！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;重构前&lt;/strong&gt;:
&lt;img src=&#34;https://blog.besscroft.com/images/life/2020/newblog/newblog01.png&#34; /&gt;
&lt;strong&gt;重构后:&lt;/strong&gt;
&lt;img src=&#34;https://blog.besscroft.com/images/life/2020/newblog/newblog02.png&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;未来&#34;&gt;未来&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;我为什么要写博客？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其实也不仅仅只是博客，可以有学习笔记、日记等更多的东西，这里用博客统称。&lt;/p&gt;
&lt;p&gt;说的笼统一点：&lt;strong&gt;用博客的形式来记录下你有价值的思考，会带来很多好处，却没有任何明显的坏处&lt;/strong&gt;。这就跟学习时做笔记和思维导图一样，自己总结记录下来，才能够有收获和成长。我平常就是在做笔记和思维导图的时候，能够发现自己还有哪些知识点没有掌握好，这也是一种查漏补缺的方式。试想一下，我们为什么不少刷一下抖音、少看一集电视剧、少打一把游戏，然后去写作呢？它能给你带来的提升是巨大的！每次在写学习笔记的时候，自己总结不出来、或者发现的没学好的地方，我都会去查阅相关资料，久而久之，养成了习惯，所以说：&lt;strong&gt;书写是为了更好的思考&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;现在我的写作内容，以学习笔记偏多，没办法，这不是快毕业了嘛😝我写博客最开始就是希望，记录自己的成长与生活，提升自己的能力，能够交到一群志同道合的朋♂友。当然，我也有看过 &lt;code&gt;A Declaration of the Independence of Cyberspace&lt;/code&gt;，即《赛博空间独立宣言》。&lt;/p&gt;
&lt;p&gt;以后我也会坚持写博客，谁也无法预料以后博客的形态会发生什么样的变化，但是我觉得，博客的中心，永远都是创作者的内容输出，这一点应该是不会变化的，至少很难改变。&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E7%94%9F%E6%B4%BB/" term="生活" label="生活" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/blog/" term="Blog" label="Blog" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/hexo/" term="Hexo" label="Hexo" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/next/" term="NexT" label="NexT" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">世纪互联OneDrive搭建OneIndex</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2020/onedrivecn/" />
            <id>https://blog.besscroft.com/tech/2020/onedrivecn/</id>
            <updated>2021-08-03T17:33:35&#43;08:00</updated>
            <published>2020-04-18T21:57:07&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">前言 众所周知，国际版OneDrive在国内的访问速度并不理想(多线程下载除外)，所以……</summary>
            
                <content type="html">&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;众所周知，国际版OneDrive在国内的访问速度并不理想(多线程下载除外)，所以我们就需要相对而言速度更快的世纪互联版OneDrive来体验体验了。&lt;/p&gt;
&lt;h2 id=&#34;准备&#34;&gt;准备&lt;/h2&gt;
&lt;p&gt;首先，得有一个世纪互联版的OneDrive，其次一个域名和一台vps。&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;h3 id=&#34;登录azure-active-directory&#34;&gt;登录Azure Active Directory&lt;/h3&gt;
&lt;p&gt;登录&lt;a href=&#34;https://portal.azure.cn/&#34;&gt;Azure Active Directory&lt;/a&gt;注册应用。选择&lt;code&gt;应用注册&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/onedrivecn/onedrivecn01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后我们点击&lt;code&gt;新注册&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/onedrivecn/onedrivecn02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里的名称可以随便取，然后选择受支持的账户类型为&lt;code&gt;任何组织目录(任何Azure AD 目录- 多租户)中的账户&lt;/code&gt;，回调地址填你的网站的地址，然后单击注册。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/onedrivecn/onedrivecn03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后我们能看到&lt;code&gt;应用程序(客户端)ID&lt;/code&gt;，这个就是你的应用ID。然后接下来要进行&lt;code&gt;应用机密配置&lt;/code&gt;和&lt;code&gt;API权限配置&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/onedrivecn/onedrivecn04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;先进行&lt;code&gt;应用机密配置&lt;/code&gt;，选择&lt;code&gt;新客户端密码&lt;/code&gt;，然后自己随意即可！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/onedrivecn/onedrivecn05.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后复制你的&lt;code&gt;应用机密&lt;/code&gt;并保存，注意，&lt;strong&gt;只能复制一次！！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/onedrivecn/onedrivecn06.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后配置&lt;code&gt;API权限&lt;/code&gt;，勾选&lt;code&gt;Files.ReadWrite&lt;/code&gt;和&lt;code&gt;Files.ReadWrite.All&lt;/code&gt;即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/onedrivecn/onedrivecn07.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装oneindex&#34;&gt;安装OneIndex&lt;/h3&gt;
&lt;p&gt;这一步需要到vps上进行，项目是这个👉&lt;a href=&#34;https://github.com/lzx8589561/oneindex2-in&#34;&gt;oneindex2-in&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/onedrivecn/onedrivecn08.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;设置config/、config/base.php 、 cache/ 可读写&lt;/p&gt;
&lt;p&gt;复制刚才的&lt;code&gt;应用程序(客户端) ID&lt;/code&gt;到&lt;code&gt;应用ID&lt;/code&gt;栏中&lt;/p&gt;
&lt;p&gt;复制刚才的&lt;code&gt;应用机密到oneindex&lt;/code&gt;的&lt;code&gt;应用机密&lt;/code&gt;栏中&lt;/p&gt;
&lt;p&gt;其中配置参数为世纪互联前缀&lt;code&gt;https://**xxx-my**.sharepoint.cn&lt;/code&gt;填写加粗部分&lt;code&gt;xxx-my&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;回调地址填写你的网址，例如&lt;code&gt;https://cdn.baidu.com&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;特殊文件实现功能&#34;&gt;特殊文件实现功能&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;README.md&lt;/code&gt;、&lt;code&gt;HEAD.md&lt;/code&gt; 、 &lt;code&gt;.password&lt;/code&gt;特殊文件使用&lt;/p&gt;
&lt;p&gt;可以参考https://github.com/donwa/oneindex/tree/files&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在文件夹底部添加说明:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在 OneDrive 的文件夹中添加&lt;code&gt;README.md&lt;/code&gt;文件，使用 Markdown 语法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;在文件夹头部添加说明:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在 OneDrive 的文件夹中添加&lt;code&gt;HEAD.md&lt;/code&gt; 文件，使用 Markdown 语法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;加密文件夹:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在 OneDrive 的文件夹中添加&lt;code&gt;.password&lt;/code&gt;文件，填入密码，密码不能为空。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;直接输出网页:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在 OneDrive 的文件夹中添加&lt;code&gt;index.html&lt;/code&gt; 文件，程序会直接输出网页而不列目录。
配合 文件展示设置-直接输出 效果更佳。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;nginx伪静态设置&#34;&gt;Nginx伪静态设置&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;if (!-f $request_filename){
    set $rule_0 1$rule_0;
}
if (!-d $request_filename){
    set $rule_0 2$rule_0;
}
if ($rule_0 = &amp;#34;21&amp;#34;){
	rewrite ^/(.*)$ /index.php?/$1 last;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;命令行功能&#34;&gt;命令行功能&lt;/h3&gt;
&lt;p&gt;仅能在&lt;code&gt;php cli&lt;/code&gt;模式下运行&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;清除缓存:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;php one.php cache:clear
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;刷新缓存:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;php one.php cache:refresh
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;刷新令牌:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;php one.php token:refresh
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;上传文件:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;php one.php upload:file 本地文件 &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;onedrive文件&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;上传文件夹:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;php one.php upload:folder 本地文件夹 [OneDrive文件夹]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;例如：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;//上传demo.zip 到OneDrive 根目录  
php one.php upload:file demo.zip  

//上传demo.zip 到OneDrive /test/目录  
php one.php upload:file demo.zip /test/  

//上传demo.zip 到OneDrive /test/目录并将其命名为 d.zip  
php one.php upload:file demo.zip /test/d.zip  

//上传up/ 到OneDrive /test/ 目录  
php one.php upload:file up/ /test/
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;shell计划任务&#34;&gt;Shell计划任务&lt;/h3&gt;
&lt;p&gt;设置每小时刷新一次Token ，任务周期选择每小时，0分钟，脚本内容为：&lt;code&gt;php /程序具体路径/one.php token:refresh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;设置每十分钟后台刷新一遍缓存,任务周期改为N分钟-10分钟，脚本内容为：&lt;code&gt;php /程序具体路径/one.php cache:refresh&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;具体路径为你网站根目录路径,PHP后有空格请注意。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;其它玩法&#34;&gt;其它玩法：&lt;/h3&gt;
&lt;p&gt;推荐看看大佬们怎么玩的吧。&lt;/p&gt;
&lt;p&gt;我习惯用服务器下载电视剧或者电影，然后同步到OneDrive，然后在线观看，非常清晰的呢！！！&lt;/p&gt;
&lt;p&gt;可以访问我的由国际版OneDrive和Google Drive搭建的&lt;a href=&#34;https://mirrors.52bess.com&#34;&gt;站点&lt;/a&gt;哦！！！&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/onedrive/" term="OneDrive" label="OneDrive" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/linux/" term="Linux" label="Linux" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/oneindex/" term="OneIndex" label="OneIndex" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Linux系统手动更换内核</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2020/centoskernrlup/" />
            <id>https://blog.besscroft.com/tech/2020/centoskernrlup/</id>
            <updated>2021-08-04T14:53:25&#43;08:00</updated>
            <published>2020-03-30T14:59:49&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">从所有人的角度来看，当今的Internet并未如其所愿地移动数据。 前言 一般而言，在云……</summary>
            
                <content type="html">&lt;center&gt;&lt;b&gt;从所有人的角度来看，当今的Internet并未如其所愿地移动数据。&lt;/b&gt;&lt;/center&gt;
&lt;h3 id=&#34;前言&#34;&gt;前言&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;一般而言，在云计算商那里“租”了一台服务器之后，我一般会选择&lt;code&gt;CentOS 7&lt;/code&gt; 系统，所以这篇文章，就以CentOS为例(似乎有一点标题党的嫌疑？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;基本不会介绍BBR的原理，需要详细了解，&lt;a href=&#34;https://research.google/pubs/pub45646/&#34;&gt;可以访问research&lt;/a&gt;，我技术并不够优秀，很难解释清楚，还请见谅！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;先讲讲BBR吧！&lt;a href=&#34;https://en.wikipedia.org/wiki/TCP_congestion_control#TCP_BBR&#34;&gt;Wiki百科&lt;/a&gt;给出的解释是&lt;code&gt;Bottleneck Bandwidth and Round-trip propagation time (BBR)&lt;/code&gt; ，是Google在2016年开发的TCP拥塞控制算法(开源了)。TCP拥塞控制算法有很多，BBR是其中一种，但是由于它出色的效果，被很多人采用。至于linux内核什么时候开始原生支持的，网上的说法真的是五花八门，很多人文章感觉就是互相抄，连&lt;code&gt;2.6.*&lt;/code&gt; 的说法都能蹦出来(我怀疑是一些采集站)。相对而言，很多大佬的博客文章，就比较严谨一些，基本上都是&lt;code&gt;4.9&lt;/code&gt;。抱着不懂就查的态度，我去Google稍微搜了一下，不敢确定是不是一定是对的。&lt;a href=&#34;https://zh.wikipedia.org/wiki/Linux%E5%86%85%E6%A0%B8#4.x.y%E7%89%88%E6%9C%AC%E7%B3%BB%E5%88%97&#34;&gt;Wiki百科&lt;/a&gt;的详细说明，可以找到如下一条说明：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;内核&lt;/th&gt;
&lt;th&gt;初始发行日期&lt;/th&gt;
&lt;th&gt;最新版本&lt;/th&gt;
&lt;th&gt;维护者&lt;/th&gt;
&lt;th&gt;支持状态&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;4.9&lt;/td&gt;
&lt;td&gt;2016年12月11日&lt;/td&gt;
&lt;td&gt;4.9.148&lt;/td&gt;
&lt;td&gt;葛雷格·克罗哈曼&lt;/td&gt;
&lt;td&gt;长期支持版本，从2016年12月至2023年1月&lt;/td&gt;
&lt;td&gt;开始支持 BBR congestion control。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;更换更新内核&#34;&gt;更换/更新内核&lt;/h3&gt;
&lt;p&gt;这时候我们来更换内核吧，这里我的测试机器是阿里云国际香港ECS。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当前的 Kernel 版本&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ uname -r
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/centoskernrlup/centoskernrlup01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;更新软件包&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ yum update -y
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;elrepo项目&#34;&gt;ELRepo项目&lt;/h4&gt;
&lt;p&gt;这里我们需要用到&lt;a href=&#34;https://elrepo.org/tiki/tiki-index.php&#34;&gt;Repo项目&lt;/a&gt;Enterprise Linux软件包的RPM存储库。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;导入ELRepo公钥&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;安装ELRepo的 yum 源到系统&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ yum install https://www.elrepo.org/elrepo-release-7.0-4.el7.elrepo.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;安装新内核啦&#34;&gt;安装新内核啦&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;查看ELRepo仓库下，在当前系统支持的内核包
ELRepo会提供&lt;a href=&#34;https://www.kernel.org/&#34;&gt;he Linux Kernel Archives&lt;/a&gt;用资源。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ yum --disablerepo&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt; --enablerepo&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;elrepo-kernel&amp;#34;&lt;/span&gt; list available
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;安装最新的主线稳定内核&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ yum --enablerepo&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;elrepo-kernel install kernel-ml
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;更改grub配置&#34;&gt;更改grub配置&lt;/h4&gt;
&lt;p&gt;在安装完新的 Kernrl 之后，系统是不会帮你切换到新内核的，重启也不行，需要我们自己设置，将新内核设置为默认启动选项。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看所有的 Kernel&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ rpm -qa &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep kernel
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/centoskernrlup/centoskernrlup02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看当前正在使用的 Kernrl&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ uname -r
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/centoskernrlup/centoskernrlup03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看 Kernel 启动顺序&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ awk -F&lt;span class=&#34;se&#34;&gt;\&amp;#39;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;$1==&amp;#34;menuentry &amp;#34; {print i++ &amp;#34; : &amp;#34; $2}&amp;#39;&lt;/span&gt; /etc/grub2.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/centoskernrlup/centoskernrlup04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们可以看到，安装完之后，内核没有切换过去，通过查看得知，新安装的内核位于第一个位置，标记为 &lt;code&gt;0&lt;/code&gt;。这是我们需要修改&lt;code&gt;/etc/default/grub&lt;/code&gt;文件，以便于让系统在启动时让新内核成为默认选项。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ vim /etc/default/grub
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/centoskernrlup/centoskernrlup05.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;需要把图中的&lt;code&gt;GRUB_DEFAULT=saved&lt;/code&gt; 改成 &lt;code&gt;GRUB_DEFAULT=0&lt;/code&gt; ，然后保存。当然，你也可以在安装其它版本的Kernel之后，更改&lt;code&gt;GRUB_DEFAULT&lt;/code&gt;的值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;重新生成 Kernrl 配置&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ grub2-mkconfig -o /boot/grub2/grub.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;然后重启机器&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ reboot
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;重启完毕后，检查是否成功&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ uname -r
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/centoskernrlup/centoskernrlup06.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，已经成功啦！&lt;/p&gt;
&lt;h3 id=&#34;删除多余内核&#34;&gt;删除多余内核&lt;/h3&gt;
&lt;p&gt;你可以在安装新内核之后，选择把其它内核删掉，但是请注意&lt;strong&gt;千万不要删除正在运行的那个内核！！！&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看所有的 Kernel&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ rpm -qa &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep kernel
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;删除你想删除的内核&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ yum remove kernel-&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;old_kernel_version&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 举个例子&lt;/span&gt;
$ yum remove kernel-3.10.0-957.el7.x86_64
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;重新生成 Kernrl 配置&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ grub2-mkconfig -o /boot/grub2/grub.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;开启bbr&#34;&gt;开启BBR&lt;/h3&gt;
&lt;p&gt;整了这么半天，除了更新下内核，另一个重要的事情就是需要开启BBR了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编辑&lt;code&gt;/tec/sysctl.conf&lt;/code&gt;文件&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ vim /etc/sysctl.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;添加如下内容：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;net.core.default_qdisc=fq
net.ipv4.tcp_congestion_control=bbr
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;或者使用tee命令重定向追加到&lt;code&gt;/tec/sysctl.conf&lt;/code&gt;文件中：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;net.core.default_qdisc=fq&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sudo tee -a /etc/sysctl.conf
$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;net.ipv4.tcp_congestion_control=bbr&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sudo tee -a /etc/sysctl.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;从配置文件“/etc/sysctl.conf”加载内核参数设置&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ sysctl -p
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;验证是否成功(是否开启了BBR&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ sysctl net.ipv4.tcp_congestion_control
&lt;span class=&#34;c1&#34;&gt;# 显示如下内容即可：&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# net.ipv4.tcp_congestion_control = bbr&lt;/span&gt;
$ sysctl net.ipv4.tcp_available_congestion_control
&lt;span class=&#34;c1&#34;&gt;# 显示如下内容即可：&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# net.ipv4.tcp_available_congestion_control = reno cubic bbr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查看内核模块是否加载&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ lsmod &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep bbr
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/centoskernrlup/centoskernrlup07.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;到这里，基本上就成功了！&lt;/p&gt;
&lt;h3 id=&#34;最后&#34;&gt;最后&lt;/h3&gt;
&lt;p&gt;其实大家觉得这样很麻烦，也可以去网上找一键脚本。但是我觉得这并不是很好的习惯，不能对脚本产生过度依赖，除非你是买一台vps小鸡当玩具玩，否则千万不要用脚本，更不要在生产环境用这种一键脚本。很多人连一键脚本的内容都没瞟一眼，在搜索引擎找到后，直接就运行，造成重启后开不了机的，也大有人在！
&lt;strong&gt;我不是说不能用所谓的一键脚本，我也经常用。我的观点是，不应该对一键脚本产生过度依赖，同时尽量不要在生产环境用！&lt;/strong&gt;
如果可以，也可以看一看哪些写的比较好的脚本，多研究研究也是不错的，“先懂后懒”嘛！&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/linux/" term="Linux" label="Linux" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/centos/" term="CentOS" label="CentOS" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/bbr/" term="BBR" label="BBR" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">在虚拟机中安装ArchLinux(UEFI)</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2020/helloarchlinux/" />
            <id>https://blog.besscroft.com/tech/2020/helloarchlinux/</id>
            <updated>2021-08-03T17:32:40&#43;08:00</updated>
            <published>2020-01-31T11:25:13&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">前言 关于操作系统的选择，我还是喜欢把Windows 10作为Host OS，把其它的作为……</summary>
            
                <content type="html">&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;关于操作系统的选择，我还是喜欢把Windows 10作为&lt;strong&gt;Host OS&lt;/strong&gt;，把其它的作为&lt;strong&gt;Guest OS&lt;/strong&gt;，比如一些Linux发行版openSUSE、Ubuntu等，以及用作其它用途的系统。比如我喜欢把迅雷等软件放在虚拟机的Windows系统里面(迅雷之类的软件感觉就是毒瘤，但有时候又需要用，别跟我说还有很多替代软件，我用的也不只是迅雷哦😅)。至于为什么要写这篇文章，因为我身边用ArchLinux的人慢慢地变多了起来，不过相对于ArchLinux，我还是比较喜欢Ubuntu啊😄&lt;/p&gt;
&lt;p&gt;ArchLinux有一个与众不同的地方，初始安装的Arch只是一个基本系统，随后用户可以根据自己的喜好安装需要的软件并配置成符合自己理想的系统。很多用户喜欢ArchLinux的原因就是，“以用户为中心”等的&lt;a href=&#34;https://wiki.archlinux.org/index.php/Arch_Linux_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)&#34;&gt;Arch之道&lt;/a&gt;。如果您觉得安装ArchLinux之流已经满足不了你的折腾需求了，可以尝试&lt;a href=&#34;https://en.wikipedia.org/wiki/Linux_From_Scratch&#34;&gt;LFS&lt;/a&gt;哦！&lt;/p&gt;
&lt;center&gt;&lt;b&gt;如果你是初次尝试Linux或者ArchLinux，我建议你从“业余环境”慢慢迁移到“工作环境”！&lt;/b&gt;&lt;/center&gt;
&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;
&lt;p&gt;在安装的过程中，无论遇到什么困难，我们都不要怕，解决问题本身就是一种乐趣。此时，你可以围绕着Google等搜索引擎来寻找解决方案，&lt;a href=&#34;https://bbs.archlinux.org/&#34;&gt;Arch官方论坛&lt;/a&gt;、&lt;a href=&#34;http://forum.ubuntu.org.cn/viewforum.php?f=155&#34;&gt;Ubuntu中文论坛Arch专区&lt;/a&gt;、&lt;a href=&#34;irc://irc.freenode.net/#archlinux-cn&#34;&gt;IRC频道:archlinux-cn&lt;/a&gt;等，都是不错的地方。好在，ArchLinux官方提供了非常详细的Wiki👍&lt;/p&gt;
&lt;h3 id=&#34;下载镜像&#34;&gt;下载镜像&lt;/h3&gt;
&lt;p&gt;你可以去&lt;a href=&#34;https://www.archlinux.org/download/&#34;&gt;官网下载&lt;/a&gt;，或者使用国内外的镜像源进行下载。不管从哪里下载，我都建议你&lt;strong&gt;验证GnuPG签名！！！&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;虚拟机准备&#34;&gt;虚拟机准备&lt;/h3&gt;
&lt;p&gt;新建虚拟机&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择&lt;code&gt;典型&lt;/code&gt;，然后下一步&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择&lt;code&gt;稍后安装操作系统&lt;/code&gt;，然后下一步&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后客户机操作系统选择&lt;code&gt;Linux&lt;/code&gt;，版本为&lt;code&gt;其他 Linux 5.x 或更高版本内核 64 位&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;虚拟机名称和位置请自定义吧，&lt;strong&gt;最好别用中文&lt;/strong&gt;(我没试过中文能不能成功，但最好别用)。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux05.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;磁盘大小我选择60GB，这个根据实际需求来就好啦！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux06.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;到这一步，我们选择&lt;code&gt;自定义硬件&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux07.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux08.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux09.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux10.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/helloarchlinux/helloarchlinux11.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后，选择完成即可！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux12.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择&lt;code&gt;编辑虚拟机设置&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux13.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择&lt;code&gt;选项&lt;/code&gt;--&amp;gt;&lt;code&gt;高级&lt;/code&gt;，然后选择&lt;code&gt;固件类型&lt;/code&gt;为&lt;code&gt;UEFI&lt;/code&gt;，然后点击确定。这一步非常重要，不能忽略！&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;p&gt;启动虚拟机之后，会看到如下画面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux14.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择第一个 &lt;code&gt;Arch Linux archiso x86_64 UEFI CD&lt;/code&gt;，按下回车键。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux15.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;过一会儿，就能进入U盘中的系统啦，也就是Live CD(据说有些Linux发行版，就只是在Live CD中运行的哦)。这一步可以输入&lt;code&gt;ls&lt;/code&gt;查看到当前目录下，有一个叫做&lt;code&gt;install.txt&lt;/code&gt;文件，它就是安装教程啦！可以输入命令 &lt;code&gt;cat i&lt;/code&gt; + tab 键自动补全后回车查看（&lt;code&gt;shift + pgup/pgdn&lt;/code&gt; 可上下翻页），也可用 &lt;code&gt;vim&lt;/code&gt; 或 &lt;code&gt;nano&lt;/code&gt; 查看。&lt;/p&gt;
&lt;h3 id=&#34;验证启动模式&#34;&gt;验证启动模式&lt;/h3&gt;
&lt;p&gt;刚才我们不是设置的UEFI启动嘛？这时候来验证一下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ls /sys/firmware/efi/efivars&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果有输出，确认启动模式为UEFI，就没问题啦。&lt;/p&gt;
&lt;h3 id=&#34;网络&#34;&gt;网络&lt;/h3&gt;
&lt;p&gt;确保系统启用了网络接口：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ip link&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;使用&lt;code&gt;dhcpcd&lt;/code&gt;联网：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# dhcpcd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;note info&#34;&gt;&lt;p&gt;-c 参数：用于指定 ping 的次数&lt;/p&gt;&lt;/div&gt;
&lt;h3 id=&#34;更新系统时间&#34;&gt;更新系统时间&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# timedatectl set-ntp true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;检查：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# timedatectl status&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;硬盘分区&#34;&gt;硬盘分区&lt;/h3&gt;
&lt;p&gt;到了重要的一步了，硬盘分区。先说说我的分区方案：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;分区&lt;/th&gt;
&lt;th&gt;分区类型&lt;/th&gt;
&lt;th&gt;大小&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;th&gt;挂载点&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;/dev/sda1&lt;/td&gt;
&lt;td&gt;EFI system partition&lt;/td&gt;
&lt;td&gt;512M&lt;/td&gt;
&lt;td&gt;EFI引导分区&lt;/td&gt;
&lt;td&gt;/mnt/boot&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/dev/sda2&lt;/td&gt;
&lt;td&gt;Linux swap&lt;/td&gt;
&lt;td&gt;4G&lt;/td&gt;
&lt;td&gt;交换分区&lt;/td&gt;
&lt;td&gt;swap&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/dev/sda3&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;剩下所有的&lt;/td&gt;
&lt;td&gt;系统根分区&lt;/td&gt;
&lt;td&gt;/mnt&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;查看硬盘的信息，核对无误后再上手操作：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# fdisk -l&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux16.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;开始分区&#34;&gt;开始分区&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# fdisk /dev/sda&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;进入分区程序。输入 &lt;strong&gt;m&lt;/strong&gt; 可以查看 fdisk 的帮助。&lt;strong&gt;在决定写入之前，所有的更改都不会被保存。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;创建分区表，输入 &lt;code&gt;g&lt;/code&gt; 创建一个全新的 GPT (GUID Partition Table) 分区表。&lt;/li&gt;
&lt;li&gt;输入 &lt;strong&gt;n&lt;/strong&gt; 建立第一个分区，这里我们创建的是sda1分区&lt;/li&gt;
&lt;li&gt;分区类型默认回车，分区序号默认回车，起始扇区默认回车，结束扇区输入 &lt;code&gt;+512M&lt;/code&gt; 回车。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux17.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;依此类推，我们还需要创建交换分区和根分区：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux18.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux19.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;修改分区类型&#34;&gt;修改分区类型&lt;/h4&gt;
&lt;p&gt;按 &lt;strong&gt;t&lt;/strong&gt; ，会询问需要修改的分区号，然后则是询问你要修改的类型（按 L 会列出各个分区类型的编号），编号 &lt;strong&gt;1&lt;/strong&gt; 是 &lt;strong&gt;EFI System Partition&lt;/strong&gt; ，编号 &lt;strong&gt;19&lt;/strong&gt; 是 &lt;strong&gt;swap&lt;/strong&gt; ，分区3的类型不做修改（默认的分区类型是 Linux Filesystem）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux20.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;最后，我们输入w，将改动输入到硬盘：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux21.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;此时，我们来确认下有没有生效：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# fdisk -l /dev/sda&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux22.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;格式化并设置swap分区&#34;&gt;格式化，并设置swap分区&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# mkfs.fat -F32 /dev/sda1&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# mkswap /dev/sda2&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# mkfs.ext4 /dev/sda3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;启用交换分区&#34;&gt;启用交换分区&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# swapon /dev/sda2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;查看是否启用成功&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# swapon --show&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;挂载分区&#34;&gt;挂载分区&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# mount /dev/sda3 /mnt&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# mkdir /mnt/boot&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# mount /dev/sda1 /mnt/boot&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后查看是否成功：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# lsblk&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux23.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;选择镜像源&#34;&gt;选择镜像源&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# vim /etc/pacman.d/mirrorlist&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后输入&lt;code&gt;:set nu&lt;/code&gt;，按下回车键后，让vim显示行号。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux24.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后找到第19行的China。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux25.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;输入大写字母&lt;code&gt;V&lt;/code&gt;，然后按&lt;code&gt;d&lt;/code&gt;进行剪切，然后把光标移到第6行，按&lt;code&gt;p&lt;/code&gt;进行粘贴。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux26.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后输入&lt;code&gt;:wq&lt;/code&gt;，回车，保存并退出。&lt;/p&gt;
&lt;h3 id=&#34;安装软件包&#34;&gt;安装软件包&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;pacstrap&lt;/code&gt; 脚本，安装 &lt;em&gt;base&lt;/em&gt; 软件包和 Linux 内核以及常规硬件的固件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# pacstrap /mnt base linux linux-firmware&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;注意，这里的&lt;code&gt;firmware&lt;/code&gt;，不要输成&lt;code&gt;fireware&lt;/code&gt;了😂&lt;/p&gt;
&lt;p&gt;安装网络管理器：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# pacstrap /mnt networkmanager&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;配置系统&#34;&gt;配置系统&lt;/h3&gt;
&lt;h4 id=&#34;生成挂载表&#34;&gt;生成挂载表&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;fstab&lt;/strong&gt; 文件可用于定义磁盘分区，包括各种块设备或者远程文件系统应该如何装入到文件系统。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# genfstab -U -p /mnt &amp;gt;&amp;gt; /mnt/etc/fstab&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;检查一下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# cat /mnt/etc/fstab&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;确认无误。&lt;/p&gt;
&lt;h3 id=&#34;arch-chroot&#34;&gt;arch-chroot&lt;/h3&gt;
&lt;p&gt;切换到安装的新系统&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# arch-chroot /mnt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这意味着在 &lt;code&gt;exit&lt;/code&gt; 之前，下面所有的操作都是在硬盘中的系统中运行，而非 U 盘。&lt;/p&gt;
&lt;h4 id=&#34;设置时区&#34;&gt;设置时区&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@archiso /&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;将硬件时钟设置为当前系统时间：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@archiso /&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# hwclock --systohc --utc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;安装vim：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pacman -S vim
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;配置系统语言环境&#34;&gt;配置系统语言环境：&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@archiso /&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# vim /etc/locale.gen&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux27.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;找到 &lt;code&gt;#en_US.UTF-8 UTF-8&lt;/code&gt; 这一行，光标移动到开头的 &lt;code&gt;#&lt;/code&gt; ，然后输入 &lt;code&gt;x&lt;/code&gt; ，再键入 &lt;code&gt;:wq&lt;/code&gt; 保存并退出即可。同样的操作，把&lt;code&gt;zh_CN.UTF-8 UTF-8&lt;/code&gt;也整一个。&lt;/p&gt;
&lt;p&gt;接着执行 &lt;code&gt;locale-gen&lt;/code&gt; 以生成 &lt;code&gt;locale&lt;/code&gt; 信息：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@archiso /&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# locale-gen&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;创建 &lt;code&gt;locale.conf&lt;/code&gt; 文件，并相应地设置 &lt;code&gt;LANG&lt;/code&gt; 变量：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@archiso /&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# echo LANG=en_US.UTF-8 &amp;gt; /etc/locale.conf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;note warning&#34;&gt;&lt;p&gt;在&lt;b&gt;/etc/locale.conf&lt;/b&gt;中设置的locale是全局有效的，所以只建议设置&lt;b&gt;LANG=en_US.UTF-8&lt;/b&gt;，也就是上门这条指令所设置的内容。因为在这里设置了&lt;b&gt;中文locale&lt;/b&gt;的话，会导致&lt;b&gt;tty&lt;/b&gt;乱码。但是你可以在图形界面中单独启用&lt;b&gt;中文locale&lt;/b&gt;。具体可以参考&lt;a href=&#34;https://wiki.archlinux.org/index.php/Localization/Simplified_Chinese_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)&#34;&gt;官方Wiki&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
&lt;h4 id=&#34;设置主机名&#34;&gt;设置主机名&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@archiso /&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# echo arch &amp;gt; /etc/hostname&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;你可以把&lt;code&gt;arch&lt;/code&gt;设置成自己的自定义主机名。&lt;/p&gt;
&lt;p&gt;添加信息：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@archiso /&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# vim /etc/hosts&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;按&lt;code&gt;i&lt;/code&gt;编辑内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Static table lookup for hostnames.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# See hosts(5) for details.&lt;/span&gt;
127.0.0.1   localhost
::1         localhost
127.0.1.1   arch.localdomain arch
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果你上面修改了&lt;code&gt;arch&lt;/code&gt;，这里的也得改哦，主机名可以自定义，但要保持一致！&lt;/p&gt;
&lt;p&gt;填写完成后就键入 &lt;code&gt;Esc&lt;/code&gt; 键，退回命令模式，再键入 &lt;code&gt;:wq&lt;/code&gt; 保存并退出。&lt;/p&gt;
&lt;p&gt;将 &lt;em&gt;NetworkManager&lt;/em&gt; 服务设为开机自启：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@archiso /&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# systemctl enable NetworkManager&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;设置-root-的密码&#34;&gt;设置 root 的密码&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# passwd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;输入后回车即可，输入时无显示，需输入两次。&lt;/p&gt;
&lt;h4 id=&#34;安装引导程序&#34;&gt;安装引导程序&lt;/h4&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;default – 默认加载的配置文件 (不含 .conf 后缀)。&lt;/li&gt;
&lt;li&gt;timeout – 启动选单的超时时间,如果不设置的话,启动选单只有在按键时才显示。&lt;/li&gt;
&lt;li&gt;editor - 是否允许用户编辑内核参数。 yes 是允许, no 是阻止。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@archiso /&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# bootctl --path=/boot install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;用 vim 编辑 &lt;code&gt;/boot/loader/loader.conf&lt;/code&gt; ：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@archiso /&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# vim /boot/loader/loader.conf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;default  arch
timeout  &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
console-mode max
editor   no
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;添加启动选项&#34;&gt;添加启动选项：&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@archiso /&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# vim /boot/loader/entries/arch.conf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;编辑如下内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;title   Arch Linux
linux   /vmlinuz-linux
initrd  /initramfs-linux.img
options &lt;span class=&#34;nv&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PARTUUID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;保存并退出编辑后，我们执行一下这么一行命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@archiso /&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# blkid -s PARTUUID -o value /dev/sda3 &amp;gt;&amp;gt; /boot/loader/entries/arch.conf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面的命令将会把根分区的UUID的值追加到 &lt;code&gt;/boot/loader/entries/arch.conf&lt;/code&gt; 的最后一行。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux28.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;此时，可能是这样的，你需要用 vim 编辑 &lt;code&gt;/boot/loader/entries/arch.conf&lt;/code&gt; ，将文件改成这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux29.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;重启系统&#34;&gt;重启系统&lt;/h4&gt;
&lt;p&gt;回退到Live CD环境&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@archiso /&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# exit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;执行重启命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# systemctl reboot&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;重启后会出现如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux30.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择第一个，&lt;code&gt;Arch Linux&lt;/code&gt;，进入系统，然后输入用户名和密码。&lt;/p&gt;
&lt;h4 id=&#34;新建普通用户&#34;&gt;新建普通用户&lt;/h4&gt;
&lt;p&gt;先安装sudo软件包：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@arch ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# pacman -S sudo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;配置 &lt;code&gt;sudoers&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@arch ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# EDITOR=vim visudo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;找到这一行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# %wheel ALL=(ALL) ALL&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;去掉找到的那一行开头的注释，即 &lt;strong&gt;#&lt;/strong&gt; 和 &lt;strong&gt;空格&lt;/strong&gt; ，不要误删掉 &lt;strong&gt;%&lt;/strong&gt; 哦。弄完之后保存即可:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;%wheel &lt;span class=&#34;nv&#34;&gt;ALL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=(&lt;/span&gt;ALL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ALL
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;note info&#34;&gt;&lt;p&gt;去掉注释的作用：取消注释以允许 wheel 组成员执行任何命令&lt;/p&gt;&lt;/div&gt;
添加一个 wheel 组普通用户:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@arch ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# useradd -m -g users -G wheel -s /bin/bash 你想要取的用户名&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;设置普通用户的密码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@arch ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# passwd 你取的用户名&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;vmware-相关软件包和服务&#34;&gt;VMware 相关软件包和服务&lt;/h4&gt;
&lt;p&gt;安装 &lt;code&gt;open-vm-tools&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@arch ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# sudo pacman -S open-vm-tools&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;将 &lt;code&gt;vmtoolsd&lt;/code&gt; 和 &lt;code&gt;vmware-vmblock-fuse&lt;/code&gt; 两个服务设为开机自启:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@arch ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# systemctl enable vmtoolsd vmware-vmblock-fuse&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;安装 &lt;code&gt;gtkmm3&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@arch ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# sudo pacman -S gtkmm3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;安装相关驱动:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@arch ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# sudo pacman -S xf86-input-vmmouse xf86-video-vmware mesa&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果你不明白这几步干嘛的，可以查阅&lt;a href=&#34;https://wiki.archlinux.org/index.php/VMware/Installing_Arch_as_a_guest_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#Open-VM-Tools&#34;&gt;官方Wiki&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装桌面环境&#34;&gt;安装桌面环境&lt;/h3&gt;
&lt;p&gt;到了这一步，很多人都会卡在KDE和GNOME之间怎么选择了。2个我都用过，也不好说谁更好用。单纯从使用习惯和风格来考虑。GNOME更像macos的那种风格，而KDE更像Windows的风格。&lt;/p&gt;
&lt;h4 id=&#34;1gnome桌面&#34;&gt;1.GNOME桌面&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@arch ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# sudo pacman -S xorg xorg-server xorg-xinit gnome gnome-extra&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@arch ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# systemctl enable gdm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;2kde桌面&#34;&gt;2.KDE桌面&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@arch ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# sudo pacman -S xorg plasma-meta&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;3lightdm&#34;&gt;3.LightDM&lt;/h4&gt;
&lt;p&gt;可以选择用LightDM替换GNOME&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@arch ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# sudo pacman -S lightdm lightdm-gtk-greeter&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@arch ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# systemctl disable gdm&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@arch ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# systemctl enable lightdm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;重启系统，选择 Gnome on Xorg 启动。&lt;/p&gt;
&lt;p&gt;同时，发现启动界面有两个重复的 Gnome 选项，解决方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@arch ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# sudo mv /usr/share/wayland-sessions/gnome.desktop /usr/share/wayland-sessions/gnome.desktop.bak&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;完善显卡驱动可选&#34;&gt;完善显卡驱动(可选)&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;admin@arch ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# sudo pacman -S xf86-video-intel intel-media-driver vulkan-intel xf86-video-amdgpu xf86-video-ati mesa-vdpau vulkan-radeon&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;显示管理器&#34;&gt;显示管理器&lt;/h3&gt;
&lt;p&gt;安装 &lt;code&gt;sddm&lt;/code&gt; ：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;admin@arch ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# sudo pacman -S sddm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;将 &lt;code&gt;sddm&lt;/code&gt;服务设为开机自启：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;admin@arch ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# systemctl enable sddm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;重启虚拟机：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;admin@arch ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# systemctl reboot&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;重启后，即可进入图形系统。&lt;/p&gt;
&lt;h2 id=&#34;安装完之后&#34;&gt;安装完之后&lt;/h2&gt;
&lt;h3 id=&#34;安装终端&#34;&gt;安装终端&lt;/h3&gt;
&lt;p&gt;按下 &lt;code&gt;Ctrl + Alt + F2&lt;/code&gt; 切换至 &lt;code&gt;tty2&lt;/code&gt; ，登录，然后输入命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;root@arch ~&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# sudo pacman -S deepin-terminal&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后按下 &lt;code&gt;Ctrl + Alt + F1&lt;/code&gt; 切换至桌面环境。&lt;/p&gt;
&lt;h3 id=&#34;yay&#34;&gt;yay&lt;/h3&gt;
&lt;p&gt;对于 Arch Linux，最具特色也是最强大的莫过于它丰富的 AUR (Arch User Repository)，而 yay 就是一个安装这个仓库的软件的便捷工具。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ git clone https://aur.archlinux.org/yay.git
$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; yay
$ makepkg -si
$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ..
$ rm -rf yay
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;一些工具&#34;&gt;一些工具&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo pacman -S git vim wget curl ntfs-3g exfat-utils p7zip unzip unrar
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;安装chromium&#34;&gt;安装chromium&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo pacman -S chromium
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;安装中文字体&#34;&gt;安装中文字体&lt;/h3&gt;
&lt;p&gt;打开终端，执行以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo pacman -S base-devel git
$ git clone https://aur.archlinux.org/noto-fonts-sc.git
$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; noto-fonts-sc
$ makepkg -si
$ sudo pacman -S noto-fonts-emoji
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面的命令可能需要代理。。。&lt;/p&gt;
&lt;h3 id=&#34;安装-shadowsocks-qt5&#34;&gt;安装 shadowsocks-qt5&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo pacman -S shadowsocks-qt5
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;安装文件管理器&#34;&gt;安装文件管理器&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo pacman -S dolphin
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;安装归档管理器&#34;&gt;安装归档管理器&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo pacman -S p7zip unrar zip unzip engrampa
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后，其它的自己去diy吧😀&lt;/p&gt;
&lt;h2 id=&#34;arch信仰&#34;&gt;Arch信仰&lt;/h2&gt;
&lt;p&gt;安装&lt;code&gt;neofetch&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo pacman -S neofetch
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后在终端输入：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ neofetch
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;呐：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/helloarchlinux/helloarchlinux31.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/" term="虚拟机" label="虚拟机" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/archlinux/" term="ArchLinux" label="ArchLinux" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/uefi%E5%90%AF%E5%8A%A8/" term="UEFI启动" label="UEFI启动" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/linux/" term="Linux" label="Linux" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">GPG与在GitHub上使用GPG</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2020/gpg/" />
            <id>https://blog.besscroft.com/tech/2020/gpg/</id>
            <updated>2021-08-03T17:31:30&#43;08:00</updated>
            <published>2020-01-30T10:29:32&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">GPG与在GitHub上使用GPG 基本过程 生成自己的GPG密钥 关联GPG公钥与Git……</summary>
            
                <content type="html">&lt;h2 id=&#34;gpg与在github上使用gpg&#34;&gt;GPG与在GitHub上使用GPG&lt;/h2&gt;
&lt;h3 id=&#34;基本过程&#34;&gt;基本过程&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;生成自己的&lt;code&gt;GPG&lt;/code&gt;密钥&lt;/li&gt;
&lt;li&gt;关联&lt;code&gt;GPG&lt;/code&gt;公钥与&lt;code&gt;Github&lt;/code&gt;账户&lt;/li&gt;
&lt;li&gt;设置利用&lt;code&gt;GPG&lt;/code&gt;私钥对&lt;code&gt;commit&lt;/code&gt;进行签名&lt;/li&gt;
&lt;li&gt;可选步骤：信任&lt;code&gt;Github&lt;/code&gt;的&lt;code&gt;GPG&lt;/code&gt;密钥&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安装&#34;&gt;安装&lt;/h3&gt;
&lt;p&gt;使用&lt;code&gt;GitHub&lt;/code&gt;的话，当然得用&lt;code&gt;Git&lt;/code&gt;了。我主要&lt;code&gt;在Windows10&lt;/code&gt;系统中使用&lt;code&gt;GitHub&lt;/code&gt;，而在&lt;code&gt;openSUSE&lt;/code&gt;中，很少使用。而在&lt;code&gt;Windows&lt;/code&gt;平台的&lt;code&gt;Git&lt;/code&gt;发行版中，自带了&lt;code&gt;GPG&lt;/code&gt;。打开&lt;code&gt;Git Bash&lt;/code&gt;，在终端输入&lt;code&gt;pgp --version&lt;/code&gt;，就可以看到一些版本信息了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ gpg --version

gpg &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;GnuPG&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 2.2.19-unknown
libgcrypt 1.8.5
Copyright &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;C&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2019&lt;/span&gt; Free Software Foundation, Inc.
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;但是！！！GPG是有多个版本的，你可以去查询相关的&lt;a href=&#34;https://en.wikipedia.org/wiki/Man_page&#34;&gt;Wiki&lt;/a&gt;，不同版本的GPG，可能密钥生成命令是不同的！&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;生成gpg密钥密钥对&#34;&gt;生成GPG密钥密钥对&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;如果使用的是 2.1.17 或更高版本，复制以下命令粘贴到Git终端以生成 GPG 密钥对。(我的是2.2.19版本)：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ gpg --full-generate-key
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果你的版本没有达到2.1.17或更高版本，那么这个命令可能是无效的。请参考&lt;a href=&#34;https://help.github.com/cn/github/authenticating-to-github/generating-a-new-gpg-key&#34;&gt;官方文档&lt;/a&gt;！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在看到提示时，你可以指定要生成的密钥类型，或按 Enter 键接受默认的 RSA and RSA。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;GitHub有支持的GPG密钥算法如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RSA&lt;/li&gt;
&lt;li&gt;ElGamal&lt;/li&gt;
&lt;li&gt;DSA数字签名算法&lt;/li&gt;
&lt;li&gt;ECDH&lt;/li&gt;
&lt;li&gt;ECDSA&lt;/li&gt;
&lt;li&gt;EdDSA&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;然后输入所需的密钥长度。 Your key must be at least 4096 bits.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入密钥的有效时长。 按 Enter 键将指定默认选择，表示该密钥不会过期。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;这一步的Enter和数字0都表示不会过期。输入其它数字表示天数，字母w表示星期，m表示月份，y表示年份。如3m表示有效期3个月，依此类推，我英语不太好，希望我没说错！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;输完之后，会让你确认一遍。&lt;/li&gt;
&lt;li&gt;然后会让你输入三项东西&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;Real name: 这里填个人信息&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;随便填
Email address: 这里必须填 GitHub 帐户的经过验证的电子邮件地址
Comment: 随便填，如：mygpg
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;按下回车之后，就会让你设置GPG的安全密码了，先别说密码复不复杂，自己先给记住了哈！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最后会输出一些信息，记得保存，不过，你也可以使用如下命令来查看：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ gpg --list-secret-keys --keyid-format LONG
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;为了方便，这里引用官方的案例，GPG密钥ID &lt;code&gt;3AA5C34371567BD2&lt;/code&gt;：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ gpg --list-secret-keys --keyid-format LONG
/Users/hubot/.gnupg/secring.gpg
------------------------------------
sec   4096R/3AA5C34371567BD2 2016-03-10 &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;expires: 2017-03-10&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
uid                          Hubot 
ssb   4096R/42B317FD4BA89E7A 2016-03-10
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;粘贴下面的文本（替换为您要使用的 GPG 密钥 ID）。 在此例中，GPG 密钥 ID 是 &lt;code&gt;3AA5C34371567BD2&lt;/code&gt;：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ gpg --armor --export 3AA5C34371567BD2
&lt;span class=&#34;c1&#34;&gt;# 以 ASCII 封装格式打印 GPG 密钥 ID&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;复制 GPG 密钥，从 &lt;code&gt;-----BEGIN PGP PUBLIC KEY BLOCK-----&lt;/code&gt; 开始，到 &lt;code&gt;-----END PGP PUBLIC KEY BLOCK-----&lt;/code&gt; 结束。&lt;/li&gt;
&lt;li&gt;最后，将GPG密钥添加到GitHub账户。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;将gpg密钥添加到github账户&#34;&gt;将GPG密钥添加到GitHub账户&lt;/h3&gt;
&lt;p&gt;打开GitHub的设置，找到SSH and GPG keys这一项，添加一个新的GPG密钥，并将你刚才复制的密钥粘贴进去。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/gpg/gpg01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2020/gpg/gpg02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后就大功告成啦！&lt;/p&gt;
&lt;h3 id=&#34;利用gpg私钥对git-commit进行签名&#34;&gt;利用GPG私钥对Git commit进行签名&lt;/h3&gt;
&lt;p&gt;首先，需要让Git知道签名所用的GPG密钥ID：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git config --global user.signingkey {key_id}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后，在每次commit的时候，加上-S参数，表示这次提交需要用GPG密钥进行签名：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git commit -S -m &amp;quot;...&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你觉得每次都需要手动加上-S有些麻烦，可以设置Git为每次commit自动要求签名：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git config --global commit.gpgsign true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但不论是否需要手动加上-S，commit时都会弹出对话框，需要你输入该密钥的密码，以判断是否为本人操作。
至于其它的进阶玩法，自行Google去吧！&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/gpg/" term="GPG" label="GPG" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/github/" term="GitHub" label="GitHub" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/git/" term="Git" label="Git" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">2019年终总结</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/life/2019/2019year-end/" />
            <id>https://blog.besscroft.com/life/2019/2019year-end/</id>
            <updated>2021-08-03T17:22:55&#43;08:00</updated>
            <published>2019-12-31T21:12:40&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">美丽的灵魂成就美丽的人生 —— 《美丽人生》豆瓣短评 过去 9102年马上就要结束了，回过头……</summary>
            
                <content type="html">&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2019/2019year-end/2019year-end_p1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;美丽的灵魂成就美丽的人生    ——  《美丽人生》豆瓣短评&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;过去&#34;&gt;过去&lt;/h3&gt;
&lt;p&gt;9102年马上就要结束了，回过头来看这一年，又完成了哪些目标？经历了哪些挫折？在人生的十字路口我做了怎样的选择？又学到了哪些新知识、又看了哪些书？&lt;/p&gt;
&lt;p&gt;先看看年初立的flag：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 公众号坚持每周都发布原创文章&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; GitHub上完成自己的一些项目(尽管可能并没有什么实际用处，但是需要练手)&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 少玩游戏少熬夜&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 学习或了解一门新的编程语言(这里有歧义，算作没完成吧)&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 从入门到精通并不弃坑的学习C++(先把Java搞好，Java真香)&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 坚持健身&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 拥有自己的小程序&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 考试不挂科&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 学习UE4&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 完成以上所有的计划&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;嗯，😥真是不堪入目，今年看起来似乎很失败。了解我的小伙伴，应该知道我在很早之前就接触Java这门语言了。但是在去年写年终总结时，因为对游戏开发很感兴趣，所以当时决定选择游戏开发来作为新一年的目标。但是！！！在我发表之后不久，在一些大佬的劝说下(洗脑)，决定就往Java发展，目前正在学习JavaEE中。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不能影响你编程观点的语言，不值得你去学！——Alan Perlis&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为什么我最终还是选择了Java？实不相瞒，我最早接触的编程语言，就是Java。后来因为种种原因，对Java的了解越来越多，也越来越喜欢这门语言。它从某种程度上对我的编程思想带来了影响，我也明白，编程语言学的越多，并不代表能力越强，更重要的应该是其中的“Programming paradigm”，即“编程范式”。&lt;/p&gt;
&lt;p&gt;所以从明年开始，决定专精Java这门语言，或许等到Java学的很好之后(也需要好几年)，才会再接触其它比较好的语言。某些语言，我也一直想去学，但是先认真地学“好”一门语言，并掌握编程思想才是我应该做的，不能“急功近利”。&lt;/p&gt;
&lt;p&gt;在今年，我了解并学习了很多新知识，不知道为什么，学习的速度跟以前比越来越快了，但是发现自己要学的东西越来越多了，不过我不会停止学习的。今年11月份的时候，一直在犹豫怎么选择以后的路(短期的)，最后参考一些前辈的经历，并结合自己的实际情况，决定选择培训。目前在武汉千峰培训JavaEE，每天在学习我喜欢的知识，感觉过的很充实。我也很感谢家人对我的支持，成功路上真的离不开家人的支持(虽然目前还没成功)。&lt;/p&gt;
&lt;p&gt;最后，说好的要定期更新文章，但是很多时候真的不知道写啥，我觉得这跟我的知识储备还是有关，毕竟不想太水文章。但是，我这一年来，至少做到了坚持做markdown笔记，并且我决定，将这个好习惯保持下去！&lt;/p&gt;
&lt;h3 id=&#34;未来&#34;&gt;未来&lt;/h3&gt;
&lt;p&gt;那么2020年，也应该立新的flag了！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;学好Java，以及相关的一些技术。&lt;/li&gt;
&lt;li&gt;找一份自己喜欢的编程工作！&lt;/li&gt;
&lt;li&gt;少玩游戏少熬夜。&lt;/li&gt;
&lt;li&gt;坚持健身。&lt;/li&gt;
&lt;li&gt;继续坚持做笔记。&lt;/li&gt;
&lt;li&gt;精通Linux的日常使用以及掌握Linux平台的开发(以Java为主)&lt;/li&gt;
&lt;li&gt;写一款自己的主题或web项目(在培训机构的不算数)&lt;/li&gt;
&lt;li&gt;积极的拥抱开源。&lt;/li&gt;
&lt;li&gt;学习或了解一项新技术&lt;/li&gt;
&lt;li&gt;成立自己的小团队，或者找到一群有共同理想目标的人&lt;/li&gt;
&lt;li&gt;完成以上所有的计划，最好能脱单！&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后，祝大家在2020能够找到自己的方向或目标，并不断地努力下去！&lt;/p&gt;
&lt;center&gt;&lt;b&gt;I shall rise oh well rise again and agian.&lt;/b&gt;&lt;/center&gt;
```
public class Hello{
	public class void main(String[] args) {
    	System.out.println(&#34;你好，2020!&#34;);
    }
}
```
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E7%94%9F%E6%B4%BB/" term="生活" label="生活" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/" term="年终总结" label="年终总结" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">在VirtualBox上安装Android-X86</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2019/android-for-virtualbox/" />
            <id>https://blog.besscroft.com/tech/2019/android-for-virtualbox/</id>
            <updated>2021-08-03T17:24:50&#43;08:00</updated>
            <published>2019-08-17T10:50:49&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">对于Android开发来说，尤其是新手(没错，我自己就是noob😥)，有很多种开发调……</summary>
            
                <content type="html">&lt;p&gt;对于&lt;code&gt;Android&lt;/code&gt;开发来说，尤其是新手(没错，我自己就是&lt;code&gt;noob&lt;/code&gt;😥)，有很多种开发调试的方案。比如&lt;code&gt;Genymotion+VirtualBox&lt;/code&gt;搭配方案(在我的笔记本上这种方案性能最低，可能因配置而异)、直接用&lt;code&gt;VirtualBox&lt;/code&gt;安装&lt;code&gt;Android-X86&lt;/code&gt;的&lt;code&gt;iso&lt;/code&gt;，或者是直接在&lt;code&gt;Android Studio&lt;/code&gt;里面调试等等。本文介绍的是直接用&lt;code&gt;VirtualBox&lt;/code&gt;安装&lt;code&gt;Android-X86&lt;/code&gt;，虽然是在虚拟机中安装，但是也会有很多不可避免的坑！！！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/android-for-virtualbox/android-for-virtualbox025.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;准备&#34;&gt;准备&lt;/h2&gt;
&lt;p&gt;首先，我们要准备&lt;code&gt;VirtualBox&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;官网👉：https://www.virtualbox.org/wiki/Downloads&lt;/p&gt;
&lt;p&gt;然后下载&lt;code&gt;Android-X86&lt;/code&gt;的&lt;code&gt;iso&lt;/code&gt;，这是一个将&lt;a href=&#34;https://source.android.com/&#34;&gt;Android开源项目&lt;/a&gt;移植到x86平台的项目：&lt;/p&gt;
&lt;p&gt;官网👉：https://www.android-x86.org/download&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注：本文章同样适用于PhoenixOS系统！&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;
&lt;p&gt;准备好之后，我们安装完并打开&lt;code&gt;VirtualBox&lt;/code&gt;，找到如图所示的&lt;code&gt;新建&lt;/code&gt;按钮(不同版本可能界面稍有不同，但是明白要干什么就行了):&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后设置相应的信息，注意文件夹就是虚拟机文件存放位置，建议不要用默认的。名称随便取，类型选&lt;code&gt;Linux&lt;/code&gt;，版本选&lt;code&gt;Other Linux&lt;/code&gt;，至于是&lt;code&gt;32位&lt;/code&gt;还是&lt;code&gt;64位&lt;/code&gt;，就看你下载的&lt;code&gt;iso&lt;/code&gt;是多少位的了。然后点击下一步。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后分配内存，这个看电脑本身的内存多大再酌情配置，然后点击下一步。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后选择&lt;code&gt;现在创建虚拟硬盘&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后选择VDI，点击下一步。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox006.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择动态分配，然后点击下一步(当然，硬盘空间大的请随意)。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox007.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;根据实际情况来配置虚拟硬盘的大小，硬盘空间大的请随意，然后点击创建。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox008.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后找到我们刚才创建好的&lt;code&gt;Android_test&lt;/code&gt;，点击设置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox009.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后点击显示-调整显存大小-启用硬件加速里面的3D加速。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox010.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择存储-点击盘片-分配一个光驱，就是把你下载的&lt;code&gt;Android-X86&lt;/code&gt;的&lt;code&gt;iso&lt;/code&gt;添加进去。然后点击ok。&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;p&gt;当鼠标进入虚拟机窗口移不出来时，按下键盘右边的Ctrl(唱、跳、Rap、篮球😀)即可，vm虚拟机是Ctrl+Alt。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox011.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;双击我们创建好的虚拟机。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox012.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择&lt;code&gt;Advanced options...&lt;/code&gt;，然后&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox013.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择&lt;code&gt;Auto_Installation&lt;/code&gt;，这里为什么建议大家选择自动安装呢？因为我们再“这个”虚拟机中只分配了一个虚拟硬盘，而且并不大，所以没必要分区。而且这样也最快，能保证新手在不太了解的情况下不出错。选择这一项之后，按下回车键。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox014.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择yes！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox015.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;耐心等待！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox016.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择Reboot以重启。&lt;/p&gt;
&lt;h2 id=&#34;划重点&#34;&gt;划重点&lt;/h2&gt;
&lt;p&gt;在重启之后，会回到开始的位置&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox017.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后我们将其强制退出！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox018.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后在设置里面，把iso的盘片移除，免得开机时加载盘片去了。然后再重新双击启动！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox019.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后选择&lt;code&gt;Android-x86 8.1-r2&lt;/code&gt;，&lt;strong&gt;千万别手贱按了回车&lt;/strong&gt;，通过下面的帮助信息得知，我们要按下&lt;code&gt;E键&lt;/code&gt;，进入编辑页面.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox020.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后在&lt;code&gt;kernel&lt;/code&gt;哪里，同样的按下&lt;code&gt;E键&lt;/code&gt;，进入编辑页面&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox021.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;移动光标，找到图中的&lt;code&gt;quiet&lt;/code&gt;这个词。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox022.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;把&lt;code&gt;quiet&lt;/code&gt;改为&lt;code&gt;nomodeset xforcevesa&lt;/code&gt;，然后按下回车键，再按下键盘上的&lt;code&gt;B键&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox023.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后你就会看到Android的字母了，慢慢等待即可！后面的就不说了，等到了“开机”，应该就自己会玩了，跟用手机也区别不大！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注：每次开机都需要这一步操作，如果你不想这么做，请自行Google！&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;问题详解&#34;&gt;问题详解&lt;/h2&gt;
&lt;p&gt;这时候来给大家解释一下，为什么刚才在进入系统之前要修改某些参数！转化成问题，也就是：为什么部分电脑或者虚拟机无法启动Android-x86系统的图形界面？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/android-for-virtualbox/android-for-virtualbox024.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;先来看一张图，我们知道，它是基于Linux内核的，就跟大多数人安装Linux时需要禁用独显一样，你在安装Android-x86时，需要告诉内核，不要设置图形分辨率。&lt;/p&gt;
&lt;p&gt;那么，刚才的三个步骤，分别是在干什么呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;删除&lt;code&gt;quiet&lt;/code&gt;，删除之后可以查看内核消息。&lt;/li&gt;
&lt;li&gt;添加&lt;code&gt;nomodeset&lt;/code&gt;参数，禁用“内核模式设置”(告诉内核不要设置图形分辨率，让X代替)。&lt;/li&gt;
&lt;li&gt;添加&lt;code&gt;xforcevesa&lt;/code&gt;参数，强制使用X的VESA驱动程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;VESA&lt;/strong&gt;是一个支持大部分显卡的通用驱动，但不提供任何2D和3D加速功能。要充分发挥显卡性能，需安装&lt;strong&gt;相应的厂商驱动程序&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;nVidia用户，可以参考ArchLinux的内核模式设置:https://wiki.archlinux.org/index.php/Kernel_mode_setting&lt;/p&gt;
&lt;p&gt;同时，你可以了解HybridGraphics:https://help.ubuntu.com/community/HybridGraphics&lt;/p&gt;
&lt;p&gt;然后查看项目官方的wiki(必要的):https://www.android-x86.org/documentation/graphic_card.html&lt;/p&gt;
&lt;p&gt;以及issues:https://github.com/openthos/system-analysis/issues/23&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/android/" term="Android" label="Android" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">HP暗影精灵3黑苹果基本完工</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2019/hpomen3hackintosh/" />
            <id>https://blog.besscroft.com/tech/2019/hpomen3hackintosh/</id>
            <updated>2021-08-03T17:28:36&#43;08:00</updated>
            <published>2019-07-17T17:42:47&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">闲暇之余，又一次给暗影精灵3，装上了黑苹果(MacOS 10.14.6)。实现完美电源……</summary>
            
                <content type="html">&lt;p&gt;闲暇之余，又一次给暗影精灵3，装上了黑苹果(MacOS 10.14.6)。实现完美电源管理，以及不插电开机(暗影精灵系列的朋友，装过黑苹果的应该知道意味着什么)。并将efi以及补丁发布出来，以便相同的笔记本可以安装。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/hpomen3hackintosh/img01.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;配置&#34;&gt;配置&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;产品名称暗影精灵3&lt;/th&gt;
&lt;th&gt;OMEN by HP Laptop 15-ce0xx&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;BIOS&lt;/td&gt;
&lt;td&gt;F.20 Rev.A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;处理器&lt;/td&gt;
&lt;td&gt;Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;独立显卡&lt;/td&gt;
&lt;td&gt;NVIDIA GeForce GTX 1050&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;显卡&lt;/td&gt;
&lt;td&gt;Intel(R) HD Graphics 630&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;声卡&lt;/td&gt;
&lt;td&gt;ALC295&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;硬盘&lt;/td&gt;
&lt;td&gt;HP SSD EX950 512G、HGST 1T&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;没问题的&#34;&gt;没问题的&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;声卡正常，键盘可以调声音&lt;/li&gt;
&lt;li&gt;摄像头正常&lt;/li&gt;
&lt;li&gt;触摸板正常&lt;/li&gt;
&lt;li&gt;睡眠和唤醒正常，合上盖子再打开也正常，我不知道白苹果是怎样的，但是我试了很多次，没发现问题。&lt;/li&gt;
&lt;li&gt;电池正常&lt;/li&gt;
&lt;li&gt;有线网卡正常&lt;/li&gt;
&lt;li&gt;亮度正常，但是不能用键盘调整，在设置里面可以调整（我得再去爪巴帖子了😓&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;无效功能&#34;&gt;无效功能&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;独显因为不能驱动，所以屏蔽&lt;/li&gt;
&lt;li&gt;蓝牙&lt;/li&gt;
&lt;li&gt;WiFi  :(&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;一些参考教程&#34;&gt;一些参考教程&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.besscroft.com/tech/2019/clover.html&#34;&gt;黑苹果教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.daliansky.net/macOS-Mojave-10.14.6-18G87-Release-version-with-Clover-5033-original-image.html&#34;&gt;【黑果小兵】macOS Mojave 10.14.6 18G87 正式版 with Clover 5050原版镜像[双EFI双平台终极版]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;远景论坛&lt;a href=&#34;http://bbs.pcbeta.com/viewthread-1778499-1-1.html&#34;&gt;修改dsdt实现电量显示方法（整理修改已有帖子）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;tonymacx86&lt;a href=&#34;https://www.tonymacx86.com/threads/solved-hp-omen-15-dc-battery-error.263814/#post-1841023&#34;&gt;HP OMEN 15-dc电池错误&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.tonymacx86.com/threads/guide-how-to-patch-dsdt-for-working-battery-status.116102/&#34;&gt;[指南]如何修补DSDT的工作电池状态&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;下载链接-镜像同步上传中&#34;&gt;下载链接 镜像同步上传中&lt;/h3&gt;
&lt;p&gt;👍&lt;strong&gt;镜像来自于@黑果小兵的博客找的链接，我自己用的也是这个镜像！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;迅雷离线下载：[&lt;a href=&#34;https://mirrors.dtops.cc/iso/MacOS/10.14/daliansky_macos/macOS%20Mojave%2010.14.6%2818G84%29%20Installer%20with%20Clover%205027.dmg&#34;&gt;请点击下载&lt;/a&gt;] 感谢&lt;code&gt;@难忘情怀&lt;/code&gt;提供下载资源&lt;/p&gt;
&lt;p&gt;http下载链接:&lt;a href=&#34;https://mirrors.dtops.cc/iso/MacOS/daliansky_macos/&#34;&gt;请点击下载&lt;/a&gt; 感谢&lt;code&gt;@难忘情怀&lt;/code&gt;提供下载资源&lt;/p&gt;
&lt;p&gt;百毒云：链接: &lt;a href=&#34;https://pan.baidu.com/s/1yx7A_wlfepp6ybTCRcz4cg&#34;&gt;https://pan.baidu.com/s/1yx7A_wlfepp6ybTCRcz4cg&lt;/a&gt; 提取码: &lt;code&gt;qrwt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;MD5 (macOS Mojave 10.14.6(18G84) Installer with Clover 5027.dmg) = af934738cd02c4cefacf527d23532289&lt;/p&gt;
&lt;h3 id=&#34;致谢&#34;&gt;致谢&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;感谢各位大佬的开源。&lt;/li&gt;
&lt;li&gt;感谢远景论坛的各位大佬提供的教程，以及&lt;a href=&#34;https://github.com/daliansky&#34;&gt;黑果小兵&lt;/a&gt;的镜像。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;常见问题&#34;&gt;常见问题&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Q:如何进入BIOS或者设置启动项？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A:开机后按下ESC键，然后根据指引选择&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q:抹盘时失败&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A:看看是不是EFI的分区给的太小了，一般建议200M以上。这里尤其注意，有的人抹盘失败会导致Windows10进不去，我不知道原因是什么，但是建议在安装之前，多去看看别人怎么操作的，避免一些误区，同时：&lt;strong&gt;记得提前备份！！！记得提前备份！！！记得提前备份！！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q:安装时提示这个“安装 macOS xxxx”应用程序副本已损坏，不能用来安装macOS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A:原因是旧版macOS 安装镜像中的证书过期，并且苹果没有更新证书日期。你打开终端，改一下时间就好了：&lt;code&gt; date 0201010116&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;如果扬声器无法使用的解决方案&#34;&gt;🔊如果扬声器无法使用的解决方案&lt;/h3&gt;
&lt;p&gt;暗影精灵3的声卡是ALC295，找到我在repo中提供的&lt;code&gt;VoodooHDA-295.pkg&lt;/code&gt;，并安装它。我很懒，只提供了这一种方案，Google给您提供了更好的方案，只是看您怎么选了！&lt;/p&gt;
&lt;h3 id=&#34;联系我&#34;&gt;联系我&lt;/h3&gt;
&lt;p&gt;Email：besscroft#foxmail.com&lt;/p&gt;
&lt;p&gt;QQ群：821557332&lt;/p&gt;
&lt;p&gt;如果大家有一些建议，也欢迎反馈！&lt;/p&gt;
&lt;p&gt;👉GitHub:&lt;strong&gt;&lt;a href=&#34;https://github.com/besscroft/HP-OMEN-3-Hackintosh&#34;&gt;HP-OMEN-3-Hackintosh&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/" term="黑苹果" label="黑苹果" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E6%9A%97%E5%BD%B1%E7%B2%BE%E7%81%B53/" term="暗影精灵3" label="暗影精灵3" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/hp/" term="HP" label="HP" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Ubuntu安装记录</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2019/ubuntu/" />
            <id>https://blog.besscroft.com/tech/2019/ubuntu/</id>
            <updated>2021-08-03T17:30:36&#43;08:00</updated>
            <published>2019-07-04T15:56:15&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">一直以来，都是在虚拟机里面使用Linux系统，但随着使用需求的增加，于是直接在笔记本……</summary>
            
                <content type="html">&lt;p&gt;一直以来，都是在虚拟机里面使用Linux系统，但随着使用需求的增加，于是直接在笔记本中安装Ubuntu。基本上就是Windows 10 + Ubuntu18.04LTS双系统共存模式！&lt;/p&gt;
&lt;h2 id=&#34;浅谈&#34;&gt;浅谈&lt;/h2&gt;
&lt;p&gt;很多同学在虚拟机中安装Linux(实际上不仅限于Ubuntu)，都会觉得安装很简单，基本上就是一直点下一步之类的，当然了，ArchLinux之流除外哈。不是说ArchLinux不好用(我觉得过渡动画还比较流畅，速度也很快)，而是它的安装过程，感觉就是个过滤用户的阴谋😂&lt;/p&gt;
&lt;p&gt;既然要直接在笔记本上安装，那么，肯定会有不少坑的，而且还是双系统共存。最常见的就是分区和假死了吧(卡死在某一界面)。其它的诸如制作镜像，装驱动出现问题，点击现在重启卡死等。我在刚买我的暗影精灵3的时候，就尝试过双系统，然后，你懂的。我直接就留下了心里阴影，因为那时候没做备份，后来我备份的好习惯就是这么被逼出来的🙃&lt;/p&gt;
&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;
&lt;h3 id=&#34;电脑配置&#34;&gt;电脑配置&lt;/h3&gt;
&lt;p&gt;先介绍下我的电脑配置吧。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;产品名称 : OMEN by HP Laptop 15-ce0xx
BIOS : F.18-11/09/2018
内存总量 : 16 GB
处理器名称 : Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz
BIOS模式 : UEFI
当前系统 : Windows 10 家庭中文版 1903 版本18632
显卡 : NVIDIA GeForce GTX 1050
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;制作镜像&#34;&gt;制作镜像&lt;/h3&gt;
&lt;p&gt;在哪里下，应该就不用我废话了，我个人更喜欢👍&lt;a href=&#34;https://mirrors.tuna.tsinghua.edu.cn/&#34;&gt;清华大学开源软件镜像站&lt;/a&gt;，大家没下载的可以在这里下。如果是要像我一样，想当作主力系统来用的，就下Ubuntu 18.04.02LTS版本，LTS是官方长期维护的版本，更稳定，一直维护到2023年4月。如果你跟我一样，喜欢最新的事务，那么，Ubuntu 19.04是你不错的选择，自带的UI变漂亮了许多，但遗憾的是，它的支持生命周期只到2020年1月😥&lt;/p&gt;
&lt;p&gt;镜像制作工具，推荐&lt;a href=&#34;http://rufus.ie/&#34;&gt;Rufus&lt;/a&gt;吧，简单制作个镜像而已，必须要花里胡哨的功能，而且差不多就1M大小，免安装！！！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/ubuntu/ubuntu01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;选项基本跟我保持一致即可，尤其是簇大小，大家都习惯默认的，但是部分奇葩的U盘，默认分配单元大小是16K或者32K，可能会导致安装系统过程中，出现一些不必要的问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;然后，在Windows下分一个给Ubuntu用的分区出来，确保为为分配状态！！！&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;系统安装&#34;&gt;系统安装&lt;/h3&gt;
&lt;h4 id=&#34;bios设置&#34;&gt;BIOS设置&lt;/h4&gt;
&lt;p&gt;开机进入BIOS，hp暗影精灵是开机按F10，其它品牌请自行Google！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/ubuntu/ubuntu02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/ubuntu/ubuntu03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;如图，你需要将传统模式和安全启动模式(Secure Boot)都设置为禁用，然后把U盘的启动顺序调整到操作系统管理员的前面。如果你不禁用Secure Boot的话，Ubuntu系统将无法运行，不明白为什么的同学，自行Google！&lt;/p&gt;
&lt;h4 id=&#34;禁用n卡&#34;&gt;禁用N卡&lt;/h4&gt;
&lt;p&gt;然后重点来了！！！你这时候应该进入引导界面了，但是不要着急！！！把光标移到&lt;code&gt;Install Ubuntu&lt;/code&gt;，先别着急敲下回车键。先按下键盘上的字母键E，然后将&lt;code&gt;quiet splash --- &lt;/code&gt;更改为 &lt;code&gt;quiet splash nouveau.modeset=0&lt;/code&gt;，如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/ubuntu/ubuntu04.png&#34; alt=&#34;ubuntu04&#34;&gt;&lt;/p&gt;
&lt;p&gt;改为：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/ubuntu/ubuntu05.png&#34; alt=&#34;ubuntu05&#34;&gt;&lt;/p&gt;
&lt;p&gt;我在安装时忘记拍照了，这是在虚拟机中截的图，不过影响不大，只是用来参考的。改完之后，按下Ctrl+X或者F10，具体的那个界面下面会有显示的。&lt;/p&gt;
&lt;div class=&#34;note warning&#34;&gt;&lt;p&gt;为什么要大家这么做呢？因为自己安装过的朋友，遇到过最头疼的问题应该就是安装过程中卡死了，我曾经也遇到过！没错，就是从你开始安装，直到安装完毕进入Ubuntu的桌面为止，随时都有可能卡死。但是在虚拟机中并不会这样，我去Google查了一下，很多解释差不多是这个意思：Ubuntu是开源系统，但是Nvidia并没有将显卡驱动开源，所以Ubuntu内核中自带的Nvidia显卡驱动版本就没有特别新，就导致安装过程中会卡死。所以进行上面的设置后，禁止Ubuntu加载自带的N卡驱动，问题就解决了。玩过黑苹果的朋友门，应该也碰到过相同的问题吧。&lt;/p&gt;&lt;/div&gt;
&lt;h4 id=&#34;安装选项&#34;&gt;安装选项&lt;/h4&gt;
&lt;p&gt;只强调2件事，如果禁用N卡驱动之后，窗口变大的话，部分窗口被挤出屏幕，导致鼠标点不到按钮，可以按住Alt键然后用鼠标拖动窗口。其次，建议不要选择最小安装，这样以后你使用是，会少部分依赖库，给你造成麻烦(精通Linux的大神当我没说！)😋&lt;/p&gt;
&lt;h4 id=&#34;分区挂载&#34;&gt;分区挂载&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/ubuntu/ubuntu06.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;千万不要偷懒，一定要选择其它选项。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/ubuntu/ubuntu07.png&#34; alt=&#34;ubuntu07&#34;&gt;&lt;/p&gt;
&lt;p&gt;挂载分区，因为是UEFI启动模式，所以只少要4个分区，以我的为例，我分了100个G给Ubuntu，且我的运行内存为16G。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;分区类型&lt;/th&gt;
&lt;th&gt;挂载点&lt;/th&gt;
&lt;th&gt;大小&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;efi&lt;/td&gt;
&lt;td&gt;efi&lt;/td&gt;
&lt;td&gt;2046MB&lt;/td&gt;
&lt;td&gt;用于安装efi&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;swap&lt;/td&gt;
&lt;td&gt;swap&lt;/td&gt;
&lt;td&gt;16386MB&lt;/td&gt;
&lt;td&gt;交换分区&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ext4&lt;/td&gt;
&lt;td&gt;/home&lt;/td&gt;
&lt;td&gt;42859MB&lt;/td&gt;
&lt;td&gt;主目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ext4&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;46080MB&lt;/td&gt;
&lt;td&gt;根目录&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;传统的Boot为主分区，UEFI模式就选择逻辑分区，efi分区用来存储引导器，系统的启动文件等。我分配了2G，硬盘不大的400M左右也可以。&lt;/p&gt;
&lt;p&gt;swap分区选择主分区，这个交换分区就相当于是虚拟内存，一般设置为你的内存大小的同等大小，或者内存的2倍。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/home&lt;/code&gt;即主目录，也叫用户的宿主目录。用户登录系统后，所处的位置就是/home，通常用来保存用户文件。没错，什么图片啊、视频啊、你下载的东西啊，都是存在这里的，给多少自己看着办吧。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/&lt;/code&gt;即根目录，不要给太小，如果一共就四五十个G，至少也得给15G左右。&lt;/p&gt;
&lt;p&gt;最后，在下面的&lt;code&gt;安装启动引导器的设备&lt;/code&gt;那里，&lt;strong&gt;选择你刚才分出来的那个efi分区&lt;/strong&gt;(划重点，要考)，然后再点击&lt;code&gt;现在安装&lt;/code&gt;。然后后面的一堆设置可以按需求设置，然后，慢慢等。&lt;/p&gt;
&lt;h4 id=&#34;重点来了&#34;&gt;重点来了&lt;/h4&gt;
&lt;p&gt;这一步很重要，因为实际上整个安装过程并没有结束，你还是得提防Ubuntu有没有搞你。在安装完成之后，系统会提示&lt;code&gt;已安装完成，是否重启&lt;/code&gt;，这不废话吗，当然得选择&lt;code&gt;现在重启&lt;/code&gt;了(逃)。。。😐&lt;/p&gt;
&lt;p&gt;点击重启之后，拔掉U盘，然后&lt;strong&gt;在开机的品牌logo出现后，按一下、按一下、只按一下键盘左上角的ESC键&lt;/strong&gt;。开机的时候，都会出现品牌logo的吧？你看到它之后，按一下就行了。为了防止某些同学说他电脑开机不显示品牌logo，那好，你插上鼠标，等重启后屏幕亮了之后(屏幕是黑色时也有亮的情况，别跟我杠这些)，然后看着你的鼠标，鼠标等亮了之后，按一下ESC键。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/ubuntu/ubuntu08.png&#34; alt=&#34;ubuntu08&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;(图片来源于互联网，我没拍照，不过都差不多)&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;这时候出现的画面，就是&lt;code&gt;GRUB&lt;/code&gt;引导器，键盘选中&lt;code&gt;Ubuntu&lt;/code&gt;这一项，然后按下键盘字母&lt;code&gt;E&lt;/code&gt;键，是不是觉得刚才做过这步？是的，按下E之后，一样的操作。&lt;/p&gt;
&lt;p&gt;把光标移到&lt;code&gt;Install Ubuntu&lt;/code&gt;，先别着急敲下回车键。先按下键盘上的字母键E，然后将&lt;code&gt;quiet splash --- &lt;/code&gt;更改为 &lt;code&gt;quiet splash nouveau.modeset=0&lt;/code&gt;，如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/ubuntu/ubuntu04.png&#34; alt=&#34;ubuntu04&#34;&gt;&lt;/p&gt;
&lt;p&gt;改为：(只要让那一串代码变成下图这样，这串代码前面和后面不变，你不用管它是什么)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/ubuntu/ubuntu05.png&#34; alt=&#34;ubuntu05&#34;&gt;&lt;/p&gt;
&lt;p&gt;到这里，应该就可以正常地进入系统了。&lt;/p&gt;
&lt;h2 id=&#34;安装之后&#34;&gt;安装之后&lt;/h2&gt;
&lt;h3 id=&#34;更换镜像源&#34;&gt;更换镜像源&lt;/h3&gt;
&lt;p&gt;由于一系列总所周知的原因，我们需要更换镜像源为国内的源，我推荐使用&lt;a href=&#34;https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/&#34;&gt;清华大学的镜像源&lt;/a&gt;，其它源也可以用类似的方法添加。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;先备份好习惯！&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;打开编辑源列表：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo gedit /etc/apt/sources.list
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将文件内所有文件清空，然后将下列清华源全部copy进去：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse
# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse
# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse
# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse
# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse

# 预发布软件源，不建议启用
# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse
# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后用清华源更新一下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你不知道这两条命令干嘛的，请自行Google，按理说应该知道的！&lt;/p&gt;
&lt;h3 id=&#34;安装nvidia驱动&#34;&gt;安装nVidia驱动&lt;/h3&gt;
&lt;h4 id=&#34;自动安装&#34;&gt;自动安装&lt;/h4&gt;
&lt;p&gt;推荐使用标准的Ubuntu仓库进行自动化安装，虽然版本不是最新的，但是&lt;strong&gt;更稳定&lt;/strong&gt;！！！又不打游戏，用Linux一大原因不就是图个稳定嘛！&lt;/p&gt;
&lt;p&gt;删除现有的系统自带N卡驱动以及相关的所有配置文件等：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get --purge remove nvidia*
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;查看显卡设备，并显示系统推荐的驱动版本：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ubuntu-drivers devices
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装系统推荐的驱动：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ubuntu-drivers autoinstall
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;其它方案&#34;&gt;其它方案&lt;/h4&gt;
&lt;p&gt;自行Google好嘛，只让你看最稳定的方式，要追求刺激，可以自己去追求，我怕出了问题要来怪我！&lt;/p&gt;
&lt;p&gt;安装完之后，开机就不用再去设置了(重启后生效！)&lt;/p&gt;
&lt;h2 id=&#34;配置优化&#34;&gt;配置优化&lt;/h2&gt;
&lt;p&gt;到这里基本上就结束了，其它的使用，我可以给一些建议！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;安装中文输入法，如：&lt;code&gt;搜狗&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装浏览器，如：&lt;code&gt;chrome&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;彻底卸载办公软件Libreoffice，改用WPS等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;sudo apt remove libreoffice-calc	//卸载libreoffice表格
sudo apt remove libreoffice-draw	//卸载libreoffice绘图
sudo apt remove libreoffice-impress //卸载libreoffice幻灯片
sudo apt remove libreoffice-writer  //卸载libreoffice文档
sudo apt remove libreoffice*		//清理所有libreoffice相关
sudo apt purge libreoffice*			//清理libreoffice配置文件
sudo apt autoremove					//清理libreoffice配置文件
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;安装思源宋体等好看的字体&lt;/li&gt;
&lt;li&gt;UI透明化，配置终端(这个很重要)等。&lt;/li&gt;
&lt;li&gt;安装Steam，开始白给。&lt;/li&gt;
&lt;li&gt;安装一个好看的主题。&lt;/li&gt;
&lt;li&gt;安装网易云音乐等。&lt;/li&gt;
&lt;/ul&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/linux/" term="Linux" label="Linux" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">更换为Google Fonts思源宋体！</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2019/fonts/" />
            <id>https://blog.besscroft.com/tech/2019/fonts/</id>
            <updated>2021-04-11T11:49:11&#43;08:00</updated>
            <published>2019-07-01T15:14:24&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">对于中文书籍来说，宋体一直是正文印刷的标准字体，而不是目前电子显示屏上普遍的黑体，因……</summary>
            
                <content type="html">&lt;p&gt;对于中文书籍来说，宋体一直是正文印刷的标准字体，而不是目前电子显示屏上普遍的黑体，因为&lt;strong&gt;宋体的衬线更适合长时间阅读&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;本文是针对Hexo博客的NexT主题来设置的，不是这个的小伙伴们也可以参照着来看！&lt;/p&gt;
&lt;h3 id=&#34;修改字体&#34;&gt;修改字体&lt;/h3&gt;
&lt;h4 id=&#34;修改配置文件中的参数&#34;&gt;修改配置文件中的参数&lt;/h4&gt;
&lt;p&gt;修改配置文件&lt;code&gt;_config.yml&lt;/code&gt; ，找到&lt;code&gt;font&lt;/code&gt;将下列代码中红色的部分修改成绿色的部分即可。可以根据实际情况稍作修改！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;font:
&lt;span class=&#34;gd&#34;&gt;- enable: false
&lt;/span&gt;&lt;span class=&#34;gd&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;+ enable: true
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;&lt;/span&gt;
  # Uri of fonts host, e.g. //fonts.googleapis.com (Default).
  # Uri字体主机，例如//fonts.googleapis.com（默认）。
&lt;span class=&#34;gi&#34;&gt;+ host: https://fonts.loli.net
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;&lt;/span&gt;
  # Font options:字体选项：
  # `external: true` will load this font family from `host` above.
  # `family: Times New Roman`. Without any quotes.
  # `size: xx`. Use `px` as unit.

  # Global font settings used for all elements in &amp;lt;body&amp;gt;.
  # 用于&amp;lt;body&amp;gt;中所有元素的全局字体设置。
  global:
    external: true
&lt;span class=&#34;gi&#34;&gt;+   family: Noto Serif SC
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;&lt;/span&gt;    size:

  # Font settings for Headlines (H1, H2, H3, H4, H5, H6).
  # 标题的字体设置（H1，H2，H3，H4，H5，H6）。
  # Fallback to `global` font settings.
  # 回退到`global`字体设置。
  headings:
    external: true
&lt;span class=&#34;gi&#34;&gt;+   family: Noto Serif SC
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;&lt;/span&gt;    size:

  # Font settings for posts.帖子的字体设置
  # Fallback to `global` font settings.回退到`global`字体设置。
  posts:
    external: true
&lt;span class=&#34;gi&#34;&gt;+   family: Noto Serif SC
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;&lt;/span&gt;
  # Font settings for Logo.LOGO的字体设置。
  # Fallback to `global` font settings.回退到`global`字体设置。
  logo:
    external: true
&lt;span class=&#34;gi&#34;&gt;+   family: Noto Serif SC
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;&lt;/span&gt;    size:
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;修改配置文件&#34;&gt;修改配置文件&lt;/h4&gt;
&lt;p&gt;找到主题的&lt;code&gt;base.styl&lt;/code&gt;文件，具体位置为&lt;code&gt;~/blog/themes/next/source/css/_variables/base.styl&lt;/code&gt;,然后修改相关数据！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span class=&#34;gd&#34;&gt;-$font-family-monospace    = consolas, Menlo, $font-family-chinese, monospace
&lt;/span&gt;&lt;span class=&#34;gd&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;+$font-family-monospace    = consolas, Menlo, $font-family-base, monospace
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gd&#34;&gt;-$font-family-monospace    = get_font_family(&amp;#39;codes&amp;#39;), consolas, Menlo, $font-family-chinese, monospace if get_font_family(&amp;#39;codes&amp;#39;)
&lt;/span&gt;&lt;span class=&#34;gd&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;+$font-family-monospace    = get_font_family(&amp;#39;codes&amp;#39;), consolas, Menlo, $font-family-base, monospace if get_font_family(&amp;#39;codes&amp;#39;)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;自定义项目&#34;&gt;自定义项目&lt;/h3&gt;
&lt;h4 id=&#34;设置字体大小&#34;&gt;设置字体大小&lt;/h4&gt;
&lt;p&gt;如果你看不习惯默认(原来)的字体大小的话，你可以尝试修改它！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;// Font size
$font-size-base           = 14px	//改成你想要的即可！
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;设置字体颜色&#34;&gt;设置字体颜色&lt;/h4&gt;
&lt;p&gt;没错，你甚至可以设置不同的颜色！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;//修改字体颜色
body {
    color: &amp;lt;在这里填上你想要的颜色，如：#000&amp;gt;;	//别漏了分号！
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;note warning&#34;&gt;&lt;p&gt;本文参考自reuixiy的&lt;a href=&#34;https://io-oi.me/tech/noto-serif-sc-added-on-google-fonts.html#main&#34;&gt;Google Fonts已支持思源宋体！&lt;/a&gt;点击即可访问！&lt;/p&gt;&lt;/div&gt;</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/hexo/" term="Hexo" label="Hexo" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/google-fonts/" term="Google Fonts" label="Google Fonts" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">MarkDown写作的艺术</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2019/markdown/" />
            <id>https://blog.besscroft.com/tech/2019/markdown/</id>
            <updated>2021-04-11T11:52:45&#43;08:00</updated>
            <published>2019-06-26T16:20:34&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">先鸽🕊着...</summary>
            
                <content type="html">&lt;p&gt;先鸽🕊着...&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/markdown/" term="markdown" label="markdown" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">给你的博客Duang</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2019/duang/" />
            <id>https://blog.besscroft.com/tech/2019/duang/</id>
            <updated>2021-08-03T17:25:55&#43;08:00</updated>
            <published>2019-05-12T12:09:53&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">来过我博客的小可爱们应该会知道，五一期间我把博客重新弄了一遍。如果大家之前就来过我的……</summary>
            
                <content type="html">&lt;p&gt;来过我博客的小可爱们应该会知道，五一期间我把博客重新弄了一遍。如果大家之前就来过我的博客的话，应该会知道，现在的美观程度和特效，是之前远无法比拟的！那么我们来看看，这些特效是怎么Duang上去的呢😜&lt;/p&gt;
&lt;h3 id=&#34;添加结束标记&#34;&gt;添加结束标记&lt;/h3&gt;
&lt;p&gt;在文末添加自定义的结束标记，效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/duang/duang01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;新建布局模板文件 post-end-tag.swig，添加如下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-[]&#34; data-lang=&#34;[]&#34;&gt;&amp;lt;div&amp;gt;
  {% if not is_index %}
    &amp;lt;div style=&amp;quot;text-align:center;color:#bfbfbf;font-size:16px;&amp;quot;&amp;gt;
      &amp;lt;span&amp;gt;-------- 本文结束 &amp;lt;/span&amp;gt;
      &amp;lt;i class=&amp;quot;fa fa-{{ config.post_end_tag.icon }}&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
      &amp;lt;span&amp;gt; 感谢阅读 --------&amp;lt;/span&amp;gt;
    &amp;lt;/div&amp;gt;
  {% endif %}
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在文章布局模板中添加如下代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;{#####################}
{### END POST BODY ###}
{#####################}

&lt;span class=&#34;gi&#34;&gt;+{% if config.post_end_tag.enabled and not is_index %}
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;+	&amp;lt;div&amp;gt;
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;+		{% include &amp;#39;post-end-tag.swig&amp;#39; %}
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;+	&amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;+{% endif %}
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;&lt;/span&gt;	
 {% if theme.wechat_subscriber.enable and not is_index %}
   {% include &amp;#39;../_partials/post/wechat-subscriber.swig&amp;#39; %}
 {% endif %}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在站点配置文件末尾添加如下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-[]&#34; data-lang=&#34;[]&#34;&gt;post_end_tag:
  enabled: true  # 是否开启文末的本文结束标记
  icon: paw # 结束标记之间的图标
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;重新推送后即可在文末看到结束标记。&lt;/p&gt;
&lt;h3 id=&#34;为标签添加图标&#34;&gt;为标签添加图标&lt;/h3&gt;
&lt;p&gt;默认情况下标签前缀是 &lt;code&gt;#&lt;/code&gt; 字符，大家其实可以通过修改主题源码，将标签的字符前缀改为图标前缀，更改后效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/duang/duang02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;在文章布局模板中找到文末标签相关代码段，将 &lt;code&gt;#&lt;/code&gt; 换成 &lt;code&gt;&amp;lt;i class=&amp;quot;fa fa-tags&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&lt;/code&gt; 即可：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;  &amp;lt;footer class=&amp;#34;post-footer&amp;#34;&amp;gt;
    {% if post.tags and post.tags.length and not is_index %}
      &amp;lt;div class=&amp;#34;post-tags&amp;#34;&amp;gt;
        {% for tag in post.tags %}
&lt;span class=&#34;gd&#34;&gt;-         &amp;lt;a href=&amp;#34;{{ url_for(tag.path) }}&amp;#34; rel=&amp;#34;tag&amp;#34;&amp;gt;# {{ tag.name }}&amp;lt;/a&amp;gt;
&lt;/span&gt;&lt;span class=&#34;gd&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;+         &amp;lt;a href=&amp;#34;{{ url_for(tag.path) }}&amp;#34; rel=&amp;#34;tag&amp;#34;&amp;gt;&amp;lt;i class=&amp;#34;fa fa-tags&amp;#34;&amp;gt;&amp;lt;/i&amp;gt; {{ tag.name }}&amp;lt;/a&amp;gt;
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;&lt;/span&gt;        {% endfor %}
      &amp;lt;/div&amp;gt;
    {% endif %}
    ...
  &amp;lt;/footer&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;侧边栏放左边&#34;&gt;侧边栏放左边&lt;/h3&gt;
&lt;p&gt;侧边栏默认是在右边的，我怎么都看不习惯，总感觉有点别扭。那么，给整到左边就完事儿啦！&lt;/p&gt;
&lt;p&gt;在自定义样式文件中添加如下规则：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-[]&#34; data-lang=&#34;[]&#34;&gt;//侧边栏放在左边
.sidebar-toggle {
  left: 30px;
}

.sidebar {
  left: 0px;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;修改动效脚本代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;$(document)
  .on(&amp;#39;sidebar.isShowing&amp;#39;, function() {
    NexT.utils.isDesktop() &amp;amp;&amp;amp; $(&amp;#39;body&amp;#39;).velocity(&amp;#39;stop&amp;#39;).velocity(
&lt;span class=&#34;gd&#34;&gt;-     {paddingRight: SIDEBAR_WIDTH},
&lt;/span&gt;&lt;span class=&#34;gd&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;+     {paddingLeft: SIDEBAR_WIDTH},
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;&lt;/span&gt;      SIDEBAR_DISPLAY_DURATION
    );
  })
  .on(&amp;#39;sidebar.isHiding&amp;#39;, function() {
  });
  ...
  ...
  ...
  hideSidebar: function() {
&lt;span class=&#34;gd&#34;&gt;-   NexT.utils.isDesktop() &amp;amp;&amp;amp; $(&amp;#39;body&amp;#39;).velocity(&amp;#39;stop&amp;#39;).velocity({paddingRight: 0});
&lt;/span&gt;&lt;span class=&#34;gd&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;+   NexT.utils.isDesktop() &amp;amp;&amp;amp; $(&amp;#39;body&amp;#39;).velocity(&amp;#39;stop&amp;#39;).velocity({paddingLeft: 0});
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;&lt;/span&gt;    this.sidebarEl.find(&amp;#39;.motion-element&amp;#39;).velocity(&amp;#39;stop&amp;#39;).css(&amp;#39;display&amp;#39;, &amp;#39;none&amp;#39;);
    this.sidebarEl.velocity(&amp;#39;stop&amp;#39;).velocity({width: 0}, {display: &amp;#39;none&amp;#39;});

    sidebarToggleLines.init();
    ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这样的话就可以将侧边栏放置在左边了，但是当窗口宽度缩小到 991px 之后会出现样式错误，侧边栏收缩消失但是页面左侧仍有留白间距，此时修改如下代码即可：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;body {
  position: relative; // Required by scrollspy
  font-family: $font-family-base;
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $text-color;
  background: $body-bg-color;
&lt;span class=&#34;gd&#34;&gt;- -tablet-mobile() { padding-right: 0 !important; }
&lt;/span&gt;&lt;span class=&#34;gd&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;+ +tablet-mobile() { padding-right: 0 !important; }
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;&lt;/span&gt;  +desktop-large() { font-size: $font-size-large; }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;模块边缘摆动效果&#34;&gt;模块边缘摆动效果&lt;/h3&gt;
&lt;p&gt;这事就要从&lt;a href=&#34;https://www.ofind.cn/&#34;&gt;猪猪侠的博客&lt;/a&gt;说起了，也要和GitHub扯上关系了！！！也参考了&lt;a href=&#34;http://yearito.cn/&#34;&gt;Yearito&#39;s Blog&lt;/a&gt;的博客。当然，完全照搬是行不通的，毕竟主题版本不同，稍有差距，我得按照自己实际的改才行！目前是NexT7.1.0，到我写这篇文章的时候还是最新的(好像)也就是说，这不是挺好的么😀&lt;/p&gt;
&lt;p&gt;说白了，只要有了js文件，再你主题怎么变化，万变不离其宗，稍作修改，总是能把特效添加上去的，Duang~&lt;/p&gt;
&lt;p&gt;点击下方按钮下载脚本，并放到 themes\next\source\js\ 目录下：&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;download&#34; href=&#34;https://mirrors.52bess.com/blog/js/wobblewindow.js&#34;&gt;&lt;i class=&#34;fa fa-download&#34;&gt;&lt;/i&gt;&lt;span&gt; Download Now&lt;/span&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在主题自定义布局文件中添加以下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-[]&#34; data-lang=&#34;[]&#34;&gt;{# wobble窗口摆动特效 #}
{% if theme.wobble.enable %}
  &amp;lt;script src=&amp;quot;/js/wobblewindow.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;script&amp;gt;
    //只在桌面版网页启用特效
    if( window.innerWidth &amp;gt; 768  ){
      $(document).ready(function () {
        {% if theme.wobble.header %}
          $(&#39;#header&#39;).wobbleWindow({
            radius: {{ theme.wobble.radius }},
            movementTop: false,
            movementLeft: false,
            movementRight: false,
            debug: false,
          });
        {% endif %}

        {% if theme.wobble.sidebar %}
          $(&#39;#sidebar&#39;).wobbleWindow({
            radius: {{ theme.wobble.radius }},
            movementLeft: false,
            movementTop: false,
            movementBottom: false,
            position: &#39;fixed&#39;,
            debug: false,
          });
        {% endif %}

        {% if theme.wobble.footer %}
          $(&#39;#footer&#39;).wobbleWindow({
            radius: {{ theme.wobble.radius }},
            movementBottom: false,
            movementLeft: false,
            movementRight: false,
            position: &#39;absolute&#39;,
            debug: false,
          });
        {% endif %}
      });
    }
  &amp;lt;/script&amp;gt;
{% endif %}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在自定义样式文件中添加以下样式：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;//窗口波动效果相关样式
if hexo-config(&#39;wobble&#39;)  {
  .sidebar {
    box-shadow: none;
  }

  .wobbleTransparentBK{
    background-color: rgba(0,0,0,0) !important;
  }

  .wobbleTransparentLine{
    border-color: rgba(0,0,0,0) !important;
  }

  //Next.Muse中为Header和Footer添加背景色
  .header, .footer {
    background-color: rgb(245, 245, 245);
  }

  //防止sidebar和footer同时开启动效时堆叠异常
  .sidebar, .header {
    z-index: 1 !important;
  }

  //防止挡住页末文章的阅读全文按钮
  .main {
    padding-bottom: 200px;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;note warning&#34;&gt;&lt;p&gt;Next.Muse 主题方案中 Header 和 Footer 是没有背景色的，所以需要添加背景色后才能看出边缘摆动效果。另外，实现边缘摆动效果所需的 z-index 属性可能会导致元素堆叠异常，需要添加以上样式来矫正。&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;在主题配置文件中添加以下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-[]&#34; data-lang=&#34;[]&#34;&gt;# window woblle
wobble:
  enable: true  # 是否开启边缘波动效果
  radius: 50  # 波动半径
  sidebar: true  # 开启侧边栏边缘摆动
  header: true  # 开启头部边缘摆动
  footer: true  # 开启脚部边缘摆动
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果从本地加载 JS 脚本速度较慢，可以考虑将脚本放到 CDN 上再引入。&lt;/p&gt;
&lt;h3 id=&#34;个性化回到顶部&#34;&gt;个性化回到顶部&lt;/h3&gt;
&lt;p&gt;参考 &lt;a href=&#34;https://diygod.me/&#34;&gt;DIYgod 的博客&lt;/a&gt; 里的特效，原理很简单：将 back-to-top 按钮添加图片背景，并添加 CSS3 动效即可。&lt;/p&gt;
&lt;p&gt;首先，找到自己喜欢的图片素材放到 source\images\ 目录下：&lt;/p&gt;
&lt;p&gt;或者：链接：https://pan.baidu.com/s/1J0dJOa2oWFwNR8pvG6vBFQ 提取码：lstv&lt;/p&gt;
&lt;p&gt;然后在自定义样式文件中添加如下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-[]&#34; data-lang=&#34;[]&#34;&gt;//自定义回到顶部样式
.back-to-top {
  right: 60px;
  width: 70px;  //图片素材宽度
  height: 900px;  //图片素材高度
  top: -900px;
  bottom: unset;
  transition: all .5s ease-in-out;
  background: url(&amp;quot;/images/scroll.png&amp;quot;);

  //隐藏箭头图标
  &amp;gt; i {
    display: none;
  }

  &amp;amp;.back-to-top-on {
    bottom: unset;
    top: 100vh &amp;lt; (900px + 200px) ? calc( 100vh - 900px - 200px ) : 0px;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;刷新浏览器即可预览效果。&lt;/p&gt;
&lt;h3 id=&#34;豆瓣页面&#34;&gt;豆瓣页面&lt;/h3&gt;
&lt;p&gt;为站点添加豆瓣阅读 / 电影 / 游戏页面，效果参考博客中的豆瓣页面！&lt;/p&gt;
&lt;div class=&#34;note primary&#34;&gt;&lt;p&gt;具体是怎么实现的，可以参考GitHub上的一个开源项目，这个项目的创意是真的很不错！&lt;a href=&#34;https://github.com/mythsman/hexo-douban&#34;&gt;Hexo—Douban&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;首先，在根目录下执行以下命令安装相关依赖：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install hexo-douban --save
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后，在站点配置文件中添加以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-[]&#34; data-lang=&#34;[]&#34;&gt;douban:
  user:  # 个人豆瓣ID
  builtin: false
  book:
    title: &#39;This is my book title&#39;
    quote: &#39;This is my book quote&#39;
  movie:
    title: &#39;This is my movie title&#39;
    quote: &#39;This is my movie quote&#39;
  game:
    title: &#39;This is my game title&#39;
    quote: &#39;This is my game quote&#39;
  timeout: 10000
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;note info&#34;&gt;&lt;p&gt;user: 填写豆瓣 ID。登陆豆瓣后点击个人主页，此时 url 中最后一段即是用户 ID，一般情况下会是一段数字，如果设置了个人域名的话，则个人域名即为 ID。&lt;/p&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;builtin: 是否将生成页面的功能嵌入 &lt;code&gt;hexo s&lt;/code&gt; 和 &lt;code&gt;hexo g&lt;/code&gt; 中。&lt;/li&gt;
&lt;li&gt;timeout: 爬取数据的超时时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;note warning&#34;&gt;&lt;p&gt;如果只想生成某一个页面（比如只生成读书页面），把其他的配置项注释掉即可。&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;在主题配置文件中新增菜单入口：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-[]&#34; data-lang=&#34;[]&#34;&gt;menu:
  home: / || home
  tags: /tags/ || tags
  categories: /categories/ || th
  archives: /archives/ || archive
  about: /about/ || user
  books: /books/ || book  
  movies: /movies/ || video-camera  
  games: /games/ || gamepad
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在语言包中新增菜单中文：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;  menu:
    home: 首页
    archives: 归档
    categories: 分类
    tags: 标签
&lt;span class=&#34;gi&#34;&gt;+   movies: 电影
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;+   books: 读书
&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;+   games: 游戏
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后在根目录下执行以下命令生成豆瓣阅读 / 电影 / 游戏页面：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hexo douban
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可选参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-b | --books: 只生成豆瓣读书页面&lt;/li&gt;
&lt;li&gt;-m | --movies: 只生成豆瓣电影页面&lt;/li&gt;
&lt;li&gt;-g | --games: 只生成豆瓣游戏页面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;执行命令后，插件会根据用户提供的 ID 爬取豆瓣中的数据信息并在 &lt;code&gt;public&lt;/code&gt; 目录下生成对应的页面，当服务器启动或部署后会将页面显示在对应的菜单路由下。&lt;/p&gt;
&lt;div class=&#34;note warning&#34;&gt;&lt;p&gt;通常大家都喜欢用 hexo d 来作为 hexo deploy 命令的简化，但是当安装了 hexo douban 之后， hexo d 就会有歧义而无法执行，因为 hexo douban 跟 hexo deploy 的 Alias 都是 hexo d。&lt;/p&gt;&lt;/div&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/hexo/" term="Hexo" label="Hexo" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">愉快的五一假期</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/life/2019/wuyi/" />
            <id>https://blog.besscroft.com/life/2019/wuyi/</id>
            <updated>2021-08-03T17:22:49&#43;08:00</updated>
            <published>2019-05-05T12:50:15&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">浅谈 这篇文章，是在五一假期结束之后写的，毕竟五一还是有点忙的！抽了2天时间来重构He……</summary>
            
                <content type="html">&lt;h2 id=&#34;浅谈&#34;&gt;浅谈&lt;/h2&gt;
&lt;p&gt;这篇文章，是在五一假期结束之后写的，毕竟五一还是有点忙的！抽了2天时间来重构Hexo的代码，解决了很多未知的问题，每天都忙到凌晨，相信有过共同经历的人会明白的🤣总会有些花里胡哨的瑕疵，反正我是忍不了。😅&lt;/p&gt;
&lt;h2 id=&#34;博客&#34;&gt;博客&lt;/h2&gt;
&lt;p&gt;我原先是采取的&lt;code&gt;GitHub&lt;/code&gt;+&lt;code&gt;coding&lt;/code&gt;方案，后来删掉了&lt;code&gt;coding&lt;/code&gt;的仓库，只保留了&lt;code&gt;GitHub Pages&lt;/code&gt;。最主要的还是用不习惯，虽然在某些地区访问的话，速度会更快。但是想必大多数用&lt;code&gt;Hexo&lt;/code&gt;搭建博客，而且托管在&lt;code&gt;GitHub&lt;/code&gt;的同学，是不在意只有少部分人来访博客的。因为需要大量的人访问，或者有这种需求的人，都会买云服务器。&lt;/p&gt;
&lt;p&gt;正好&lt;code&gt;coding&lt;/code&gt;的仓库空出来了，我就把&lt;code&gt;GitHub&lt;/code&gt;的先放着，在&lt;code&gt;coding&lt;/code&gt;上从头开始搭建、调试。等一切准备好了之后，在推送到&lt;code&gt;GitHub&lt;/code&gt;上来，这样也不容易出问题。&lt;/p&gt;
&lt;h3 id=&#34;煎熬的过程&#34;&gt;煎熬的过程&lt;/h3&gt;
&lt;p&gt;环境在电脑上已经有了，于是到&lt;code&gt;G&lt;/code&gt;盘创建了一个新文件夹，用于&lt;del&gt;安装&lt;/del&gt;初始化&lt;code&gt;Hexo&lt;/code&gt;，然后安装推送插件之后直接推送到coding上。确定搭建完成了最基本的之后，就在本地慢慢调试。主题依旧用&lt;code&gt;NexT&lt;/code&gt;主题，只不过换成了&lt;code&gt;NexT.Muse&lt;/code&gt;，然后照着几个不同的、比较知名的博客的样式，做出了一些修改，也就是你们现在看到的样子。虽然不是很漂亮，但是也够看了😁都说程序猿的审美不行，我觉得程序猿们要大胆的说：不！给他们看看，我们不只有格子衫😎&lt;/p&gt;
&lt;div class=&#34;note warning&#34;&gt;&lt;p&gt;注意一定要按时备份！&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;设计整个页面的过程，是基于chrome的，一般来说现在的新浏览器都算是支持比较好的。虽然个人比较喜欢后端，但至少前端知识好歹是知道一点的，也不至于无从上手🤣许多CSS样式，都是放在了&lt;code&gt;custom.styl&lt;/code&gt;文件中。经过了这次折磨之后，现在可算是知道了以前期末的时候，都是老师留情了的。没有个几百上千行的CSS代码，怎么好意思及格呢。。。&lt;/p&gt;
&lt;p&gt;在快完成的时候，也是遇到了一些小挫折的。。。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2019/wuyi/wuyi001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;嗯~ o(&lt;em&gt;￣▽￣&lt;/em&gt;)o，控制台不报错，压根都不知道问题出在哪儿了。去Google查了查，重新安装了所有的相关依赖包也依旧没有解决问题。没错，绝望的我，又重新开始了一遍，但是因为相关文件都已经配置好了，基本上就是复制粘贴了一遍。最后熬了2天夜，终于还是弄完了。&lt;/p&gt;
&lt;p&gt;对于想直接要博客的整份源码的同学，我只能说，没有人会给的啦，原因很简单！这不应该是一个索取和给予的过程，而应该是一个讨论交流的过程。也就是说，你问我博客的任何东西是怎么实现的，我都会告诉你(后面也会抽时间写相关的文章)，但是你直接要我当然不会给啊，毕竟也是自己的心血！&lt;/p&gt;
&lt;p&gt;博客重构前后，源码从原先的200多M变成了40多M(包含了public文件夹)，但是东西一样不少，博客反而更美观，功能更强大。。。这个问题一直没想通，这多出来的100多M到底是啥！&lt;/p&gt;
&lt;h2 id=&#34;爱你三千遍&#34;&gt;爱你三千遍&lt;/h2&gt;
&lt;p&gt;五一去影院看了&lt;a href=&#34;https://movie.douban.com/subject/26100958/?from=showing&#34;&gt;《复仇者联盟4》&lt;/a&gt;，不知道为啥，竟然有点心疼灭霸😥最好笑的镜头&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2019/wuyi/wuyi002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;friend&#34;&gt;♂friend&lt;/h2&gt;
&lt;p&gt;五一还去了同学家吃饭，来了一些初中同学，大家都在聊以前初中时的沙雕欢乐的事情（。＾▽＾）&lt;/p&gt;
&lt;p&gt;嗯~ o(&lt;em&gt;￣▽￣&lt;/em&gt;)o至于这个菜嘛，虽然我没参与，但是是大家一起努力弄出来的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/life/2019/wuyi/wuyi003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;哈哈，卖相不好，味道倒是还凑合！越长越大，就越是让人怀恋以前读书时的美(sha)好(diao)日子呢！&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E7%94%9F%E6%B4%BB/" term="生活" label="生活" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E7%94%9F%E6%B4%BB/" term="生活" label="生活" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">神器Termux的使用记录</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2019/termux/" />
            <id>https://blog.besscroft.com/tech/2019/termux/</id>
            <updated>2021-08-03T17:30:12&#43;08:00</updated>
            <published>2019-04-23T11:47:39&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Termux是一个Android终端模拟器和Linux环境应用程序，可以直接使用，无……</summary>
            
                <content type="html">&lt;p&gt;Termux是一个Android终端模拟器和Linux环境应用程序，可以直接使用，无需root或设置。自动安装最小基本系统 - 使用APT包管理器可以使用其他软件包。&lt;/p&gt;
&lt;h2 id=&#34;termux使用&#34;&gt;Termux使用&lt;/h2&gt;
&lt;p&gt;我觉得吧，虽然我喜欢玩游戏，但是我不怎么玩手游，我觉得还是以前的手游(主要指单机)好玩些，现在的手游都提不起我的兴趣了。那么，在安卓手机上，就有这样一个替代品——&lt;a href=&#34;https://termux.com/&#34;&gt;Termux&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;我的准备步骤&#34;&gt;我的准备步骤&lt;/h3&gt;
&lt;p&gt;1.先下载安装，我是在Google play下的，或者可以去👉&lt;a href=&#34;https://github.com/termux/termux-app&#34;&gt;GitHub&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;2.安装完之后，我们进入Termux&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/termux/termux01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后先更新源和升级软件包：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt update	//更新源
apt upgrade  //升级软件包
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;3.安装一些基本的包，我推荐你安装一下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt install git  //分布式管理工具
apt install wget   //下载工具
apt install vim    //vim编辑器
apt install tar  //解压缩工具
apt install less  //termux下vim支持触摸移动光标移动位置
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;4.更换国内源，没错，这样网络速度会更快，更换Termux清华大学源,加快软件包下载速度.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export EDITOR=vi  //设置默认编辑器
apt edit-sources  //编辑源文件
将原来的https://termux.net官方源替换为http://mirrors.tuna.tsinghua.edu.cn/termux stable main
ESC，输入:wq保存并退出
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;或者&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vi  $PREFIX/etc/apt/sources.list  //直接编辑源文件
# 安装基本工具
	pkg update
	pkg install vim curl wget git unzip unrar
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;5.编辑启动问候语&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vim $PREFIX/etc/motd  //编辑问候语文件直接修改问候语
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;常用快捷键&#34;&gt;常用快捷键&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Ctrl&lt;/code&gt;键是终端用户常用的按键 - 但大多数触摸键盘都没有这个按键。为此，Termux使用&lt;code&gt;音量减小按钮&lt;/code&gt;来模拟&lt;code&gt;Ctrl&lt;/code&gt;键。
例如，在触摸键盘上按&lt;code&gt;音量减小&lt;/code&gt;+ &lt;code&gt;L&lt;/code&gt;发送与在硬件键盘上按&lt;code&gt;Ctrl + L&lt;/code&gt;相同的输入。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Ctrl+A -&amp;gt; 将光标移动到行首
Ctrl+C -&amp;gt; 中止当前进程
Ctrl+D -&amp;gt; 注销终端会话
Ctrl+E -&amp;gt; 将光标移动到行尾
Ctrl+K -&amp;gt; 从光标删除到行尾
Ctrl+L -&amp;gt; 清除终端
Ctrl+Z -&amp;gt; 挂起（发送SIGTSTP到）当前进程
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;音量加键&lt;/code&gt;也可以作为产生特定输入的&lt;code&gt;特殊键&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;音量加+E -&amp;gt; Esc键
音量加+T -&amp;gt; Tab键
音量加+1 -&amp;gt; F1（和音量增加+ 2→F2等）
音量加+0 -&amp;gt; F10
音量加+B -&amp;gt; Alt + B，使用readline时返回一个单词
音量加+F -&amp;gt; Alt + F，使用readline时转发一个单词
音量加+X -&amp;gt; Alt+X
音量加+W -&amp;gt; 向上箭头键
音量加+A -&amp;gt; 向左箭头键
音量加+S -&amp;gt; 向下箭头键
音量加+D -&amp;gt; 向右箭头键
音量加+L -&amp;gt; | （管道字符）
音量加+H -&amp;gt; 〜（波浪号字符）
音量加+U -&amp;gt; _ (下划线字符)
音量加+P -&amp;gt; 上一页
音量加+N -&amp;gt; 下一页
音量加+. -&amp;gt; Ctrl + \（SIGQUIT）
音量加+V -&amp;gt; 显示音量控制
音量加+Q -&amp;gt; 显示额外的按键视图
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;基本命令&#34;&gt;基本命令&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Termux&lt;/code&gt;除了支持&lt;code&gt;apt&lt;/code&gt;命令外,还在此基础上封装了&lt;code&gt;pkg&lt;/code&gt;命令,&lt;code&gt;pkg&lt;/code&gt;命令向下兼容&lt;code&gt;apt&lt;/code&gt;命令.&lt;code&gt;apt&lt;/code&gt;命令大家应该都比较熟悉了,这里直接简单的介绍下&lt;code&gt;pkg&lt;/code&gt;命令:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pkg search &amp;lt;query&amp;gt;              搜索包
pkg install &amp;lt;package&amp;gt;           安装包
pkg uninstall &amp;lt;package&amp;gt;         卸载包
pkg reinstall &amp;lt;package&amp;gt;         重新安装包
pkg update                      更新源
pkg upgrade                     升级软件包
pkg list-all                    列出可供安装的所有包
pkg list-installed              列出已经安装的包
pkg shoe &amp;lt;package&amp;gt;              显示某个包的详细信息
pkg files &amp;lt;package&amp;gt;             显示某个包的相关文件夹路径
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;更换配色&#34;&gt;更换配色&lt;/h3&gt;
&lt;p&gt;执行下面这个命令确保已经安装好了curl，没有的话根据它的提示安装，你没安装的话，执行了下面这条语句，它会给你一条安装curl的语句的。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sh -c &amp;quot;$(curl -fsSL https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)&amp;quot;  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Android6.0以上会弹框确认是否授权,&lt;code&gt;允许&lt;/code&gt;授权后&lt;code&gt;Termux&lt;/code&gt;可以方便的访问SD卡文件.
脚本允许后先后有如下两个选项:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Enter a number, leave blank to not to change:&amp;lt;自己选一个自己喜欢的&amp;gt;
Enter a number, leave blank to not to change:&amp;lt;自己选一个自己喜欢的&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;分别选择&lt;code&gt;背景色&lt;/code&gt;和&lt;code&gt;字体&lt;/code&gt;
想要继续更改挑选配色的话,继续运行脚本来再次筛选:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;~/termux-ohmyzsh/install.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;exit&lt;/code&gt;重启&lt;code&gt;sessions&lt;/code&gt;会话生效配置，如想深入使用，请访问👉&lt;a href=&#34;https://github.com/Cabbagec/termux-ohmyzsh&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;管理员身份&#34;&gt;管理员身份&lt;/h3&gt;
&lt;h4 id=&#34;手机没有root&#34;&gt;手机没有root&lt;/h4&gt;
&lt;p&gt;利用&lt;code&gt;proot&lt;/code&gt;工具来模拟某些需要root的环境&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pkg install proot
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后终端下面输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;termux-chroot
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;即可模拟&lt;code&gt;root&lt;/code&gt;环境
在这个&lt;code&gt;proot&lt;/code&gt;环境下面,相当于是进入了&lt;code&gt;home&lt;/code&gt;目录,可以很方便地进行一些配置.&lt;/p&gt;
&lt;p&gt;在管理员身份下，输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;exit
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可回到普通用户身份。&lt;/p&gt;
&lt;h4 id=&#34;手机已经root&#34;&gt;手机已经root&lt;/h4&gt;
&lt;p&gt;安装&lt;code&gt;tsu&lt;/code&gt;,这是一个&lt;code&gt;su&lt;/code&gt;的termux版本,用来在termux上替代&lt;code&gt;su&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pkg install tsu
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后终端下面输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tsu
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;即可切换&lt;code&gt;root&lt;/code&gt;用户,这个时候会弹出&lt;code&gt;root&lt;/code&gt;授权提示,给予其&lt;code&gt;root&lt;/code&gt;权限,效果图如下:&lt;/p&gt;
&lt;p&gt;在管理员身份下，输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;exit
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可回到普通用户身份。&lt;/p&gt;
&lt;h2 id=&#34;人生苦短我选python&#34;&gt;人生苦短、我选Python&lt;/h2&gt;
&lt;h3 id=&#34;安装python27&#34;&gt;安装python2.7&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;pkg install python2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装完成后,使用&lt;code&gt;python2&lt;/code&gt;命令启动&lt;code&gt;python 2.7.16&lt;/code&gt;环境.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/termux/termux02.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后输入&lt;code&gt;exit()&lt;/code&gt;退出。&lt;/p&gt;
&lt;h3 id=&#34;安装python3&#34;&gt;安装python3&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;pkg install python
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装完成后,使用&lt;code&gt;python&lt;/code&gt;命令启动&lt;code&gt;python 3.7.3&lt;/code&gt;环境.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/termux/termux03.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后输入&lt;code&gt;exit()&lt;/code&gt;退出。&lt;/p&gt;
&lt;h3 id=&#34;升级pip版本&#34;&gt;升级pip版本&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;python2 -m pip install --upgrade pip
python -m pip install --upgrade pip
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这两条命令分别升级了&lt;code&gt;pip2&lt;/code&gt;和&lt;code&gt;pip3&lt;/code&gt;到最新版.&lt;/p&gt;
&lt;h3 id=&#34;ipython&#34;&gt;ipython&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;pkg install clang
pip install ipython
pip3.6 install ipython
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ipython是什么，怎么用，不需要过多的解释。在termux里，输入：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ipython
ipython2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;即可进入py2和py3的终端了。&lt;/p&gt;
&lt;h2 id=&#34;什么还有nodejs&#34;&gt;什么？还有Nodejs？&lt;/h2&gt;
&lt;h3 id=&#34;安装nodejs&#34;&gt;安装nodejs&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pkg install nodejs
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;mariadbmysql安装&#34;&gt;MariaDB(MySQL)安装&lt;/h2&gt;
&lt;p&gt;MariaDB数据库管理系统是MySQL的一个分支，主要由开源社区在维护，采用GPL授权许可。开发这个分支的原因之一是：甲骨文公司收购了MySQL后，有将MySQL闭源的潜在风险，因此社区采用分支的方式来避开这个风险。&lt;/p&gt;
&lt;h3 id=&#34;安装mariadb&#34;&gt;安装mariadb&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pkg install mariadb
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;安装基本数据&#34;&gt;安装基本数据&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mysql_install_db
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;启动mariadb服务&#34;&gt;启动mariadb服务&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mysqld
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;启动完成后,这个会话就一直存活,类似与debug调试一样,只有新建会话才可以操作.&lt;/p&gt;
&lt;h3 id=&#34;新建termux会话&#34;&gt;新建termux会话&lt;/h3&gt;
&lt;p&gt;由于mariadb安装的时候没有设置密码,当前的&lt;code&gt;mariadb&lt;/code&gt;密码为&lt;code&gt;空&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mysql
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;直接进入&lt;code&gt;mariadb&lt;/code&gt;数据库.输入&lt;code&gt;exit&lt;/code&gt;退出数据库.&lt;/p&gt;
&lt;h3 id=&#34;修改密码&#34;&gt;修改密码&lt;/h3&gt;
&lt;p&gt;输入一下命令,进行密码相关的安全设置:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mysql_secure_installation
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;输入当前输入密码&lt;/strong&gt;
因为是&lt;code&gt;空&lt;/code&gt;密码,这里默认 &lt;code&gt;回车&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;Enter current password &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; root &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;enter &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; none&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;:
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;设置新密码&lt;/strong&gt;
这里设置新的root密码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;Set root password? &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;Y/n&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; y
New password:
Re-enter new password:
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;其他设置&lt;/strong&gt;
下面根据个人偏好来进行设置,没有绝对的要求&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;Remove anonymous users? &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;Y/n&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Y                &lt;span class=&#34;c1&#34;&gt;#是否移除匿名用户&lt;/span&gt;
Disallow root login remotely? &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;Y/n&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; n          &lt;span class=&#34;c1&#34;&gt;#是否不允许root远程登录&lt;/span&gt;
Remove &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt; database and access to it? &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;Y/n&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; n &lt;span class=&#34;c1&#34;&gt;#是否移除test数据库&lt;/span&gt;
Reload privilege tables now? &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;Y/n&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; y           &lt;span class=&#34;c1&#34;&gt;#是否重新加载表的权限&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;使用密码登录数据库&#34;&gt;使用密码登录数据库&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mysql&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uroot&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Enter&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;****&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;听说php是世界上最好的语言&#34;&gt;听说PHP是世界上最好的语言？&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pkg install php
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;编写测试文件&#34;&gt;编写测试文件&lt;/h3&gt;
&lt;p&gt;在家目录下建一个&lt;code&gt;www&lt;/code&gt;文件夹:&lt;code&gt;mkdir www&lt;/code&gt;
在&lt;code&gt;www&lt;/code&gt;文件夹下新建一个&lt;code&gt;index.php&lt;/code&gt;文件,其内容为&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;phpinfo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;具体操作如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir www
vim www/index.php
tree www/
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;启动webserver&#34;&gt;启动WebServer&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;php -S 127.0.0.1:8080 -t www/
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;nginx&#34;&gt;nginx？&lt;/h2&gt;
&lt;p&gt;Nginx 是一个高性能的 Web 和反向代理服务器, 它具有有很多非常优越的特性.&lt;/p&gt;
&lt;h3 id=&#34;安装nginx包&#34;&gt;安装nginx包&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pkg install nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;切换root用户&#34;&gt;切换root用户&lt;/h3&gt;
&lt;p&gt;尝试下能不能解析默认的&lt;code&gt;index.html&lt;/code&gt;主页
这个文件在&lt;code&gt;termux&lt;/code&gt;上的默认位置为&lt;code&gt;/data/data/com.termux/files/usr/share/nginx/html/index.html&lt;/code&gt;
&lt;strong&gt;切换root用户&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;默认的普通权限无法启动nginx,需要模拟&lt;code&gt;root&lt;/code&gt;权限才可以&lt;/p&gt;
&lt;p&gt;没有这个命令的话,手动安装&lt;code&gt;pkg install proot&lt;/code&gt;包&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;termux-chroot
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;进入模拟的root环境&lt;/p&gt;
&lt;h3 id=&#34;启动nginx&#34;&gt;启动nginx&lt;/h3&gt;
&lt;p&gt;在模拟的root环境下启动&lt;code&gt;nginx&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nginx
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;termux&lt;/code&gt;上&lt;code&gt;nginx&lt;/code&gt;默认的端口是&lt;code&gt;8080&lt;/code&gt;
查看下&lt;code&gt;8080&lt;/code&gt;端口是否在运行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;netstat -an &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;grep &lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后手机本地直接访问:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://127.0.0.1:8080
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;查看下nginx是否正常启动。&lt;/p&gt;
&lt;h2 id=&#34;搭建wordpress&#34;&gt;搭建WordPress&lt;/h2&gt;
&lt;p&gt;这里只是用&lt;code&gt;wordpress&lt;/code&gt;做个典型安利来讲解,类似地可以安装&lt;code&gt;Discuz&lt;/code&gt;,&lt;code&gt;DeDecms&lt;/code&gt;等国内主流的PHP应用程序.&lt;/p&gt;
&lt;h3 id=&#34;方法一-使用php内置的web-server&#34;&gt;方法一 使用PHP内置的Web Server&lt;/h3&gt;
&lt;p&gt;确保安装并配置了&lt;code&gt;php&lt;/code&gt;和&lt;code&gt;mariadb&lt;/code&gt;,没有安装好的话,参考本文中具体细节部分来进行安装.
&lt;strong&gt;新建数据库&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;***&lt;/code&gt; 这里是mysql的密码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;mysql&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uroot&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;***&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;create database wordpress;show databases;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;下载解压wordpress&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget https://cn.wordpress.org/wordpress-4.9.4-zh_CN.zip
pkg install unzip
unzip wordpress-4.9.4-zh_CN.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;启动PHP Web Server&lt;/strong&gt;
到解压后的&lt;code&gt;wordpress&lt;/code&gt;目录下,执行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; wordpress
php -S 127.0.0.1:8080
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后浏览器访问&lt;code&gt;127.0.0.1:8080&lt;/code&gt;开始进行&lt;code&gt;wordperss&lt;/code&gt;的安装.&lt;/p&gt;
&lt;h3 id=&#34;方法二-nginxphpmariadb&#34;&gt;方法二 nginx+PHP+Mariadb&lt;/h3&gt;
&lt;p&gt;上面使用的方法一是直接使用PHP自带的&lt;code&gt;PHP Web Server&lt;/code&gt;来运行的,看上去不够严谨~,所以这里用&lt;code&gt;nginx&lt;/code&gt;来部署&lt;code&gt;wordpress&lt;/code&gt;.
确保安装了&lt;code&gt;PHP&lt;/code&gt;,&lt;code&gt;php-fpm&lt;/code&gt;,&lt;code&gt;mariadb&lt;/code&gt;,没有安装的话,参考本文中具体细节部分来进行安装和配置.
&lt;strong&gt;新建数据&lt;/strong&gt;和&lt;strong&gt;wordpress下载&lt;/strong&gt;参考上面的&lt;code&gt;方法一&lt;/code&gt;,这里主要介绍使用&lt;code&gt;nginx&lt;/code&gt;去解析&lt;code&gt;wordpress&lt;/code&gt;源文件.
当前解压后&lt;code&gt;wordpress&lt;/code&gt;的绝对路径是:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;/data/data/com.termux/files/home/wordpress
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;编辑nginx.conf&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;vim /etc/nginx/nginx.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;修改为如下几处:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root   /data/data/com.termux/files/home/wordpress;
        index  index.html index.htm index.php;

fastcgi_param  SCRIPT_FILENAME  /data/data/com.termux/files/home/wordpress$fastcgi_script_name;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/termux/termux04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;启动php-fpm和nginx&#34;&gt;启动php-fpm和nginx&lt;/h4&gt;
&lt;p&gt;在&lt;code&gt;proot&lt;/code&gt;环境下面分别启动&lt;code&gt;php-fpm&lt;/code&gt;和&lt;code&gt;nginx&lt;/code&gt;,这里的&lt;code&gt;nginx&lt;/code&gt;不在&lt;code&gt;proot&lt;/code&gt;环境下启动后会出一些问题,感兴趣的可以自己去研究看看.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;php-fpm
nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;安装wordpress&lt;/strong&gt;
浏览器访问:&lt;code&gt;http://127.0.0.1:8080/wp-admin/setup-config.php&lt;/code&gt;进行安装.&lt;/p&gt;
&lt;p&gt;同理安装其他博客也就轻而易举了,可玩性大大增加~&lt;/p&gt;
&lt;h2 id=&#34;搭建hexo博客&#34;&gt;搭建hexo博客&lt;/h2&gt;
&lt;p&gt;没错还能搭建Hexo，但是我的hexo是用的电脑。但是这并不代表手机就不能玩了，你要是觉得不方便，还可以用电脑来控制。&lt;/p&gt;
&lt;h3 id=&#34;安装hexo&#34;&gt;安装hexo&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;npm install hexo-cli -g
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;部署hexo博客环境&#34;&gt;部署hexo博客环境&lt;/h3&gt;
&lt;p&gt;然后建立一个目录,然后到这个目录下初始化hexo环境&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir hexoblog  #手动创建一个目录
cd hexoblog  
hexo init   #初始化hexo环境
hexo g      #生成静态文件
hexo s      #启动hexo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后就跑起来一个最基本的hexo博客
关于hexo博客的详细教程,建议搭建去参考hexo官方文档,我这里重点在于 termux 其他的不作过多的叙述.&lt;/p&gt;
&lt;h2 id=&#34;什么还能玩linux&#34;&gt;什么？还能玩Linux？&lt;/h2&gt;
&lt;p&gt;是的，可以玩。&lt;/p&gt;
&lt;h3 id=&#34;安装步骤&#34;&gt;安装步骤&lt;/h3&gt;
&lt;p&gt;1.下载安装脚本&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget http://funs.ml/file/atilo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2.设置执行权限&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;chmod +x  atilo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;3.运行atilo&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./atilo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;termux/termux05.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;通过它告诉我们的用法，我们就可以来安装了，注意流量哦，记得用WiFi，土豪随意。&lt;/p&gt;
&lt;p&gt;4.比如安装Arch试试&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./atilo arch
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后稍等一会儿，安装完成之后会提示你通过startarch指令启动：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;startarch
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;5.如果你不想要了，也可以删除&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./atilo -r arch
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;内网穿透&#34;&gt;内网穿透&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;ngrok&lt;/code&gt;或者&lt;code&gt;frp&lt;/code&gt;可以将&lt;code&gt;Termux&lt;/code&gt;上面搭建的网站映射到外网上去,&lt;code&gt;手机建站&lt;/code&gt;也不是不可能了。&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/termux/" term="Termux" label="Termux" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Google sitemap不允许的网址解决办法</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2019/googlesitemap/" />
            <id>https://blog.besscroft.com/tech/2019/googlesitemap/</id>
            <updated>2021-08-03T17:26:42&#43;08:00</updated>
            <published>2019-04-10T13:03:47&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">搭建好自己的博客之后，当然得做收录。要想让别人在Google看到我的文章，就得添加站……</summary>
            
                <content type="html">&lt;p&gt;搭建好自己的博客之后，当然得做收录。要想让别人在Google看到我的文章，就得添加站点地图。但是我在提交到Google的时候就给我报了错，不允许的网址。本文所说的方法只是众多解决方法中的一个，这个问题的原因也是有很多的，可以参考👉&lt;a href=&#34;https://support.google.com/webmasters/answer/7451001?hl=zh-Hans&amp;amp;ref_topic=7440006&#34;&gt;站点地图报告&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;问题描述&#34;&gt;问题描述&lt;/h2&gt;
&lt;p&gt;在我提交之后，是这样显示的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/googlesitemap/google001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;所以说，得找到错误。最开始我根本没意识到错误在哪里，也就是选择性眼瞎。。。但是仔细观察图片，发现网址不对，怎么能是http://&amp;lt;yoursite.com&amp;gt;(这里一看就不对)/***.html呢？于是恍然大悟！&lt;/p&gt;
&lt;h2 id=&#34;解决&#34;&gt;解决&lt;/h2&gt;
&lt;p&gt;综上所述，在我的站点文件&lt;code&gt;sitemap.xml&lt;/code&gt;里面，也肯定都是错误的网址。可以看到地址都是错的，都是&lt;code&gt;yoursite.com&lt;/code&gt;开头，这很明显不是我的网址啊😥所以说肯定是我某个地方没有修改，应该是默认值。然后检查我的&lt;code&gt;_config.yml&lt;/code&gt;文件，一看果然是的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# URL
url: http://yoursite.com
root: /
permalink: :title.html
permalink_defaults:
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以看到&lt;code&gt;url&lt;/code&gt;这一项是默认值，压根就没改！因为之前不影响使用，我就没管。然后这时候更正它：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# URL
url: http://www.zhuimeng.online
root: /
permalink: :title.html
permalink_defaults:
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后&lt;code&gt;hexo g -d&lt;/code&gt;更新网站，再在 Google Search Console 重新提交一次 sitemap 就可以了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/googlesitemap/google002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;nice!大功告成啦！😄&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/google-search-console/" term="Google Search Console" label="Google Search Console" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Playing CSO2 on your computer！</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2019/cso2/" />
            <id>https://blog.besscroft.com/tech/2019/cso2/</id>
            <updated>2021-08-03T17:25:46&#43;08:00</updated>
            <published>2019-04-03T21:55:50&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">写在前面 反恐精英Online2，英文名：Counter-Strike Online2，……</summary>
            
                <content type="html">&lt;h2 id=&#34;写在前面&#34;&gt;写在前面&lt;/h2&gt;
&lt;p&gt;反恐精英Online2，英文名：Counter-Strike Online2，粉丝们称为蛋拐兔2。世纪天成公司于2013年9月5日正式宣布代理《反恐精英Online2》，国服于2015年2月5日起源首测，3月5号二测，4月22号正式公测。然而不辛的是，在2018年5月18日，国服（世纪天成代理）正式停止运营。&lt;/p&gt;
&lt;h3 id=&#34;想法&#34;&gt;想法&lt;/h3&gt;
&lt;p&gt;嗯，反正我是在停服之前的一段时间，就已经没玩了。因为我害怕，害怕前一天还玩了，第二天就进不去游戏了，这并不是我想要的。在我的印象中，每年的圣诞节，是蛋拐兔最好玩的时候，人多，氛围也好。而18年的圣诞节，只能听听bgm艰难度日，到后来，当我得知有私服之后，我便又重新燃起了激情！！！&lt;/p&gt;
&lt;h2 id=&#34;gaming&#34;&gt;Gaming&lt;/h2&gt;
&lt;h3 id=&#34;浅谈&#34;&gt;浅谈&lt;/h3&gt;
&lt;p&gt;蛋拐兔2关服了，你是否还在苦恼呢？其实不少小伙伴们都知道有私服的，虽然不是我的，但是我也想借此机
会来推广，好让喜欢的朋友玩。我知道的私服都是免费的，都是公益性质的，搭建私服的大佬们完全是为了能
让大家接着玩，而且还免费。我录制视频和写教程，不出于任何形式的盈利目的，完全是基于一个热爱的老
玩家心态，告知和帮助那些跟我一样，曾经喜欢玩蛋拐兔的玩家，能够重新玩这款游戏。&lt;/p&gt;
&lt;center&gt;不管你玩不玩，但是请记得，你的青春里有过它！！！&lt;/center&gt;
&lt;h3 id=&#34;致谢&#34;&gt;致谢&lt;/h3&gt;
&lt;p&gt;首先，让我们感谢Ochii大神写的CSO2的主服务器和客户端启动程序，并且已经开源了！
还有“I&#39;m Not MentaL”大神的GUI启动器。
同时也感谢国内的几个小团队，自己搭建了国内的私服，并在此基础上优化了服务端和启动端，让大家
不仅免费也更容易地van这款游戏，而且是联机的！谢谢你们做出的努力！感谢！&lt;/p&gt;
&lt;h3 id=&#34;要求&#34;&gt;要求&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt; - Microsoft .NET Framework 4.5.2及以上
 - NodeJS（如果你玩国内的联机私服，则不需要安装）
 - 一些必要的游戏运行环境，如果你是平常玩游戏，那么我相信你的电脑上也已经有了
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;准备&#34;&gt;准备&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt; - 安装包，版本可选，看你想玩那种的。国内私服的话，也是有它们自己稍做了修改的版本的。
		链接：https://pan.baidu.com/s/15qVLo7jrJxG6r-kZBqqEdQ   提取码：1h7v 
 - 主服务器 
		链接：https://pan.baidu.com/s/166igd4lFMR1R776ATMKN5w   提取码：h0ka 
 - 客户端启动程序
		链接：https://pan.baidu.com/s/1OeDIVXhbfgvDljVLdYxVfA   提取码：iwso 
 - GUI启动器
		链接：https://pan.baidu.com/s/1A8rh44NzJ8MSXU8edJqIwQ   提取码：czup 
 - node.js（版本10或更高版本）
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;基本步骤&#34;&gt;基本步骤&lt;/h3&gt;
&lt;p&gt;我们先假设，你已经安装了&lt;a href=&#34;https://nodejs.org/zh-cn/&#34;&gt;Node.js&lt;/a&gt;，然后，在你的电脑硬盘里面，随便找一个盘。我放在E盘了，比如我的游戏路径&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;E:\Counter-Strike Online 2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后创建&lt;code&gt;Game&lt;/code&gt;文件夹和&lt;code&gt;Server&lt;/code&gt;文件夹，如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/cso2/cs001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后，将游戏的压缩包解压到&lt;code&gt;Game&lt;/code&gt;文件夹，解压完之后，应该是这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/cso2/cs002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着将主服务器的压缩包，解压至&lt;code&gt;Server&lt;/code&gt;文件夹，解压完之后，应为：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/cso2/cs003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后，将下载的2个客户端启动程序，解压至&lt;code&gt;Counter-Strike Online 2\Game\Bin&lt;/code&gt;文件夹。解压完成后，再将GUI启动器压缩包，解压至&lt;code&gt;Counter-Strike Online 2&lt;/code&gt;根目录下。然后，基本上就完成一大半了。正常的，这个时候你的游戏根目录下应该为这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/cso2/cs004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;构建游戏&#34;&gt;构建游戏&lt;/h2&gt;
&lt;p&gt;下一步我们要做的，就是让游戏跑起来！&lt;/p&gt;
&lt;h3 id=&#34;方法一&#34;&gt;方法一&lt;/h3&gt;
&lt;p&gt;这一步是最开始的方法，但是也最复杂，不建议大家使用，请跳至下一步！&lt;/p&gt;
&lt;p&gt;要运行服务器，您需要：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/zh-cn/&#34;&gt;Node.js&lt;/a&gt;（版本10或更高版本）;&lt;/li&gt;
&lt;li&gt;搭建服务器，也就是我们下载的主服务器。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后，在服务器目录内的终端实例中，执行以下操作：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install --only = production ＃安装所需的依赖项（最小依赖项） 
npm run start ＃启动预构建服务器
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;默认情况下，服务器&lt;strong&gt;会询问您要侦听的网络接口&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;搭建&#34;&gt;搭建&lt;/h4&gt;
&lt;p&gt;下载源代码后，转到源代码目录中的终端实例，然后：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install ＃安装所需的依赖项 
npm run build ＃ builds服务器 
npm run start ＃启动新服务器构建
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;命令行参数&#34;&gt;命令行参数&lt;/h4&gt;
&lt;p&gt;选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i, --ip-address [ip]&lt;/code&gt;（&lt;em&gt;可选&lt;/em&gt;）要侦听的IP地址（默认值：自动检测）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p, --port-master [port]&lt;/code&gt;（&lt;em&gt;可选&lt;/em&gt;）服务器的（TCP）端口（默认值：30001）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-P, --port-holepunch [port]&lt;/code&gt;（&lt;em&gt;可选&lt;/em&gt;）服务器的打孔（UDP）端口（默认值：30002）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l, --log-packets&lt;/code&gt;（&lt;em&gt;可选&lt;/em&gt;）记录传入和传出的数据包&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;安装&#34;&gt;安装&lt;/h4&gt;
&lt;p&gt;在开始之前，你必须允许launcher.exe在防火墙和端口转发端口27015到27020或打开路由器的NAT，以便与其他人一起玩。&lt;/p&gt;
&lt;p&gt;如果您举办房间比赛，其他客户将知道您的IP。&lt;/p&gt;
&lt;p&gt;如果您加入主持人的房间比赛，主人将知道您的IP。&lt;/p&gt;
&lt;p&gt;一旦开发了专用服务器启动器，这可能在将来可以避免。&lt;/p&gt;
&lt;h4 id=&#34;开始游戏&#34;&gt;开始游戏&lt;/h4&gt;
&lt;p&gt;基本上就是挂载到一个大服务器，然后玩家们进来。由配置和网络比较好的玩家开启房间当房主，然后其他人加入游戏。同时，房主卡，其他人跟着卡，房主推出房间，其他人也会掉。虽然目前只能这样，但是我觉得有得玩我就很高兴了😂&lt;/p&gt;
&lt;h4 id=&#34;对于启动器&#34;&gt;对于启动器&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-lang [some language]&lt;/code&gt;- 将游戏的语言设置为&lt;em&gt;某种语言&lt;/em&gt;（考虑到您拥有语言文件）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-masterip [some ip]&lt;/code&gt;- 将主服务器的IP地址设置为&lt;em&gt;某个IP&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-masterport [some port]&lt;/code&gt;- 将主服务器的端口号设置为&lt;em&gt;某个端口&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-decryptedfiles&lt;/code&gt; - 告诉游戏将每个游戏文件视为已解密&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-enablecustom&lt;/code&gt;- 允许在&lt;code&gt;custom&lt;/code&gt;游戏文件的根目录中使用自定义目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-username [your username]&lt;/code&gt; - 指定登录用户名，以跳过登录屏幕。&lt;strong&gt;必须&lt;/strong&gt;使用&lt;code&gt;-password&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-password [your password]&lt;/code&gt; - 指定登录密码，以跳过登录屏幕。&lt;strong&gt;必须&lt;/strong&gt;使用&lt;code&gt;-username&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;方法二&#34;&gt;方法二&lt;/h3&gt;
&lt;p&gt;直接运行游戏根目录下的&lt;code&gt;PlayCSO2.exe&lt;/code&gt;,如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/cso2/cs005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后点击游戏设定，分别如下面的图片所示，自己视情况设定选项：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/cso2/cs006.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/cso2/cs007.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/cso2/cs008.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后点击保存，如果询问你是都要构建服务器之类的，或者是其它的，直接允许即可！然后根据你的网络情况，可以选择本地启动游戏，或者是连接到其它服务器加入游戏！开始游玩吧！&lt;/p&gt;
&lt;p&gt;运行成功之后，会有cso2_launcher.ini，这个文件里面有登陆账号和密码，是你不联网的情况下，在本地使用的。&lt;/p&gt;
&lt;h3 id=&#34;其它方法&#34;&gt;其它方法&lt;/h3&gt;
&lt;p&gt;~~这个其它方法嘛，就是各个搭建私服的工作组，给大家介绍的玩他们的私服的方法，略有不同，具体的自己去看看呢！~~建议有条件玩外(私)服，国内的私服。。。&lt;/p&gt;
&lt;h2 id=&#34;再次鸣谢&#34;&gt;再次鸣谢&lt;/h2&gt;
&lt;p&gt;感谢Ochii，主服务器GitHub👉&lt;a href=&#34;https://github.com/Ochii/cso2-master-server&#34;&gt;地址&lt;/a&gt;，客户端启动程序GitHub👉&lt;a href=&#34;https://github.com/Ochii/cso2-launcher/&#34;&gt;地址&lt;/a&gt;，感谢！均有MIT许可证许可！&lt;/p&gt;
&lt;p&gt;感谢“I&#39;m Not MentaL”大神的GUI启动器，他的👉&lt;a href=&#34;https://www.patreon.com/posts/counter-strike-2-24597456?fbclid=IwAR25UBDEym2WhYishRcbFUtUD7URm1Z4phQOl9AsUGse7nERP0dFOy1Dwhg&#34;&gt;Patreon&lt;/a&gt;！感谢！&lt;/p&gt;
&lt;p&gt;Counter-Strike Online2的👉&lt;a href=&#34;https://csonline2.net/&#34;&gt;网站&lt;/a&gt;，感谢！&lt;/p&gt;
&lt;p&gt;Counter-Strike Online2的👉&lt;a href=&#34;https://csonline2.net/forum/&#34;&gt;论坛&lt;/a&gt;，感谢！&lt;/p&gt;
&lt;p&gt;感谢&lt;del&gt;你们&lt;/del&gt;国外大神所做出的努力！&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;最后&lt;/h2&gt;
&lt;iframe width=&#34;680&#34; height=&#34;360&#34; src=&#34;https://www.youtube-nocookie.com/embed/djEXG4_IwCY&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;视频链接👉https://www.youtube.com/watch?v=djEXG4_IwCY&lt;/p&gt;
&lt;p&gt;有什么问题或建议，欢迎留言或者发邮箱。~~这里没有商业合作，每一个团队需要宣传都欢迎联系我！~~~~感谢无私帮助玩家们的开发者们，你们辛苦了！~~感谢国外的几个大神！&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/cso2/" term="CSO2" label="CSO2" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E5%8F%8D%E6%81%90%E7%B2%BE%E8%8B%B1ol2/" term="反恐精英OL2" label="反恐精英OL2" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">NexT主题个性定制与深度优化</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2019/next/" />
            <id>https://blog.besscroft.com/tech/2019/next/</id>
            <updated>2021-04-11T12:12:17&#43;08:00</updated>
            <published>2019-03-29T15:45:51&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">“互联网精神”即：开放、平等、协作、快速、分享。感谢我的生命之中有互联网，让我脑海中……</summary>
            
                <content type="html">&lt;p&gt;“互联网精神”即：开放、平等、协作、快速、分享。感谢我的生命之中有互联网，让我脑海中的开源共享有了实现的可能。能拥有自己的博客，不仅记录自己，还能分享他人！&lt;/p&gt;
&lt;h2 id=&#34;写在前面&#34;&gt;写在前面&lt;/h2&gt;
&lt;h3 id=&#34;容我先bb几句&#34;&gt;容我先bb几句&lt;/h3&gt;
&lt;p&gt;首先肯定是感谢各位大佬的文章，我一个小白，靠着Google搭建了自己的博客……如果你是一个和我一样的小白，而且对我的博客感觉还蛮满意的话，恭喜你！看完这篇文章，你自己也可以拥有一个&lt;del&gt;可能不太&lt;/del&gt;漂亮&lt;del&gt;的&lt;/del&gt;博客啦！&lt;/p&gt;
&lt;p&gt;这篇文章主要是写给跟我一样的小白们看的，当然也方便自己以后忘记了来查阅。如果各位大佬不慎看到，如有不足之处还欢迎指出来哦，还请见谅！我在搭建博客的时候，看到很多博客，写了一些比较好的文章，但是有时候却忘记收藏了。别告诉我只有我一个人设置的关闭浏览器时自动清理的......许多时候还是挺后悔的，为什么当时没收藏。因为这种文章，肯定是比某度随便一搜索找到的教程要准确的多的，毕竟人家博主可能真的是有在认真的写。&lt;/p&gt;
&lt;h3 id=&#34;我的本地环境&#34;&gt;我的本地环境&lt;/h3&gt;
&lt;p&gt;有时候出问题的原因可能会有很多，如果你决定用我的这篇文章来做参考的话，那么我就把我的环境给你参考。因为可能大家一样的操作的话，并不一定实现的结果都是相同的。嗯~ o(&lt;em&gt;￣▽￣&lt;/em&gt;)o，没错，我有时候Google按照流程来，结果疯狂报错。。。&lt;/p&gt;
&lt;p&gt;大家都知道，外星人阻断了我们与Google的链接，导致无法访问，不过估计能看到这篇文章的人，应该是具有了访问Google的能力了。如果你是在是无法访问，可以去全球最大的同性交友社区GitHub看看呢，附上大神的开源项目&lt;a href=&#34;https://laod.cn/wp-content/themes/begin/to.php?url=aHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZWhvc3RzL2hvc3Rz&#34;&gt;入口&lt;/a&gt;👉&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/* 调试用的浏览器 */
Google Chrome Version 73.0.3683.75（Official version）（64-bit）
QQ Browser 10.4(3341) Chromium70.0.3538.25\IE11.379.17763.0
Microsoft Edge 44.17763.1.0
Internet Explorer 11.379.17763.0
//IE8及以下版本无法正常显示

/* 版本信息 */
$ hexo version
hexo: 3.8.0
hexo-cli: 1.1.0
os: Windows_NT 10.0.17763 win32 x64
http_parser: 2.8.0
node: 10.15.3
v8: 6.8.275.32-node.51
uv: 1.23.2
zlib: 1.2.11
ares: 1.15.0
modules: 64
nghttp2: 1.34.0
napi: 3
openssl: 1.1.0j
icu: 62.1
unicode: 11.0
cldr: 33.1
tz: 2018e


/* 依赖包 */
$ cat package.json
{
  &amp;quot;name&amp;quot;: &amp;quot;hexo-site&amp;quot;,
  &amp;quot;version&amp;quot;: &amp;quot;0.0.0&amp;quot;,
  &amp;quot;private&amp;quot;: true,
  &amp;quot;hexo&amp;quot;: {
    &amp;quot;version&amp;quot;: &amp;quot;3.8.0&amp;quot;
  },
  &amp;quot;dependencies&amp;quot;: {
    &amp;quot;hexo&amp;quot;: &amp;quot;^3.8.0&amp;quot;,
    &amp;quot;hexo-asset-image&amp;quot;: &amp;quot;0.0.3&amp;quot;, /* 图片显示 */
    &amp;quot;hexo-blog-encrypt&amp;quot;: &amp;quot;^2.1.1&amp;quot;,
    &amp;quot;hexo-deployer-git&amp;quot;: &amp;quot;^1.0.0&amp;quot;, /* Git 部署工具 */
    &amp;quot;hexo-douban&amp;quot;: &amp;quot;^1.1.3&amp;quot;, /* 豆瓣页面生成 */
    &amp;quot;hexo-generator-archive&amp;quot;: &amp;quot;^0.1.5&amp;quot;,
    &amp;quot;hexo-generator-baidu-sitemap&amp;quot;: &amp;quot;^0.1.6&amp;quot;, /* 生成 sitemap.xml，利于 SEO */
    &amp;quot;hexo-generator-category&amp;quot;: &amp;quot;^0.1.3&amp;quot;, /* 默认安装 */
    &amp;quot;hexo-generator-feed&amp;quot;: &amp;quot;^1.2.2&amp;quot;, /* RSS */
    &amp;quot;hexo-generator-index&amp;quot;: &amp;quot;^0.2.1&amp;quot;, /* 默认安装 */
    &amp;quot;hexo-generator-sitemap&amp;quot;: &amp;quot;^1.2.0&amp;quot;, /* 生成 sitemap.xml，利于 SEO */
    &amp;quot;hexo-generator-tag&amp;quot;: &amp;quot;^0.2.0&amp;quot;, /* 默认安装 */
    &amp;quot;hexo-helper-live2d&amp;quot;: &amp;quot;^3.1.1&amp;quot;, /* 看板娘 */
    &amp;quot;hexo-renderer-ejs&amp;quot;: &amp;quot;^0.3.1&amp;quot;,
    &amp;quot;hexo-renderer-marked&amp;quot;: &amp;quot;^0.3.2&amp;quot;,
    &amp;quot;hexo-renderer-stylus&amp;quot;: &amp;quot;^0.3.3&amp;quot;,
    &amp;quot;hexo-server&amp;quot;: &amp;quot;^0.3.3&amp;quot;, /* 默认安装 */
    &amp;quot;hexo-symbols-count-time&amp;quot;: &amp;quot;^0.4.4&amp;quot;,
    &amp;quot;hexo-tag-aplayer&amp;quot;: &amp;quot;^3.0.4&amp;quot;, /* 音乐播放插件，支持歌词 */
    &amp;quot;hexo-tag-dplayer&amp;quot;: &amp;quot;^0.3.3&amp;quot;, /* 视频播放插件，支持弹幕 */
    &amp;quot;hexo-wordcount&amp;quot;: &amp;quot;^6.0.1&amp;quot;, /* 字数统计 */
    &amp;quot;live2d-widget-model-koharu&amp;quot;: &amp;quot;^1.0.5&amp;quot; /* 看板娘 */
  }
}

/* 主题NexT版本 */
NexT.Muse v7.1.0

/* 优化主题NexT的设计版式 */
Muse
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;样式还是看自己选择吧，我觉得都能设计的挺好看的，主要是看你想呈现出一个怎样的界面出来！&lt;/p&gt;
&lt;h3 id=&#34;注意&#34;&gt;注意！&lt;/h3&gt;
&lt;p&gt;站点配置文件和主题配置文件，名字都叫&lt;code&gt;_config.yml&lt;/code&gt;，容易乱，这一点我在其它文章也不止一次的提过了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;站点配置文件，位于站点文件夹根目录内：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;~/blog/_config.yml
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;主题配置文件，位于主题文件夹根目录内：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;~/blog/themes/&amp;lt;你的主题&amp;gt;/_config.yml
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;go&#34;&gt;Go&lt;/h2&gt;
&lt;h3 id=&#34;搭建博客&#34;&gt;搭建博客&lt;/h3&gt;
&lt;p&gt;进入正题啦！由于我以及写过了，不知道为什么这时候有一种偷完懒之后的感觉，真香~😂&lt;/p&gt;
&lt;p&gt;好吧，附上快速访问链接👉&lt;a href=&#34;https://blog.52bess.com/hexo.html&#34;&gt;Hexo博客搭建&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;建议大家一定要看一看官方文档哦，毕竟是👉&lt;a href=&#34;https://hexo.io/zh-cn/docs/&#34;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当然了，你如果对GitHub提供的Pages服务不太满意的话，也可以选择搭建在自己的(Linux)服务器上，只不过会增加些开销！！！&lt;/p&gt;
&lt;h3 id=&#34;what-is-giyhub-pages&#34;&gt;What is GiyHub Pages?&lt;/h3&gt;
&lt;p&gt;GitHub Pages是一种静态站点托管服务，旨在直接从GitHub存储库托管您的个人，组织或项目页面。这里附上GitHub Pages的网址👉&lt;a href=&#34;https://pages.github.com/&#34;&gt;你好，世界&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;问题&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;解答&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Why is GitHub Pages?&lt;/td&gt;
&lt;td&gt;首先免费，其次省心，最后可以学习使用 GitHub。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GitHub Pages有使用限制吗？&lt;/td&gt;
&lt;td&gt;GitHub Pages源存储库的建议限制为1GB，每月100G流量，每小时大约能更新10次版本。超出配额后，可能会收到礼貌的邮件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;超出限制的容量、或者是流量怎么办？&lt;/td&gt;
&lt;td&gt;建议平常就使用国内各大云服务提供商，如&lt;a href=&#34;https://www.qiniu.com/products/kodo&#34;&gt;七牛云KODO&lt;/a&gt;、&lt;a href=&#34;https://www.aliyun.com/product/oss&#34;&gt;阿里云OSS&lt;/a&gt;、&lt;a href=&#34;https://cloud.tencent.com/product/cos&#34;&gt;腾讯云COS&lt;/a&gt;、&lt;a href=&#34;https://cloud.baidu.com/product/bos.html&#34;&gt;百度云BOS&lt;/a&gt;等提供的对象存储上。甚至还可以设置&lt;a href=&#34;https://help.aliyun.com/wordpower/452476-1.html&#34;&gt;镜像回源&lt;/a&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;国内访问速度不行，有必要同时部署在 &lt;a href=&#34;https://coding.net/&#34;&gt;Coding&lt;/a&gt;上吗？&lt;/td&gt;
&lt;td&gt;可以，但没必要。我原来是同时部署的，但是经常502，说来也巧，放弃Coding后，再也不502了。但是，Coding是部署在香港的服务器的哦！但是Coding经常被上有服务上暂停服务。。。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;我可以用自己的域名吗？&lt;/td&gt;
&lt;td&gt;可以，并且支持https。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;可以用作商业用途吗？&lt;/td&gt;
&lt;td&gt;GitHub Pages不适用于或不允许用作免费的网络托管服务来运行您的在线业务，电子商务网站或任何其他主要针对促进商业交易或提供商业软件即服务的网站（SaaS）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如果你要去七牛云使用对象存储服务的话，不妨使用我的👉&lt;a href=&#34;https://portal.qiniu.com/signup?code=3lcqpyrc4dy6q&#34;&gt;邀请链接&lt;/a&gt;，那样我就会获得5 GB/月 CDN 免费下载流量等奖励👌&lt;/p&gt;
&lt;h3 id=&#34;可能遇到的错误&#34;&gt;可能遇到的错误&lt;/h3&gt;
&lt;p&gt;强制执行GitHub Pages的https，可能会遇到一些混合内容的问题。&lt;/p&gt;
&lt;p&gt;如果您为自己的网站启用了HTTPS，并且您网站的HTML仍然通过HTTP引用了图片，CSS或JavaScript，那么您的网站就会提供混合内容，并且您可能无法加载资源。提供混合内容也会降低您网站的安全性。&lt;/p&gt;
&lt;p&gt;要删除网站的混合内容，提高网站的安全性，并解决与加载混合内容相关的问题，修改网站的HTML文件并进行更改&lt;code&gt;http://&lt;/code&gt;，&lt;code&gt;https://&lt;/code&gt;以便通过HTTPS提供所有资源。&lt;/p&gt;
&lt;p&gt;更多详情👉&lt;a href=&#34;https://help.github.com/en/articles/securing-your-github-pages-site-with-https#resolving-problems-with-mixed-content&#34;&gt;入口&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;基本配置&#34;&gt;基本配置&lt;/h2&gt;
&lt;h3 id=&#34;主题&#34;&gt;主题&lt;/h3&gt;
&lt;p&gt;默认的主题感觉不是很好看的样子，但是别的主题就不一样啦！😁我选的是&lt;a href=&#34;https://github.com/iissnan/hexo-theme-next&#34;&gt;NexT主题&lt;/a&gt;，简洁美观、功能也算完善。这里附上官方的👉&lt;a href=&#34;https://hexo.io/themes/&#34;&gt;主题库链接&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;站点文件配置&#34;&gt;站点文件配置&lt;/h3&gt;
&lt;p&gt;可以先去看看👉&lt;a href=&#34;https://hexo.io/zh-cn/docs/configuration.html&#34;&gt;官方文档&lt;/a&gt;是怎么介绍的，然后可以参考参考我的👉&lt;a href=&#34;https://www.52bess.com/zhandian.html&#34;&gt;站点文件基本配置&lt;/a&gt;，需要更多的操作，可以自己去Google看看呢！&lt;/p&gt;
&lt;h3 id=&#34;主题文件配置&#34;&gt;主题文件配置&lt;/h3&gt;
&lt;p&gt;没错，还是建议你先看NexT主题的👉&lt;a href=&#34;https://theme-next.iissnan.com/&#34;&gt;官方文档&lt;/a&gt;，一定要养成这个好习惯！啥都不说了，把我的贴出来大家参考吧！&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# ---------------------------------------------------------------
# Theme Core Configuration Settings
# See: https://theme-next.org/docs/theme-settings/
# ---------------------------------------------------------------
# 更新相关，参考：
# https://github.com/iissnan/hexo-theme-next/issues/328
override: false

# ---------------------------------------------------------------
# Site Information Settings
# ---------------------------------------------------------------

# 站点图标直接去 https://realfavicongenerator.net 下载
# 建议放在 hexo-site/source/images/ 里（没有自己建）
favicon:
  small: /images/favicon-16x16-dog.png
  medium: /images/favicon-32x32-dog.png
  apple_touch_icon: /images/apple-touch-icon-next.png
  safari_pinned_tab: /images/logo.svg
# 修改图片名字保持一致即可！


rss: /atom.xml

footer:		# 页脚配置
  since: 2018   # 这里填入你的建站年份

  icon:
    # 年份后面的图标，为 Font Awesome 图标
	# 去挑一个吧！ https://fontawesome.com/v4.7.0/
    name: fas fa-heartbeat	  # 图标名字
    animated: true		  # 让你的图标跳动起来！
    color: &amp;quot;#ff0000&amp;quot;      #看到我博客页脚的跳动着的红色爱心了吗？
  copyright:
  # -------------------------------------------------------------
  powered:
    enable: true
    version: true
    # 你不想页脚显示 由 Hexo 强力驱动 v3.8.0，可以关闭！
  theme:
    enable: true
    version: true
    # 同理，你不想页脚显示 主题 – NexT.Muse v7.1.0，可以关闭！
    
    beian:
    enable: false
    icp: 
    # 同理，如果你有备案信息，也可以放在这里
    
# ---------------------------------------------------------------
# SEO Settings
# ---------------------------------------------------------------

canonical: true

seo: false

# If true, will add site-subtitle to index page, added in main hexo config.
# subtitle: Subtitle
index_with_subtitle: false

# ---------------------------------------------------------------
# Menu Settings
# ---------------------------------------------------------------

# 菜单设置 || 菜单图标设置（图标上面说了，不重复）
# 项目换行可以更改显示顺序
# 如果这个项前会显示 .menu
# 解决方法：编辑 ~/blog/themes/next/languages 下的相应文件
# 比如添加一个「留言」菜单，站点配置文件的 language 是 zh-CN
# 则编辑 zh-CN.yml，在 menu: 项内添加一行 留言: 留言
# 注意空格，且符号 : 为英文字符！
menu:
  home: / || home
  tags: /tags/ || tags
  categories: /categories/ || th
  archives: /archives/ || archive
  about: /about/ || user
  books: /books/ || book  
  movies: /movies/ || video-camera  
  games: /games/ || gamepad

# Enable/Disable menu icons.
# 是否开启菜单图标
menu_settings:
  icons: true
  badges: false
  
# ---------------------------------------------------------------
# Scheme Settings
# ---------------------------------------------------------------

# 设计板式，都长啥样，去 README 里面的链接里看看
# https://github.com/iissnan/hexo-theme-next#live-preview
# Schemes
scheme: Muse
#scheme: Mist
#scheme: Pisces
#scheme: Gemini


site_state: true

# 侧栏社交链接设置，与上面菜单差不多，要生效记得把前面的 # 去掉
social:
  GitHub: https://github.com/besscroft || github
  E-Mail: mailto:631908942@gmail.com || envelope
  
# 侧栏社交链接图标设置
social_icons:
  enable: true
  icons_only: false
  transition: false
  
# 侧栏友链设置
links_icon: globe
links_title: 友♂链
links_layout: block
#links_layout: inline
links:
  关于此博客: https://blog.52bess.com/about/
  
avatar:
 # 侧栏头像设置
  url: https://*****.com/avatar.png
  rounded: false
  opacity: 1
  rotated: false
  
toc:
  enable: true

  number: true

  wrap: false
# 开启后可能要在 custom.styl 里加代码
  max_depth: 6
  
sidebar:
  # 侧栏的位置，left或right
  position: left
  
  display: post   # 样式我的是默认的post
  # 只对 Pisces 和 Gemini 设计版式有效！
  offset: 12
  # 只对 Muse 和 Mist 设计版式有效！
  onmobile: false
  # 移动端显示侧栏，只对 Muse 和 Mist 设计版式有效！
  dimmer: false

# ---------------------------------------------------------------
# Post Settings
# ---------------------------------------------------------------

# 点击 [Read More]，页面自动滚动到 &amp;lt;!-- more --&amp;gt; 标记处
scroll_to_more: false

# 用 cookies 保存浏览的位置信息，意味着重新打开这个页面后
# 页面就会自动滚动到上次的位置，除非读者清理浏览器 cookies
save_scroll: false

# 将每篇文章 Front-matter 里 description 的文字作为页面显示的文章摘要
excerpt_description: false

# 按字数自动加入 [Read More]，不建议！
# 建议在文章中加入 &amp;lt;!-- more --&amp;gt;
# 自定义 [Read More] 按钮之前要显示的内容！
auto_excerpt:
  enable: false
  length: 150

# 文章顶部显示的文章元数据设置
post_meta:
  item_text: true # 显示文字说明
  created_at: true # 显示文章创建时间
  updated_at:
    enable: true # 隐藏文章修改时间
    another_day: true # 只有当修改时间和创建时间不是同一天的时候才显示
  categories: true # 隐藏分类信息

# Dependencies: https://github.com/willin/hexo-wordcount
# 显示统计字数和估计阅读时长
# 注意：这个要安装插件，先进入站点文件夹根目录
# 然后：npm install hexo-wordcount --save
post_wordcount:
  item_text: true
  wordcount: true
  min2read: false
  totalcount: false
  separated_meta: false

# Wechat Subscriber
wechat_subscriber:
  enable: true
  qcode: /uploads/wechat-qcode.jpg
  description: 欢迎您扫一扫上面的微信公众号，订阅我的博客！
  
# Reward
reward:
  wechatpay: /images/wechatpay.jpg
  
# Declare license on posts
post_copyright:
  # enable: false
  # license: CC BY-NC-SA 3.0
  # license_url: https://creativecommons.org/licenses/by-nc-sa/3.0/
  # 版权信息
  
# ---------------------------------------------------------------
# Misc Theme Settings
# ---------------------------------------------------------------

# 移动端把页面两边留白去除
# Reduce padding / margin indents on devices with narrow width.
mobile_layout_economy: false

# Android 上 Chrome 浏览器顶部颜色设置
android_chrome_color: &amp;quot;#222&amp;quot;
# Android 端 QQ浏览器，很多配置都无法显示出来。。。

# Custom Logo
# Do not support Scheme Mist currently.
custom_logo:
  enable: false
  image: #/uploads/custom-logo.jpg
  
# Available value:
#    normal | night | night eighties | night blue | night bright
# https://github.com/chriskempson/tomorrow-theme
# 代码高亮主题设置
# 都长啥样自己点开上面的链接查看
highlight_theme: normal

# 字体设置
font:
  enable: true

  # 外链字体库地址，例如 //fonts.googleapis.com (默认值)
  host: https://fonts.loli.net

  # Global font settings used for all elements in &amp;lt;body&amp;gt;.
  global:
    external: true
    family: Noto Serif SC
    size:

  # Font settings for Headlines (H1, H2, H3, H4, H5, H6).
  # Fallback to `global` font settings.
  headings:
    external: true
    family: Noto Serif SC
    size:

  # Font settings for posts.
  # Fallback to `global` font settings.
  posts:
    external: true
    family: Noto Serif SC

  # Font settings for Logo.
  # Fallback to `global` font settings.
  logo:
    external: true
    family: Noto Serif SC
    size:

  # Font settings for &amp;lt;code&amp;gt; and code blocks.
  codes:
    external: true
    family:
    size:
    
# ---------------------------------------------------------------
# Third Party Services Settings
# ---------------------------------------------------------------

# Math Equations Render Support
math:
  enable: false
  per_page: true

  engine: mathjax
  #engine: katex

  mathjax:
    cdn: //cdn.jsdelivr.net/npm/mathjax@2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML
 # 这一大串都是默认的，还有一些不列举了，感觉会水贴
 
# Han Support docs: https://hanzi.pro/
# 汉字标准格式，没用过暂时不了解
han: false

# 评论系统，当然id和key我就不提供了，这个可以自己去注册
# leancloud网址：https://leancloud.cn/dashboard/login.html#/signup
valine:
  enable: true # 是否开启
  appid:  # 你的leancloud应用appid
  appkey:  # 你的leancloud应用appkey
  notify: false # mail notifier, See: https://github.com/xCss/Valine/wiki
  verify: true 
  placeholder: 说点儿什么吧o(*￣▽￣*)o 
  avatar: mm 
  guest_info: nick,mail,link r
  pageSize: 10 
  visitor: false 
  comment_count: true 

# 不蒜子统计，用于在页脚显示总访客数和总浏览量，将 false 改为 true 就能直接使用
busuanzi_count:
  enable: true
  total_visitors: true
  total_visitors_icon: user
  total_views: true
  total_views_icon: eye
  post_views: true
  post_views_icon: eye

# 要安装插件才能使用，先进入站点文件夹根目录
# 然后：npm install hexo-generator-searchdb --save
local_search:
  enable: true
  trigger: auto
  top_n_per_article: 1
  unescape: false
  
# ---------------------------------------------------------------
# Tags Settings
# ---------------------------------------------------------------

# 主题的标签样式，有 simple、note、label、tabs 四种
note:
  style: simple
  icons: false
  border_radius: 3
  light_bg_offset: 0
  
# 标签
tabs:
  enable: true
  transition:
    tabs: false
    labels: true
  border_radius: 0
  
# Use velocity to animate everything.
motion:
  enable: true
  async: false
  transition:
    post_block: fadeIn
    post_header: slideDownIn
    post_body: slideDownIn
    coll_header: slideLeftIn
    sidebar: slideUpIn

# 动态背景，但是我觉得放一张好看的图片更好
canvas_nest:
  enable: false
  onmobile: true # display on mobile or not
  color: &#39;0,0,255&#39; # RGB values, use &#39;,&#39; to separate
  opacity: 0.5 # the opacity of line: 0~1
  zIndex: -1 # z-index property of the background
  count: 99 # the number of lines
# JavaScript 3D library.
# Dependencies: https://github.com/theme-next/theme-next-three
# three_waves
three_waves: false
# canvas_lines
canvas_lines: false
# canvas_sphere
canvas_sphere: false

vendors:
  # Internal path prefix. Please do not edit it.
  _internal: lib
  # 这个下面的东西就不贴出来了，建议大家按需使用，同时找一个好一点的CDN，不然速度感人啊！！！
  
# Assets
css: css
js: js
images: images

daovoice: true
daovoice_app_id: 

nav:
  home: /
  about: /about
  tags: /tags
  categories: /categories

cache:
  enable: true
  
fireworks: true

# window woblle
wobble:
  enable: true  # 是否开启边缘波动效果
  radius: 50  # 波动半径
  sidebar: true  # 开启侧边栏边缘摆动
  header: true  # 开启头部边缘摆动
  footer: true  # 开启脚部边缘摆动
  
fireworks: true

# typing effect
typing_effect:
  colorful: true  # 礼花特效
  shake: false  # 震动特效
  
post_wordcount:
  item_text: true
  wordcount: true
  min2read: false
  totalcount: false
  separated_meta: false
  
# Theme version
version: 7.1.0
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;自定义网页布局&#34;&gt;自定义网页布局&lt;/h2&gt;
&lt;p&gt;我觉得这个对于学过前端三🗡客的同学们来说还是比较简单的，不做多解释。但是对于没学的同学，强烈建议去看看这篇大佬的文章👉&lt;a href=&#34;https://www.cduyzh.com/hexo-settings-3/&#34;&gt;这里&lt;/a&gt;，看完之后，你基本就明白在哪个文件修改了，一些基本的步骤也能掌握！&lt;/p&gt;
&lt;p&gt;主要是修改&lt;code&gt;/blog/themes/next/source/css/_custom/custom.styl&lt;/code&gt;，那么数据去哪里找呢？当然是浏览器按F12进行调试啊。如果是计算机专业，期末做过作品的你，没少受过折磨吧？&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hexo s&lt;/code&gt;后可以直接本地调试，也就是更改文件保存后，Hexo 后台会自动重新渲染文件，所以只要稍等片刻，浏览器刷新一下就能看到效果。&lt;/p&gt;
&lt;p&gt;我建议你使用Google浏览器进行调试，可以先看看，嗯~ o(&lt;em&gt;￣▽￣&lt;/em&gt;)o，没错👉&lt;a href=&#34;https://developers.google.com/web/tools/chrome-devtools/&#34;&gt;Google 开发者工具&lt;/a&gt;，记得给文档5颗星星支持一下下！&lt;/p&gt;
&lt;h2 id=&#34;自定义鼠标点击效果&#34;&gt;自定义鼠标点击效果&lt;/h2&gt;
&lt;h3 id=&#34;爱心效果&#34;&gt;爱心效果&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;/themes/next/source/js/src&lt;/code&gt;新建文件&lt;code&gt;clicklove.js&lt;/code&gt;，并添加如下代码&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;download&#34; href=&#34;https://cdn.jsdelivr.net/gh/besscroft/cdn/js/clicklove.js&#34;&gt;&lt;i class=&#34;fa fa-download&#34;&gt;&lt;/i&gt;&lt;span&gt; Download Now&lt;/span&gt;
&lt;/a&gt;代码过长，在文章里面不太好排版，毕竟不是IDE，所以点击之后复制即可！&lt;/p&gt;
&lt;p&gt;然后在&lt;code&gt;/themes/next/layout/_layout.swig&lt;/code&gt;中添加如下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!-- 页面点击小心心 --&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;/js/love.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;字体效果&#34;&gt;字体效果&lt;/h3&gt;
&lt;p&gt;嗯，我们以社会主义核心价值观为例，当然，实际的使用场景，也可以改成别的。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;/themes/next/source/js/src&lt;/code&gt;新建文件&lt;code&gt;click_show_text.js&lt;/code&gt;，并添加如下代码&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;download&#34; href=&#34;https://cdn.jsdelivr.net/gh/besscroft/cdn/js/click_show_text.js&#34;&gt;&lt;i class=&#34;fa fa-download&#34;&gt;&lt;/i&gt;&lt;span&gt; Download Now&lt;/span&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后在&lt;code&gt;/themes/next/layout/_layout.swig&lt;/code&gt;中添加如下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!--单击显示文字--&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;/js/click_show_text.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;烟花爆炸效果&#34;&gt;烟花爆炸效果&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;/themes/next/source/js/src&lt;/code&gt;新建文件&lt;code&gt;fireworks.js&lt;/code&gt;，并添加如下代码&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;download&#34; href=&#34;https://cdn.jsdelivr.net/gh/besscroft/cdn/js/fireworks.js&#34;&gt;&lt;i class=&#34;fa fa-download&#34;&gt;&lt;/i&gt;&lt;span&gt; Download Now&lt;/span&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后在&lt;code&gt;/themes/next/layout/_layout.swig&lt;/code&gt;中添加如下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{% if theme.fireworks %}
&amp;lt;canvas class=&amp;quot;fireworks&amp;quot; style=&amp;quot;position: fixed; left: 0; top: 0; z-index: 1; pointer-events: none;&amp;quot; &amp;gt;&amp;lt;/canvas&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;/js/src/fireworks.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
{% endif %}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;添加文章结束语&#34;&gt;添加文章结束语&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;\themes\next\layout\_macro&lt;/code&gt;中新建&lt;code&gt;passage-end-tag.swig&lt;/code&gt;文件，添加代码至该文件中：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div&amp;gt;
    {% if not is_index %}
        &amp;lt;div style=&amp;quot;text-align:center;color: #ccc;font-size:14px;&amp;quot;&amp;gt;-------------本文结束&amp;lt;i class=&amp;quot;fa fa-paw&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;感谢您的阅读-------------&amp;lt;/div&amp;gt;
    {% endif %}
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;大小自己看着调整，毕竟每个人喜欢的不一样。&lt;/p&gt;
&lt;p&gt;打开&lt;code&gt;\themes\next\layout\_macro\post.swig&lt;/code&gt;文件，在&lt;code&gt;post-body&lt;/code&gt;后，&lt;code&gt;post-footer&lt;/code&gt;前，添加下面内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div&amp;gt;
  {% if not is_index %}
    {% include &#39;passage-end-tag.swig&#39; %}
  {% endif %}
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;打开主题配置文件&lt;code&gt;_config.yml&lt;/code&gt;,在末尾添加：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 文章末尾添加“本文结束”标记
passage_end_tag:
  enabled: true
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;设置文章背景&#34;&gt;设置文章背景&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;\themes\next\source\css\\_custom\custom.styl&lt;/code&gt;文件内增添如下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/*设置博文背景*/
.main-inner {
    background: #fff;
    opacity: 0.9;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;background后为rgb颜色代码，百度来一个rgb色值粘贴即可替换博文背景颜色（替换了也很丑）
opacity后数值为博文背景透明度，可设置0.0-1.0数值，值越小透明度越高。&lt;/p&gt;
&lt;h2 id=&#34;为主页文章添加阴影效果&#34;&gt;为主页文章添加阴影效果&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;\themes\next\source\css\\_custom\custom.styl&lt;/code&gt;文件内增添如下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// 主页文章添加阴影效果
.post {
  background: #fff;
  opacity: 1;
  margin-top: 60px;
  margin-bottom: 60px;
  padding: 25px;
  webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);
  moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);
 }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;background和上面设置文章背景一样，为文章背景颜色；opacity透明度；margin-top上边距；margin-bottom下边距；padding框间距；webkit-box-shadow和moz-box-shadow为阴影长宽设置。&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E4%B8%AA%E6%80%A7/" term="个性" label="个性" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">萌萌哒二次元看板娘</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2019/live2d/" />
            <id>https://blog.besscroft.com/tech/2019/live2d/</id>
            <updated>2021-04-11T11:52:26&#43;08:00</updated>
            <published>2019-03-28T16:18:51&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">已弃用live2d插件，太长时间没更新了，且功能单一。现已改为开源项目live2d-……</summary>
            
                <content type="html">&lt;p&gt;已弃用live2d插件，太长时间没更新了，且功能单一。现已改为开源项目&lt;strong&gt;live2d-widget&lt;/strong&gt;，地址：https://github.com/stevenjoezhang/live2d-widget&lt;/p&gt;
&lt;p&gt;不少同学应该都发现了，许多人的博客都有类似萌萌哒、看板娘的东西。这个其实是一个名叫&lt;code&gt;hexo-helper-live2d&lt;/code&gt;的插件，那么，我们一起来向Hexo里放上一只萌萌哒二次元看板娘吧！&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;p&gt;首先，在&lt;code&gt;Hexo&lt;/code&gt;博客根目录下运行&lt;code&gt;git&lt;/code&gt;,然后再命令行输入：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install --save hexo-helper-live2d
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当然也可以以标签模式运行，但是不建议这样，容易带来不必要的麻烦。目前最新的插件版本应该是&lt;code&gt;+ hexo-helper-live2d@3.1.0                                                      &lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;
&lt;h3 id=&#34;基础设置&#34;&gt;基础设置&lt;/h3&gt;
&lt;p&gt;在安装好插件之后，我们可以向Hexo的或者主题的&lt;code&gt;_config.yml&lt;/code&gt;文件中添加配置，但是我建议你添加到Hexo的&lt;code&gt;_config.yml&lt;/code&gt;中，而不是主题的配置文件中。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;live2d:
  enable: true		#默认开启
  scriptFrom: local		# 默认
  pluginRootPath: live2dw/	# 插件在站点上的根目录(相对路径)
  pluginJsPath: lib/       # 脚本文件相对与插件根目录路径
  pluginModelPath: assets/	# 模型文件相对与插件根目录路径
  tagMode: false		# 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中
  debug: false  		# 调试, 是否在控制台输出日志
  model:
    use: live2d-widget-model-koharu	#当前使用的模型
  display:
    position: right		#显示位置：左或右
    width: 150			#画布的宽度，显示模型画布的长度
    height: 300			#画布高度显示模型画布的高度
  mobile:
    show: true		#是否在移动设备上显示，默认为true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;请注意，如果你不想手机端显示，请把&lt;code&gt;mobile&lt;/code&gt;下的&lt;code&gt;show&lt;/code&gt;的值改为&lt;code&gt;false&lt;/code&gt;，大多数情况下会遮挡视线。我最开始没注意，但是好多人跟我说手机端影响阅读体验了，然后我发现是得取消。&lt;/p&gt;
&lt;h3 id=&#34;详细的设置&#34;&gt;详细的设置&lt;/h3&gt;
&lt;p&gt;详细设置其实不愿意折腾的同学可以不用管，但是你想按照自己的意愿来，还是可以尝试的。按照官方文档的说法：&lt;strong&gt;设置分为&lt;code&gt;helper&lt;/code&gt;特有的和公共的, 你需要把他们合并放到 &lt;code&gt;_config.yml&lt;/code&gt; 中&lt;/strong&gt;。以下是&lt;code&gt;helper&lt;/code&gt;特有：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Live2D
## https://github.com/EYHN/hexo-helper-live2d
live2d:
  enable: true
  # enable: false
  scriptFrom: local # 默认
  pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径)
  pluginJsPath: lib/ # 脚本文件相对与插件根目录路径
  pluginModelPath: assets/ # 模型文件相对与插件根目录路径
  # scriptFrom: jsdelivr # jsdelivr CDN
  # scriptFrom: unpkg # unpkg CDN
  # scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url
  tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中
  debug: false # 调试, 是否在控制台输出日志
  model:
    use: live2d-widget-model-wanko # npm-module package name
    # use: wanko # 博客根目录/live2d_models/ 下的目录名
    # use: ./wives/wanko # 相对于博客根目录的路径
    # use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;general-settings&#34;&gt;General Settings&lt;/h3&gt;
&lt;p&gt;这里具体的设置，以及你想要的更多，可以参考官方&lt;a href=&#34;https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-init&#34;&gt;API文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Live2D
## https://github.com/xiazeyu/live2d-widget.js
## https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-init
live2d:
  model:
    scale: 1			#模型与canvas的缩放
    hHeadPos: 0.5		#模型头部横坐标
    vHeadPos: 0.618		#模型头部纵坐标
  display:
    superSample: 2		#超采样等级
    width: 150			#画布的宽度，显示模型画布的长度
    height: 300			#画布高度显示模型画布的高度
    position: right		#显示位置：左或右
    hOffset: 0			#水平偏移
    vOffset: -20		#垂直偏移
  mobile:
    show: true		#是否在移动设备上显示
    scale: 0.5		#移动设备上的缩放
  react:
    opacityDefault: 0.7		#默认透明度
    opacityOnHover: 0.2		#鼠标移上透明度
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;模型&#34;&gt;模型&lt;/h3&gt;
&lt;p&gt;有许多方法来使用不同的模型，这里来介绍我设置的方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在Hexo跟目录下新建文件夹&lt;code&gt;live2d_models&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;然后在&lt;code&gt;live2d_models&lt;/code&gt;下建文件夹&lt;code&gt;&amp;lt;你要安装的模型的名字&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;然后在&lt;code&gt;&amp;lt;你要安装的模型的名字&amp;gt;&lt;/code&gt;下新建json文件：&amp;lt;你要安装的模型的名字&amp;gt;.model.json&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可以参考我的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Hexo
│
├──live2d_models
│          └── koharu
				└──koharu.model.json 
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;安装模型&#34;&gt;安装模型&lt;/h4&gt;
&lt;p&gt;在git的命令行输入：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install --save live2d-widget-model-&amp;lt;你要安装的模型的名字&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;比如我的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install --save live2d-widget-model-koharu
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后你就可以通过向 &lt;code&gt;model.use&lt;/code&gt; 键入包名 (&lt;code&gt;live2d-widget-model-wanko&lt;/code&gt;) 来使用了。当然，你也可以去官方发布寻找&lt;a href=&#34;https://github.com/xiazeyu/live2d-widget-models&#34;&gt;live2d小模型&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;最后&lt;/h2&gt;
&lt;p&gt;嗯，如果你是没有CDN会死星人,直接将 &lt;code&gt;.model.json&lt;/code&gt; 的url地址输入 &lt;code&gt;model.use&lt;/code&gt;。祝你成功！&lt;/p&gt;
&lt;h2 id=&#34;我的配置参数&#34;&gt;我的配置参数&lt;/h2&gt;
&lt;p&gt;这里贴上我的配置参数吧，希望能帮到大家！我是放在&lt;code&gt;Hexo&lt;/code&gt;的&lt;code&gt;_config.yml&lt;/code&gt;中的，而不是主题的&lt;code&gt;_config.yml&lt;/code&gt;中:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;live2d:
  enable: true
  scriptFrom: local
  pluginRootPath: live2dw/
  pluginJsPath: lib/
  pluginModelPath: assets/
  tagMode: false
  debug: false
  model:
    use: live2d-widget-model-koharu
    scale: 1
    hHeadPos: 0.5
    vHeadPos: 0.618
  display:
    superSample: 2
    position: right
    width: 150
    height: 300
    hOffset: 0
    vOffset: -20
  mobile:
    show: false
    scale: 0.5
  react:
    opacityDefault: 0.7
    opacityOnHover: 0.2
&lt;/code&gt;&lt;/pre&gt;</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E8%90%8C%E8%90%8C%E5%93%92/" term="萌萌哒" label="萌萌哒" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">站点文件基本配置</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2019/zhandian/" />
            <id>https://blog.besscroft.com/tech/2019/zhandian/</id>
            <updated>2021-04-11T11:57:04&#43;08:00</updated>
            <published>2019-03-25T19:56:53&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">刚接触Hexo的你，是不是对站点配置文件_config.yml一脸的问号呢？没事，这……</summary>
            
                <content type="html">&lt;p&gt;刚接触Hexo的你，是不是对站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;一脸的问号呢？没事，这篇文章可以帮助你轻松阅览站点配置文件，让你快速上手！&lt;/p&gt;
&lt;h3 id=&#34;简介&#34;&gt;简介&lt;/h3&gt;
&lt;p&gt;总所周知，在Hexo静态博客本地配置中，有两个重要的配置文件，分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;位于根目录下的&lt;code&gt;站点配置文件&lt;/code&gt;：&lt;code&gt;_config.yml&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;位于根目录/theme/你的主题下的&lt;code&gt;主题配置文件&lt;/code&gt;：&lt;code&gt;/theme/&amp;lt;你的主题名称&amp;gt;/_config.yml&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，基本熟悉的小伙伴是不会弄混的，刚开始的时候可能会弄错。&lt;/p&gt;
&lt;h3 id=&#34;源码&#34;&gt;源码&lt;/h3&gt;
&lt;p&gt;下面简单列举了一些站点配置文件的源码，方便快速上手：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Hexo 站点配置文件
## 官方说明文档: https://hexo.io/docs/configuration.html
## GitHub源码: https://github.com/hexojs/hexo/

# 网站基础设定
title: 生如夏花               # 网站标题
subtitle: www.zhuimeng.online         # 网站副标题
description: 追逐梦想！                 # 网站描述：建议描述：网站介绍或者座右铭
keywords: 博客,Hexo,黑苹果,Linux        # 关键词
author: Bess Croft                    # 站长信息
language: zh-CN      # 网站语言：查询主题文件下的language文件夹查阅支持语言列表再进行更改   
timezone: Asia/Shanghai              # 网站时区

# 头像
avatar: /uploads/avatar.jpg

# 网址信息
## 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，则请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。
url: https://blog.52bess.com                # 网址
root: /                                 # 网站根目录	
permalink: :title.html    # 文章的 永久链接 格式	
permalink_defaults:                     # 永久链接中各部分的默认值	

# 目录：如果您刚刚开始接触Hexo，通常没有必要修改这一部分的值。
source_dir: source              # 资源文件夹，这个文件夹用来存放内容。
public_dir: public              # 公共文件夹，这个文件夹用于存放生成的站点文件。
tag_dir: tags                   # 标签文件夹	
archive_dir: archives           # 归档文件夹
category_dir: categories        # 分类文件夹	
code_dir: downloads/code        # Include code 文件夹	
i18n_dir: :lang                 # 国际化（i18n）文件夹	
skip_render: README.md          # 跳过指定文件的渲染，您可使用 [glob 表达式](https://github.com/isaacs/node-glob)来匹配路径。	

# 文章
new_post_name: :title.md        # 新文章的文件名称
default_layout: post            # 预设布局	
titlecase: false                # 把标题转换为 title case
external_link: true             # 在新标签中打开链接
filename_case: 0                # 把文件名称转换为 (1) 小写或 (2) 大写
render_drafts: false            # 显示草稿
post_asset_folder: true        # 启动 [Asset](https://hexo.io/zh-cn/docs/asset-folders) 文件夹
relative_link: false            # 把链接改为与根目录的相对位址
future: true                    # 显示未来的文章
highlight:                      # 代码块的设置
  enable: true
  line_number: true
  auto_detect: true
  tab_replace:
  
# 主页设置
index_generator:
  path: &#39;&#39;              # 博客索引页面的根路径。
  per_page: 10          # 每页显示的帖子。（0 =禁用分页）
  order_by: -date       # 排序。（默认情况下按日期降序排序）
  
# 分类 &amp;amp; 标签
default_category: uncategorized     # 默认分类
category_map:                       # 分类别名	
tag_map:                            # 标签别名

# 日期 / 时间格式
## Hexo uses Moment.js to parse and display date
## You can customize the date format as defined in
## http://momentjs.com/docs/#/displaying/format/
date_format: YYYY-MM-DD
time_format: HH:mm:ss

# 分页
per_page: 10                # 每页显示的文章量（0 = 关闭分页功能）
pagination_dir: page        # 分页目录

# 扩展
## 插件: https://hexo.io/plugins/
## 主题: https://hexo.io/themes/
theme: next                     #主题选择

# 部署部分的设置
## 文档: https://hexo.io/docs/deployment.html
deploy:
  type: git
  repository: git@github.com:&amp;lt;Github账号名称&amp;gt;/&amp;lt;Github账号名称&amp;gt;.github.io.git # 仓库ssh
  branch: master #分支选择
  
post_end_tag:
  enabled: true  # 是否开启文末的本文结束标记
  icon: paw # 结束标记之间的图标

# 看板娘
live2d:
  enable: true
  scriptFrom: local
  pluginRootPath: live2dw/
  pluginJsPath: lib/
  pluginModelPath: assets/
  tagMode: false
  debug: false
  model:
    use: live2d-widget-model-koharu
    scale: 1
    hHeadPos: 0.5
    vHeadPos: 0.618
  display:
    superSample: 2
    position: right
    width: 150
    height: 300
    hOffset: 0
    vOffset: -20
  mobile:
    show: false
    scale: 0.5
  react:
    opacityDefault: 0.7
    opacityOnHover: 0.2

# 豆瓣页面
douban:
  user: 195767035
  builtin: true
  book:
    title: &#39;我的书单&#39;
    quote: &#39;看书很慢，但都是值得的&#39;
  movie:
    title: &#39;我的电影&#39;
    quote: &#39;最佳的娱乐方式&#39;
  game:
    title: &#39;我的游戏&#39;
    quote: &#39;最佳的娱乐方式&#39;
  timeout: 10000
  
# 
archive_generator:
  per_page: 20
  yearly: true
  monthly: true

tag_generator:
  per_page: 10
  
# Extensions
plugins:
    hexo-generator-feed
#Feed Atom
feed:
    type: atom
    path: atom.xml
    limit: 20
    
# 自动生成sitemap
sitemap:
  path: sitemap.xml
baidusitemap:
  path: baidusitemap.xml
&lt;/code&gt;&lt;/pre&gt;</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/hexo/" term="Hexo" label="Hexo" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E7%AB%99%E7%82%B9%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE/" term="站点文件配置" label="站点文件配置" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Git本地文件到GitHub仓库</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2019/gitgo/" />
            <id>https://blog.besscroft.com/tech/2019/gitgo/</id>
            <updated>2021-06-22T17:35:29&#43;08:00</updated>
            <published>2019-03-18T17:01:55&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">这是一个简单使用的教程，如果你刚接触git和GitHub，那么，这篇文章再适合你不过……</summary>
            
                <content type="html">&lt;p&gt;这是一个简单使用的教程，如果你刚接触&lt;code&gt;git&lt;/code&gt;和&lt;code&gt;GitHub&lt;/code&gt;，那么，这篇文章再适合你不过了！首先，没有接触过版本控制概念的同学们也可以轻松入门；其次，通过这篇博文，你将学会本地构建仓库、远程克隆仓库、上传本地仓库等魔法操作(语言上可能组织不太好😅)，值得你一看。&lt;/p&gt;
&lt;h2 id=&#34;版本控制&#34;&gt;版本控制&lt;/h2&gt;
&lt;h3 id=&#34;基本概念&#34;&gt;基本概念&lt;/h3&gt;
&lt;p&gt;首先，我们得弄清楚工作区和暂存区的是怎么回事，不然当你看到这些文件夹，可能一脸问号。&lt;/p&gt;
&lt;h4 id=&#34;工作区&#34;&gt;工作区&lt;/h4&gt;
&lt;p&gt;工作区（Working Directory）,是一个你在电脑里能够看到的目录，存放的就是你的本地文件，一般指的是你的仓库根目录下。&lt;/p&gt;
&lt;h4 id=&#34;版本库&#34;&gt;版本库&lt;/h4&gt;
&lt;p&gt;版本库（Repository），在你的工作区，细心的小伙伴可能会发现，有一个隐藏的目录，名叫&lt;code&gt;.git&lt;/code&gt;,这个就是我们常说的版本库了。版本库里面存放了很多东西，其中最重要的是称为&lt;code&gt;stage&lt;/code&gt;的暂存区(或者叫&lt;code&gt;index&lt;/code&gt;)和git为我们创建的第一个分支&lt;code&gt;master&lt;/code&gt;，以及指向&lt;code&gt;master&lt;/code&gt;的一个叫&lt;code&gt;HEAD&lt;/code&gt;的指针。&lt;/p&gt;
&lt;h3 id=&#34;配置&#34;&gt;配置&lt;/h3&gt;
&lt;h4 id=&#34;绑定用户&#34;&gt;绑定用户&lt;/h4&gt;
&lt;p&gt;首先，我们得将电脑和GitHub账号进行绑定才行，打开GIt Bash，输入以下命令（用户和邮箱为你GitHub注册的账号和邮箱）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git config --global user.name &amp;quot;github用户名称&amp;quot;
$ git config --global user.email &amp;quot;github注册时的邮箱&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;比如我这样：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git config --global user.name &amp;quot;besscroft&amp;quot;
$ git config --global user.email &amp;quot;631908942@qq.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;配置ssh&#34;&gt;配置SSH&lt;/h4&gt;
&lt;p&gt;首先创建一下自己的SSH Key。如果已经有了请跳过：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh-keygen -t rsa -C &amp;quot;github注册时的邮箱&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后可能要按下几次回车，具体几次我也没数，默认就行了，如果你觉得有必要，可以自己设置密码。如果一切顺利的话，你可以在你的系统用户主目录里找到&lt;code&gt;.ssh&lt;/code&gt;目录，一般路径为：&lt;code&gt;C:\Users\这里是你的计算机用户名啦\.ssh&lt;/code&gt;，然后里面会有&lt;code&gt;id_rsa&lt;/code&gt;和&lt;code&gt;id_rsa.pub&lt;/code&gt;两个文件，这两个就是SSH Key的秘钥对，&lt;code&gt;id_rsa&lt;/code&gt;是私钥，不能泄露出去，&lt;code&gt;id_rsa.pub&lt;/code&gt;是公钥，你告诉别人也没事儿。&lt;/p&gt;
&lt;p&gt;你甚至能自己检查一下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd ~/.ssh
$ ls    //这个s前面的是lmn的l，不同字体下显示很容易看错成i的大写或者数字1
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;添加shh-key&#34;&gt;添加SHH Key&lt;/h4&gt;
&lt;p&gt;然后我们需要去GitHub添加&lt;a href=&#34;https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fsettings%2Fkeys&#34;&gt;SSH Key&lt;/a&gt;，如果左边的链接挂掉了，直接去你自己的GitHub页面打开设置，找到&lt;code&gt;SSH and GPG keys&lt;/code&gt;,然后&lt;code&gt;New SSH key&lt;/code&gt;,然后将&lt;code&gt;id_rsa.pub&lt;/code&gt;文件的所有内容拷贝到&lt;code&gt;Add key&lt;/code&gt;的框框里面。&lt;/p&gt;
&lt;p&gt;为什么GitHub需要SSH Key呢？因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥，就可以确认只有你自己才能推送。&lt;/p&gt;
&lt;h2 id=&#34;远程仓库&#34;&gt;远程仓库&lt;/h2&gt;
&lt;h3 id=&#34;添加远程仓库&#34;&gt;添加远程仓库&lt;/h3&gt;
&lt;p&gt;我们假设你现在要折腾一个新的项目，那么，你可以先去GitHub新建好仓库，或者现在本地把项目做一点、甚至做完，然后再上传都可以。但是，最终我们肯定是要让GitHub上的仓库和本地的仓库进行同步的。这样子你的GitHub即成为了网盘、也可以跟他人一起来协作，真香。&lt;/p&gt;
&lt;p&gt;首先要确保远程和本地的仓库名字一样，再GitHub上创建新仓库之后，这个仓库肯定是空的。在下面会有GitHub的提示，然后在本地仓库下运行如下指令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git remote add origin git@github.com:&amp;lt;Github账号名称&amp;gt;/&amp;lt;Github仓库名称&amp;gt;.git
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果不小心关联了别人的仓库，不要紧，反正你是推送不上去的🤣，因为他人的账户中没有你的&lt;code&gt;SSH key&lt;/code&gt;公钥。关联之后，远程库的名字就是&lt;code&gt;origin&lt;/code&gt;，这是Git默认的叫法，也可以改成别的，但是&lt;code&gt;origin&lt;/code&gt;这个名字一看就知道是远程库的啦！&lt;/p&gt;
&lt;h4 id=&#34;上传readme文件&#34;&gt;上传README文件&lt;/h4&gt;
&lt;p&gt;如果在创建 &lt;code&gt;Github&lt;/code&gt; 仓库时没有勾选创建 &lt;code&gt;README.md&lt;/code&gt; 文件，则要先创建 &lt;code&gt;README.md&lt;/code&gt; 文件，不然上传文件会报错。如果已经勾选，可以跳过此步骤。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git init
$ touch README.md
$ git add README.md
$ git commit -m &#39;first_commit&#39;
$ git remote add origin https://github.com/&amp;lt;Github账号名称&amp;gt;/&amp;lt;Github仓库名称&amp;gt;.git
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;推送到远程库&#34;&gt;推送到远程库&lt;/h4&gt;
&lt;p&gt;我们输入以下指令，把本地库的所有内容推送到远程库上：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git push origin master
$ git push -u origin master  //如果你是第一次，可以用这个
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们知道，把本地库的内容推送到远程，用&lt;code&gt;git push&lt;/code&gt;命令，实际上是把当前分支&lt;code&gt;master&lt;/code&gt;推送到远程。由于远程库是空的，我们第一次推送&lt;code&gt;master&lt;/code&gt;分支时，加上了&lt;code&gt;-u&lt;/code&gt;参数，Git不但会把本地的&lt;code&gt;master&lt;/code&gt;分支内容推送的远程新的&lt;code&gt;master&lt;/code&gt;分支，还会把本地的&lt;code&gt;master&lt;/code&gt;分支和远程的&lt;code&gt;master&lt;/code&gt;分支关联起来，在以后的推送或者拉取时就可以不用这样啦！&lt;/p&gt;
&lt;p&gt;也就是说，从第二次起，只要本地作了提交，就可以通过命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;那么，把本地&lt;code&gt;master&lt;/code&gt;分支的最新修改推送至GitHub，现在，你就拥有了真正的分布式版本库！开始你的创造吧！&lt;/p&gt;
&lt;h4 id=&#34;从远程仓库克隆&#34;&gt;从远程仓库克隆&lt;/h4&gt;
&lt;p&gt;假设我们这时候买了台新电脑，或者是把电脑重置了，那么最好的方式就是从远程库克隆。我们现在本地创建仓库，注意本地仓库的名字要跟远程一样哦。然后再本地仓库根目录下，输入如下指令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git init
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;初始化完毕后，我们要跟踪项目文件夹中的所有文件和文件夹，也就是将文件添加到暂存区，输入以下指令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git add .
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;需要注意的是，“ . ”的意思是文件夹下的所有文件。这时候我们本地仓库是没有东西的，那么：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git remote add origin https://github.com/&amp;lt;Github账号名称&amp;gt;/&amp;lt;Github仓库名称&amp;gt;.git
$ git pull --rebase origin master
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;获取远程库与本地同步合并，你可以理解为将远程仓库克隆下来。或者是使用以下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone git@github.com:&amp;lt;Github账号名称&amp;gt;/&amp;lt;Github仓库名称&amp;gt;.git
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;推送到远程库基本步骤&#34;&gt;推送到远程库基本步骤&lt;/h4&gt;
&lt;p&gt;每次将本地仓库推送到GitHub时，需要先将文件添加到暂存区：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git add .
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后附上提交说明：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git commit -m &amp;quot;引号之间存放提交说明&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这是为了告诉git ，把文件提交到仓库。&lt;/p&gt;
&lt;p&gt;关联远程仓库：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git remote add origin https://github.com/&amp;lt;Github账号名称&amp;gt;/&amp;lt;Github仓库名称&amp;gt;.git
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果这一步你的关联出现错误的话&lt;code&gt;fatal: remote origin already exists&lt;/code&gt;，那么可以执行以下语句进行关联：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git remote rm origin
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后再次执行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git remote add origin https://github.com/&amp;lt;Github账号名称&amp;gt;/&amp;lt;Github仓库名称&amp;gt;.git
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后我们再把本地仓库推送上去：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果在推送时出现错误 &lt;code&gt;error:failed to push som refs to.......&lt;/code&gt;，则执行下列语句：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git pull origin master
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将远程仓库 &lt;code&gt;Github&lt;/code&gt; 上的文件拉下来合并之后重新推送上去：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;更改username&#34;&gt;更改username&lt;/h3&gt;
&lt;p&gt;如果你更改了当前的username，会带来些麻烦，你可能需要解决一些问题！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你的旧的个人资料页面不会被重定向(需要手动更改)&lt;/li&gt;
&lt;li&gt;你的Pages网站设置不会被重定向(需要手动更改)&lt;/li&gt;
&lt;li&gt;你的远程存储库会自动重定向，无须更改&lt;/li&gt;
&lt;li&gt;你的本地存储库需要手动更改！！！&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;更改本地repo的远程repo的url&#34;&gt;更改本地repo的远程repo的URL&lt;/h4&gt;
&lt;p&gt;一般的，使用&lt;code&gt;git remote set-url&lt;/code&gt;命令更改现有的远程存储卡URL。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果您要更新为使用HTTPS，则URL可能类似于：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;$ https://github.com/USERNAME/REPOSITORY.git
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;如果您要更新为使用SSH，则您的URL可能如下所示：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;$ git@github.com:USERNAME/REPOSITORY.git
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;将远程url从ssh切换到https&#34;&gt;将远程URL从SSH切换到HTTPS&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;列出现有的URL:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;$ git remote -v
&amp;gt; origin  git@github.com:USERNAME/REPOSITORY.git (fetch)
&amp;gt; origin  git@github.com:USERNAME/REPOSITORY.git (push)
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;git remote set-url&lt;/code&gt;命令将远程URL从SSH更改为HTTPS&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;$ git remote set-url origin https://github.com/USERNAME/REPOSITORY.git
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;验证远程URL是否已更改&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;$ git remote -v
# 下面是新的 URL
&amp;gt; origin  https://github.com/USERNAME/REPOSITORY.git (fetch)
&amp;gt; origin  https://github.com/USERNAME/REPOSITORY.git (push)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在你下次使用&lt;code&gt;git fetch&lt;/code&gt;，&lt;code&gt;git pull&lt;/code&gt;或&lt;code&gt;git push&lt;/code&gt;访问远程存储库时，系统将要求你重新提供GitHub用户名和密码&lt;/p&gt;
&lt;h4 id=&#34;将远程url从https切换到ssh&#34;&gt;将远程URL从HTTPS切换到SSH&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;列出现有的URL:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;$ git remote -v
&amp;gt; origin  https://github.com/USERNAME/REPOSITORY.git (fetch)
&amp;gt; origin  https://github.com/USERNAME/REPOSITORY.git (push)
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;git remote set-url&lt;/code&gt;命令将远程URL从HTTPS更改为SSH&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;$ git remote set-url origin git@github.com:USERNAME/REPOSITORY.git
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;验证远程URL是否已更改&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;$ git remote -v
# 下面是新的 URL
&amp;gt; origin  git@github.com:USERNAME/REPOSITORY.git (fetch)
&amp;gt; origin  git@github.com:USERNAME/REPOSITORY.git (push)
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;错误排解&#34;&gt;错误排解&lt;/h4&gt;
&lt;p&gt;出现以下错误，表示URL不存在：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git remote set-url sofake https://github.com/octocat/Spoon-Knife
&amp;gt; fatal: No such remote &#39;sofake&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;更多请访问&lt;a href=&#34;https://help.github.com/en/github/using-git/changing-a-remotes-url&#34;&gt;官方Wiki&lt;/a&gt;！&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;
&lt;p&gt;每次推送的话，基本上就是下面这么回事儿：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// 第一步
$  git add .

// 第二步
$ git commit -m &amp;quot;更新日志&amp;quot;

// 第三步
$ git push
&lt;/code&gt;&lt;/pre&gt;</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/git/" term="Git" label="Git" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/github/" term="GitHub" label="GitHub" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Hexo多端同步</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2019/remote/" />
            <id>https://blog.besscroft.com/tech/2019/remote/</id>
            <updated>2021-04-11T11:54:35&#43;08:00</updated>
            <published>2019-03-17T21:19:03&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">假设你换了一台电脑，或者是把电脑重置了，那么，要怎样才能接着跟原来一样配置好Hexo……</summary>
            
                <content type="html">&lt;p&gt;假设你换了一台电脑，或者是把电脑重置了，那么，要怎样才能接着跟原来一样配置好Hexo，然后继续写文章呢？毕竟你不是从头、从零开始配置的，很多文件都已经有了，但是，怎么保证不出问题的继续运行呢?&lt;/p&gt;
&lt;p&gt;多台电脑同步博客源码，首先要把最新的源码上传到git上，然后在其它电脑上搭建Hexo环境后同步博客源码。 前提是两台电脑都能连上git，主要是都配置了 &lt;code&gt;git ssh&lt;/code&gt;密钥连接。这个方法同样适用与误删文件的你，但是我建议平时尽量多做好备份！！！&lt;/p&gt;
&lt;h2 id=&#34;同步博客源码到你的github&#34;&gt;同步博客源码到你的GitHub&lt;/h2&gt;
&lt;p&gt;在你打算上传的最新博客源码的基础上，按照下面的魔法操作：&lt;/p&gt;
&lt;h3 id=&#34;编辑gitignore文件&#34;&gt;编辑.gitignore文件&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;.gitignore&lt;/code&gt;文件作用是声明不被git记录的文件，blog根目录下的 &lt;code&gt;.gitignore&lt;/code&gt;是hexo初始化是创建的，可以直接编辑，建议.gitignore文件包括以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.DS_Store      
Thumbs.db      
db.json      
*.log      
node_modules/      
public/      
.deploy*/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;说明：public内的文件可以根据source文件夹内容自动生成的，不需要备份。其他日志log、压缩、数据库Thumbs.db等文件也都是调试等使用，也不需要备份。&lt;/p&gt;
&lt;h3 id=&#34;初始化仓库&#34;&gt;初始化仓库&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git init    
git remote add origin https://github.com/&amp;lt;Github账号名称&amp;gt;/&amp;lt;Github账号名称&amp;gt;.git # 将本地仓库映射到托管服务器的仓库
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;server是仓库的在线目录地址，可以从git上直接复制过来，origin是本地分支，remote add会将本地仓库映射到托管服务器的仓库上。&lt;/p&gt;
&lt;h3 id=&#34;同步到git&#34;&gt;同步到git&lt;/h3&gt;
&lt;p&gt;添加你的本地文件到仓库，并同步到GitHub上&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git add . #添加blog目录下所有文件，注意有个&#39;.&#39;(.gitignore里面声明的文件不在此内)    
git commit -m &amp;quot;hexo source first add&amp;quot; #添加更新说明    
git push -u origin master  #推送更新到git上
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;将git的内容同步到另一台电脑&#34;&gt;将git的内容同步到另一台电脑&lt;/h2&gt;
&lt;p&gt;之前的操作主要类似于备份，而这里开始，就基本上是你在新电脑、或者是重置电脑之后的操作啦！假设我们这时候已经将blog源码内容备份到了GitHub上，现在准备在新电脑上同步源码内容。&lt;/p&gt;
&lt;h3 id=&#34;搭建hexo的环境&#34;&gt;搭建hexo的环境&lt;/h3&gt;
&lt;p&gt;这时候在你的新电脑上，肯定是必须要搭建环境的呢，没有环境，Hexo也无法运行呀不是。没错，又是熟悉的配方：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install -g hexo-cli  # 安装hexo

hexo init &amp;lt;folder&amp;gt;         #用hexo创建一个博客目录
cd &amp;lt;folder&amp;gt;
npm install
npm install hexo-deployer-git --save # 部署安装 hexo-deployer-git
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;lt;folder&amp;gt;还是一样地填上博客文件夹地名字，比如说我的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install -g hexo-cli  # 安装hexo

hexo init hexo         #用hexo创建一个博客目录
cd hexo
npm install
npm install hexo-deployer-git --save # 部署安装 hexo-deployer-git
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;拉取源代码&#34;&gt;拉取源代码&lt;/h3&gt;
&lt;p&gt;在建好的环境的主目录运行以下命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git init       #将目录添加到版本控制系统中    
git remote add origin https://github.com/&amp;lt;Github账号名称&amp;gt;/&amp;lt;Github账号名称&amp;gt;.git 
#将本地仓库映射到托管服务器的仓库上    
git fetch --all  #将git上所有文件拉取到本地    
git reset --hard origin/master  #强制将本地内容指向刚刚同步git云端内容,用远端文件覆盖本地相同文件
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;reset对所拉取的文件不做任何处理，此处不用pull是因为本地尚有许多文件，使用pull会有一些版本冲突，解决起来也麻烦，而本地的文件都是初始化生成的文件，较拉取的库里面的文件而言基本无用，所以直接丢弃。&lt;/p&gt;
&lt;h4 id=&#34;发布内容到github&#34;&gt;发布内容到GitHub&lt;/h4&gt;
&lt;p&gt;要将新电脑上的最新的文章更新到git。在本地文件中运行以下命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git status #查看本地文件的状态。
git add . #将所有更新的本地文件添加到版本控制系统中

git commit -m &#39;更新信息说明&#39; 
git push
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;同步文章&#34;&gt;同步文章&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;git pull
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;获取的源码即为最新文件。&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E5%90%8C%E6%AD%A5/" term="同步" label="同步" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Hexo之魔法操作</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2019/sao/" />
            <id>https://blog.besscroft.com/tech/2019/sao/</id>
            <updated>2021-08-03T17:29:43&#43;08:00</updated>
            <published>2019-03-17T12:23:16&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">这篇博文用来记录关于hexo的一些魔法操作，主要针对于NEXT主题。将会在未来很长一……</summary>
            
                <content type="html">&lt;p&gt;这篇博文用来记录关于hexo的一些魔法操作，主要针对于NEXT主题。将会在未来很长一段时间内持续更新，希望对大家有所帮助。&lt;/p&gt;
&lt;h2 id=&#34;常规基本操作&#34;&gt;常规基本操作&lt;/h2&gt;
&lt;h3 id=&#34;写作&#34;&gt;写作&lt;/h3&gt;
&lt;p&gt;我们在搭建好了Hexo博客之后，肯定是需要写文章上去的。 那么，首先打开git，在命令行输入这些指令来创建文章：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hexo new [layout] &amp;lt;title&amp;gt;  //[这里是文章布局]，&amp;lt;这里是文章标题&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;例如这样：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hexo new post HelloHexo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;完成之后，会在 _posts 目录下会生成文件标题.md，一般的格式如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;title: HelloHexo
date: 201-03-17 16:10:00 #发表日期，一般不改动
categories: hexo #文章文类
tags: [hexo,github] #文章标签，多于一项时用这种格式
---
正文，使用Markdown语法书写
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;写完文章后，可以先预览，或者直接推送到服务器上。&lt;/p&gt;
&lt;h4 id=&#34;布局&#34;&gt;布局&lt;/h4&gt;
&lt;p&gt;Hexo 有三种默认布局：&lt;code&gt;post&lt;/code&gt;、&lt;code&gt;page&lt;/code&gt; 和 &lt;code&gt;draft&lt;/code&gt;，它们分别对应不同的路径，而您自定义的其他布局和 &lt;code&gt;post&lt;/code&gt; 相同，都将储存到 &lt;code&gt;source/_posts&lt;/code&gt; 文件夹。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;参数&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;路径&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;post&lt;/td&gt;
&lt;td&gt;source/_posts&lt;/td&gt;
&lt;td&gt;文章&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page&lt;/td&gt;
&lt;td&gt;source&lt;/td&gt;
&lt;td&gt;页面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;draft&lt;/td&gt;
&lt;td&gt;source/_drafts&lt;/td&gt;
&lt;td&gt;草稿&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在命令中指定文章的布局（layout），默认为 &lt;code&gt;post&lt;/code&gt;，可以通过修改 &lt;code&gt;_config.yml&lt;/code&gt; (根目录下的)中的 &lt;code&gt;default_layout&lt;/code&gt; 参数来指定默认布局。如果你不想你的文章被处理，你可以将 Front-Matter 中的&lt;code&gt;layout:&lt;/code&gt; 设为 &lt;code&gt;false&lt;/code&gt; 。&lt;/p&gt;
&lt;h4 id=&#34;基本模板参数&#34;&gt;基本模板参数&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;参数&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;layout&lt;/td&gt;
&lt;td&gt;布局&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;title&lt;/td&gt;
&lt;td&gt;标题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;td&gt;建立日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;updated&lt;/td&gt;
&lt;td&gt;更新日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;comments&lt;/td&gt;
&lt;td&gt;开启文章的评论功能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tags&lt;/td&gt;
&lt;td&gt;标签（不适用于分页）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;categories&lt;/td&gt;
&lt;td&gt;分类（不适用于分页）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;permalink&lt;/td&gt;
&lt;td&gt;覆盖文章网址&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;基本变量参数&#34;&gt;基本变量参数&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;变量&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;:title&lt;/td&gt;
&lt;td&gt;标题（小写，空格将会被替换为短杠）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:year&lt;/td&gt;
&lt;td&gt;建立的年份，比如， &lt;code&gt;2015&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:month&lt;/td&gt;
&lt;td&gt;建立的月份（有前导零），比如， &lt;code&gt;04&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:i_month&lt;/td&gt;
&lt;td&gt;建立的月份（无前导零），比如， &lt;code&gt;4&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:day&lt;/td&gt;
&lt;td&gt;建立的日期（有前导零），比如， &lt;code&gt;07&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:i_day&lt;/td&gt;
&lt;td&gt;建立的日期（无前导零），比如， &lt;code&gt;7&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;强大的标签插件&#34;&gt;强大的标签插件&lt;/h2&gt;
&lt;p&gt;标签插件和 Front-matter 中的标签不同，它们是用于在文章中快速插入特定内容的插件。&lt;/p&gt;
&lt;p&gt;这个其实在Hexo的官方文档上都有比较完善的，大家想了解更多的话，还是建议去那里看，这里主要放一些我用到过的，以及我自己的一些理解。&lt;/p&gt;
&lt;h4 id=&#34;引用书上的句子&#34;&gt;引用书上的句子&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;{% blockquote David Levithan, Wide Awake %}
Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.
{% endblockquote %}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;演示效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;David Levithan&lt;/strong&gt;—Wide Awake&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解释一下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{% blockquote &amp;lt;这里填作者&amp;gt;, &amp;lt;这里填书名等&amp;gt; %}
中间这里存放引用正文
{% endblockquote %}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;iframe&#34;&gt;iframe&lt;/h4&gt;
&lt;p&gt;在文章中插入 iframe。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{% iframe url [width] [height] %}  //设定url，宽、高
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;image&#34;&gt;Image&lt;/h4&gt;
&lt;p&gt;在文章中插入指定大小的图片。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}
//实际上，只需要定义图片的路径即可，除非图片的大小不能使你满意。图片的路径可以是本地路径，也可以是网络路径，这取决于你的选择。
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;link&#34;&gt;Link&lt;/h4&gt;
&lt;p&gt;在文章中插入链接，并自动给外部链接添加 &lt;code&gt;target=&amp;quot;_blank&amp;quot;&lt;/code&gt; 属性。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{% link text url [external] [title] %}   //这个不作过多的解释，都是常见属性
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;基于next主题的优化与配置&#34;&gt;基于Next主题的优化与配置&lt;/h2&gt;
&lt;p&gt;这篇文章👉&lt;a href=&#34;http://blog.besscroft.com/tech/2019/next.html&#34;&gt;NexT主题个性定制与深度优化&lt;/a&gt;&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E9%AD%94%E6%B3%95%E6%93%8D%E4%BD%9C/" term="魔法操作" label="魔法操作" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">黑苹果教程</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2019/clover/" />
            <id>https://blog.besscroft.com/tech/2019/clover/</id>
            <updated>2021-08-03T17:25:26&#43;08:00</updated>
            <published>2019-03-12T22:01:24&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">写在前面 这可能、应该、也许是我写的最后一篇黑苹果相关文章(至少在我买新电脑之前)，以……</summary>
            
                <content type="html">&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/clover/c001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;写在前面&#34;&gt;写在前面&lt;/h2&gt;
&lt;p&gt;这可能、应该、也许是我写的最后一篇黑苹果相关文章(至少在我买新电脑之前)，以后精力全部放在学习上，建议后来想要研究黑苹果的同学们早日弃坑，把时间放在更宝贵的事情上吧。经过一些调查，很多同学们装黑苹果的原因无非就是：折腾，当然也有其它的回答。但是，折腾的同时也确实可以学到很多东西。我想说的是，虽然黑苹果非常适合爱折腾的你，但是，折腾明白之后、或者是折腾不来，那么还是劝你早日退坑。。。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/clover/c002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;配置一览表&#34;&gt;配置一览表&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;OMEN by HP Laptop 15-ce0xx&lt;/th&gt;
&lt;th&gt;HP 暗影精灵3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;BIOS版本&lt;/td&gt;
&lt;td&gt;F.18-11/09/2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CPU&lt;/td&gt;
&lt;td&gt;i7-7700HQ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;显卡&lt;/td&gt;
&lt;td&gt;nVidia GTX 1050&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;声卡&lt;/td&gt;
&lt;td&gt;ALC295&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;硬盘&lt;/td&gt;
&lt;td&gt;HP SSD EX950 512G、HGST 1T&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如果你的电脑和我同配置的话，EFI文件可以直接用我的安装使用，配置相仿的不可以直接使用，自己可以根据我的配置按需调整。但是请注意，我GitHub里的并不是完整的EFI，但是足够跟我同配置的同学安装使用了。&lt;/p&gt;
&lt;h2 id=&#34;安装准备&#34;&gt;安装准备&lt;/h2&gt;
&lt;h3 id=&#34;下载&#34;&gt;下载&lt;/h3&gt;
&lt;p&gt;相关的文件我都在我的GitHub发布了，打不开或者下载不来的，自己多研究研究吧，一切随缘！！！（当然这个项目可能还不太完善，我会慢慢整理的，避免大家走弯路！当然，你有什么好资源，也可以让我上传，毕竟这是个开源项目！仅限于学习研究使用！），没错，为了方便大家下载，我把文件打包了，不打包有的小伙伴下载不来。👉&lt;a href=&#34;https://github.com/besscroft/HP-OMEN-3-Hackintosh&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;一些说明&#34;&gt;一些说明&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;声卡正常，键盘可以调声音&lt;/li&gt;
&lt;li&gt;摄像头正常&lt;/li&gt;
&lt;li&gt;触摸板正常&lt;/li&gt;
&lt;li&gt;睡眠和唤醒正常，合上盖子再打开也正常，我不知道白苹果是怎样的，但是我试了很多次，没发现问题。&lt;/li&gt;
&lt;li&gt;电池正常&lt;/li&gt;
&lt;li&gt;有线网卡正常&lt;/li&gt;
&lt;li&gt;亮度正常，但是不能用键盘调整，在设置里面可以调整（我得再去爪巴帖子了😓&lt;/li&gt;
&lt;li&gt;独显因为不能驱动，所以屏蔽&lt;/li&gt;
&lt;li&gt;蓝牙&lt;/li&gt;
&lt;li&gt;WiFi :(&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bios设置&#34;&gt;BIOS设置&lt;/h3&gt;
&lt;p&gt;HP的BIOS建议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关闭安全模式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其它品牌建议还要：设置为AHCI模式&lt;/p&gt;
&lt;p&gt;嗯~ o(&lt;em&gt;￣▽￣&lt;/em&gt;)o，有空再写，不着急。。。&lt;/p&gt;
&lt;h3 id=&#34;准备&#34;&gt;准备&lt;/h3&gt;
&lt;p&gt;在开始前，我们建议你准备一个最好大于8G的U盘、一台电脑(不熟练的人建议2台)、一个具有你Windows系统恢复介质的U盘(因为装黑苹果导致Windows挂掉的人不在少数)，一个用来备份的移动硬盘(如果你没有需要备份的文件请随意)。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;原版镜像，注意是原版的加工封装的OS镜像，带不带Clover引导无所谓，新手建议带上，那样就不用自己配置了！&lt;/li&gt;
&lt;li&gt;U盘烧写工具，有很多，我用的TransMac，所以建议使用TransMac。&lt;/li&gt;
&lt;li&gt;硬盘管理工具，这个当然是DG了！&lt;/li&gt;
&lt;li&gt;EFI启动引导项管理工具，推荐EasyUEFI或者UEFIBCD。&lt;/li&gt;
&lt;li&gt;强制性要求：主板必须支持UEFI，这篇文章是适用于UEFI启动的，如果不是的话，你看这篇文章也没意义。&lt;/li&gt;
&lt;li&gt;硬盘为GPT格式。&lt;/li&gt;
&lt;li&gt;给黑苹果的EFI分区一定要大于200M！！！&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;安装macos&#34;&gt;安装MacOS&lt;/h3&gt;
&lt;p&gt;开机按F9进入&lt;code&gt;Boot Manager&lt;/code&gt;引导管理，选择你制作的那个U盘，然后回车！&lt;/p&gt;
&lt;p&gt;然后进入Clover主菜单&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/clover/c003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;移动光标到&lt;code&gt;Boot OS X Install from ***&lt;/code&gt;回车,如果无法进入安装界面,需要打开啰嗦模式进行排错,不过新手可能看不懂，但是也要拍照，给知道的人帮忙看看。&lt;/p&gt;
&lt;h4 id=&#34;引导macos&#34;&gt;引导MacOS&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/clover/c004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;基本上就是图中的样子啦！稍等片刻。具体时间决定于你的配置，耐心等待一小会儿进入安装程序界面。&lt;/p&gt;
&lt;h4 id=&#34;语言选择&#34;&gt;语言选择&lt;/h4&gt;
&lt;p&gt;建议选择简体中文哦！😋&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/clover/c005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击下一步，出现&lt;code&gt;macOS实用工具&lt;/code&gt;界面,选择磁盘工具&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/clover/c006.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入磁盘工具之后，选择&lt;code&gt;显示所有设备&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/clover/c007.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择&lt;code&gt;你在Windows下事先创建好，准备给macos用的那个分区&lt;/code&gt;,点击&lt;code&gt;抹掉&lt;/code&gt;按钮,选择默认的&lt;code&gt;Mac OS扩展(日志型)&lt;/code&gt;,将名称修改为&lt;code&gt;你自己喜欢的名字即可&lt;/code&gt;,点击&lt;code&gt;抹掉&lt;/code&gt;按钮。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;之前专门强调了备份了的啊！！！千万注意！！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果这时候报错，是由于EFI分区尺寸小于200MB而引起的抹盘失败的错误，甚至可能会导致后面的安装失败！！！&lt;/p&gt;
&lt;h4 id=&#34;安装开始啦&#34;&gt;安装开始啦！&lt;/h4&gt;
&lt;p&gt;这个时候我们选择希望，哦不，是选择安装macOS&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/clover/c008.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入安装界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/clover/c009.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;下一步&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/clover/c010.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择继续，然后选择你才格式化了的硬盘。&lt;/p&gt;
&lt;p&gt;在这期间,它会把USB安装盘上的安装文件预复制到要安装的系统分区里,这个过程在HP暗影精灵3上它跑得飞快(我放在固态上了),数据复制完后,它会自动重启&lt;/p&gt;
&lt;p&gt;其实我感觉安装，和安装完了的设置，压根没必要写啥教程，因为你能进入这个界面的话，说明你的能力足够你一个人完成。&lt;/p&gt;
&lt;h4 id=&#34;设置向导&#34;&gt;设置向导&lt;/h4&gt;
&lt;p&gt;不多说废话了，也不放图，简单粗暴的列几条建议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先会让你选择国家，在这一步我选择中国！&lt;/li&gt;
&lt;li&gt;设置键盘，根据自己的习惯选择&lt;/li&gt;
&lt;li&gt;如果是新安装，建议不传输信息到这台Mac&lt;/li&gt;
&lt;li&gt;数据恢复，嗯，跳过吧&lt;/li&gt;
&lt;li&gt;Apple ID登录，建议进入系统后再登录&lt;/li&gt;
&lt;li&gt;创建用户，这一步很简单&lt;/li&gt;
&lt;li&gt;反正有啥要你同步的一律先不干，也不要连接到互联网，建议进入系统后再慢慢设置。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安装完成后&#34;&gt;安装完成后&lt;/h3&gt;
&lt;p&gt;千万别以为这样就完事儿了，Windows安装完之后都还需要联网安装更新呢，后面更艰巨的任务在等着你，小老弟🤣&lt;/p&gt;
&lt;h4 id=&#34;挂载efi分区&#34;&gt;挂载EFI分区&lt;/h4&gt;
&lt;p&gt;首先你肯定得把你U盘里的EFI文件弄到电脑上的EFI分区里去，如果你不愿意干这一步，那么你每次启动MacOS都将插上U盘。虽然我有一段时间这么干过，因为我觉得不插上U盘的时候，感觉MacOS系统就不存在了一样，要用的时候直接插上U盘即可！如果你想将U盘里的EFI复制到磁盘的EFI分区里，却苦于找不到看不见EFI分区，这个时候是该让&lt;code&gt;diskutil&lt;/code&gt;登场了。&lt;/p&gt;
&lt;p&gt;查看磁盘分区表：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;diskutil list
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;挂载磁盘EFI分区：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo diskutil mount &amp;lt;这里填你的分区，比如：disk0s1，具体的查看你的磁盘分区表&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;挂载U盘EFI分区：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo diskutil mount &amp;lt;这里填你的分区，比如：disk0s1，具体的查看你的磁盘分区表&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;打开Finder，注意后面有个&lt;code&gt;.&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;open .
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;左侧会显示挂载了两个EFI分区，将U盘EFI目录全部复制到磁盘的EFI分区即可。&lt;/p&gt;
&lt;h4 id=&#34;合并efi分区&#34;&gt;合并EFI分区&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;这里有一点需要注意&lt;/strong&gt;:如果之前安装过Windows系统的话,会存在EFI的目录,只是EFI的目录下面只有BOOT和Microsoft这两个目录,如果希望添加macOS的Clover引导的话,可以将USB的EFI分区里面的EFI目录下面的CLOVER复制到磁盘里的EFI目录下,也就是执行的是&lt;strong&gt;合并&lt;/strong&gt;的操作,让EFI同时支持WINDOWS和macOS的引导.千万不要全部复制,否则有可能造成EFI无法启动Windows.&lt;/p&gt;
&lt;h4 id=&#34;复制efi分区&#34;&gt;复制EFI分区&lt;/h4&gt;
&lt;p&gt;如果磁盘上的EFI分区里为空的,可以直接将USB的EFI分区下面的EFI目录直接复制到磁盘上的EFI分区里.&lt;/p&gt;
&lt;h4 id=&#34;windows下的骚操作&#34;&gt;Windows下的骚操作&lt;/h4&gt;
&lt;h5 id=&#34;挂载efi分区-1&#34;&gt;挂载EFI分区&lt;/h5&gt;
&lt;p&gt;Windows操作系统下面,打开&lt;code&gt;cmd&lt;/code&gt;窗口,输入命令:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;diskpart
list disk           # 磁盘列表
select disk n       # 选择EFI分区所在的磁盘，n为磁盘号
list partition      # 磁盘分区列表
select partition n  # 选择EFI分区，n为EFI分区号
set id=&amp;quot;ebd0a0a2-b9e5-4433-87c0-68b6b72699c7&amp;quot;	# 设置为EFI分区
assign letter=X     # x为EFI分区盘符
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;您可以重复输入命令同时挂载USB的EFI分区和磁盘的EFI分区
打开资源管理器，会出现一个盘符为X的磁盘，格式化为fat32格式,将USB的EFI分区下面的EFI目录复制到安装磁盘的EFI分区下。&lt;/p&gt;
&lt;h5 id=&#34;合并efi分区-1&#34;&gt;合并EFI分区&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;这里有一点需要注意&lt;/strong&gt;:如果之前安装过Windows系统的话,会存在EFI的目录,只是EFI的目录下面只有BOOT和Microsoft这两个目录,如果希望添加macOS的Clover引导的话,可以将USB的EFI分区里面的EFI目录下面的CLOVER复制到磁盘里的EFI目录下,也就是执行的是&lt;strong&gt;合并&lt;/strong&gt;的操作,让EFI同时支持WINDOWS和macOS的引导.千万不要全部复制,否则有可能造成EFI无法启动Windows.&lt;/p&gt;
&lt;h5 id=&#34;复制efi分区-1&#34;&gt;复制EFI分区&lt;/h5&gt;
&lt;p&gt;如果磁盘上的EFI分区里为空的,可以直接将USB的EFI分区下面的EFI目录直接复制到磁盘上的EFI分区里.&lt;/p&gt;
&lt;h5 id=&#34;利用easyuefi来挂载&#34;&gt;利用EasyUEFI来挂载&lt;/h5&gt;
&lt;p&gt;什么?看不懂这些指令，怕出错？我懂你！你可以在Windows系统下利用诸如EasyUEFI等工具来操作。&lt;/p&gt;
&lt;p&gt;我们打开下载好的diskgenius工具&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/clover/c011.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;EFI分区的文件一般是这样的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/clover/c012.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;打开EsayUEFI，点击中间的绿色加号，进入添加引导项的页面，选择&amp;quot;Linux或其它操作系统&amp;quot;，并且在Description这一项写入这个引导项的名字(名字可以随便乱取，但是别忘记！)。然后在下面的硬盘选择区域选择一个你自己新建的ESP分区，然后点击下方的Browse浏览文件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/clover/c013.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后选择自己配置好的EFI中的&lt;strong&gt;CLOVERx64.efi&lt;/strong&gt;这个文件以完成添加。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/clover/c014.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后回到工具的首页，将该引导项置顶(置不置顶看你自己选择了，想要开机可以选择双系统就置顶，想要开机直接进入Windows，就放在Windows Boot Manager后面)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/clover/c015.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;到这里就大功告成啦！&lt;/p&gt;
&lt;h5 id=&#34;easyuefi报错&#34;&gt;EasyUEFI报错&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;这个可能是因为BIOS设置问题，如果加了BIOS密码，会报这个错误。还有可能就是EFI分区没有正常挂载的原因。遇到这个问题，有的时候照样能够添加进去引导项，但是无法移动引导项的顺序。这样的话，你可以先添加，再进入BIOS设置引导顺序，或者是直接在BIOS里面添加启动项。如果EasyUEFI完全没有作用，你可以尝试进入PE卸载ESP分区重新启动或是先备份系统的EFI分区，然后使用DG将原本的EFI分区删除，重建以后重启即可。&lt;/li&gt;
&lt;li&gt;可能是当前版本的EasyUEFI出现了问题、或者是你下的有问题、或者是当前版本与你的电脑不兼容&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;利用bootice&#34;&gt;利用BOOTICE&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;打开BOOTICE软件,选择&lt;code&gt;物理磁盘&lt;/code&gt;,选择欲操作的目标磁盘,点击&lt;code&gt;分区管理&lt;/code&gt;,弹出分区管理的窗口,点击&lt;code&gt;分配盘符&lt;/code&gt;,为&lt;code&gt;ESP&lt;/code&gt;分区分配一个盘符,点击确定&lt;/li&gt;
&lt;li&gt;选择&lt;code&gt;UEFI&lt;/code&gt;,点击&lt;code&gt;修改启动序列&lt;/code&gt;,点击&lt;code&gt;添加&lt;/code&gt;按钮,菜单标题填写:&lt;code&gt;CLOVER&lt;/code&gt;,选择&lt;code&gt;启动文件&lt;/code&gt;,在打开的窗口里选择&lt;code&gt;ESP&lt;/code&gt;分区下的目录&lt;code&gt;\EFI\CLOVER\CLOVERX64.EFI&lt;/code&gt;,点击&lt;code&gt;保存当前启动项设置&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;下载链接&#34;&gt;下载链接&lt;/h2&gt;
&lt;p&gt;迅雷离线下载：&lt;a href=&#34;https://mirrors.dtops.cc/iso/MacOS/daliansky_macos/macOS%20Mojave%2010.14.3%2818D42%29%20Installer%20with%20Clover%204859.dmg&#34;&gt;点击下载&lt;/a&gt;感谢&lt;code&gt;@难忘情怀&lt;/code&gt;提供下载资源&lt;/p&gt;
&lt;p&gt;http下载链接：&lt;a href=&#34;https://mirrors.dtops.cc/iso/MacOS/daliansky_macos/&#34;&gt;点击下载&lt;/a&gt;感谢&lt;code&gt;@难忘情怀&lt;/code&gt;提供下载资源&lt;/p&gt;
&lt;p&gt;百度网盘：&lt;a href=&#34;https://pan.baidu.com/s/1mEqQKm_klaSOB5KhqpobQA&#34;&gt;点击链接&lt;/a&gt; 接头暗号：s68r
MD5 (macOS Mojave 10.14.3(18D42) Installer with Clover 4859.dmg) = 450c55e5c5d3f4bfae6bb55ff2a33aea&lt;/p&gt;
&lt;h3 id=&#34;efi下载更新&#34;&gt;EFI下载/更新&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/besscroft/HackintoshClover&#34;&gt;点击这里&lt;/a&gt;进入魔法门&lt;/p&gt;
&lt;h2 id=&#34;特别鸣谢&#34;&gt;特别鸣谢&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;@原味菠萝&lt;/code&gt; &lt;code&gt;@黑果小兵&lt;/code&gt; 为本教程提供的的大力支持！&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/" term="黑苹果" label="黑苹果" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/%E6%9A%97%E5%BD%B1%E7%B2%BE%E7%81%B5/" term="暗影精灵" label="暗影精灵" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Hexo博客搭建</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2019/hexo/" />
            <id>https://blog.besscroft.com/tech/2019/hexo/</id>
            <updated>2021-08-03T17:27:08&#43;08:00</updated>
            <published>2019-03-12T12:07:38&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">写在前面 为什么网上这么多教程，我还要在这里写下一篇呢？主要是总结大家的经验和自己的操……</summary>
            
                <content type="html">&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/hexo/h001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;写在前面&#34;&gt;写在前面&lt;/h2&gt;
&lt;p&gt;为什么网上这么多教程，我还要在这里写下一篇呢？主要是总结大家的经验和自己的操作过程，一来是方便自己看，二来是给大家提供一些参考。Google一下，你可以找到几乎所有你想看到的，但是能否为你带来实质性的解决方案，可能也是需要花时间的。而且，跟别人做一样的操作，可能就刚好是你出了问题。。。没错，说的就是我自己。写这篇文章，仅此以纪念从WordPress转到Hexo。&lt;/p&gt;
&lt;h2 id=&#34;博客搭建&#34;&gt;博客搭建&lt;/h2&gt;
&lt;h3 id=&#34;适合哪些人呢&#34;&gt;适合哪些人呢？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;平常喜欢写作，尤其是Blog的人。有不少人通过Hexo发表文学类作品呢。&lt;/li&gt;
&lt;li&gt;不害怕编程，且爱折腾的人&lt;/li&gt;
&lt;li&gt;了解和能够使用版本控制Git和GitHub的人&lt;/li&gt;
&lt;li&gt;熟悉基本的MarkDown语法，能够利用MarkDown和Typora写作的人&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;准备工作&#34;&gt;准备工作&lt;/h3&gt;
&lt;h4 id=&#34;安装环境&#34;&gt;安装环境&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js&lt;/a&gt;下载，并安装到您的计算机上。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;下载，并安装到您的计算机上。&lt;/p&gt;
&lt;p&gt;不会下载安装？没关系，点击链接去它们的官网，有非常详细的安装教程。或者，我也可以抽时间写，但是感觉这样的文章质量并不高啊！&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;安装hexo&#34;&gt;安装Hexo&lt;/h4&gt;
&lt;p&gt;这时候我们需要利用npm来安装了。(直接打开Git Bash，或者任意位置鼠标右键选择打开)&lt;/p&gt;
&lt;p&gt;运行如下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;npm install -g hexo-cli
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果报错，出现&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm ERR! registry error parsing json
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;的话，可能需要设置npm代理，执行如下命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm config set registry http://registry.cnpmjs.org
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后删除刚才安装的npm目录，&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo:command not found
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;重新执行第一条命令安装Hexo，不过，这第一步都能报错，脸是有多黑啊！！！&lt;/p&gt;
&lt;h4 id=&#34;初始化hexo&#34;&gt;初始化Hexo&lt;/h4&gt;
&lt;p&gt;在命令行接着运行以下命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hexo init &amp;lt;folder&amp;gt;    //初始化hexo文件夹,hexo会在目标文件夹建立网站所需要的所有文件
$ cd &amp;lt;folder&amp;gt;      
$ npm install    //安装依赖包
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里的&lt;folder&gt;是你自己指定的文件夹，比如说我的就是这样：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hexo init G:hexo
$ cd G:hexo
$ npm install
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样说你应该更容易理解，这就相当于选择安装软件的位置。&lt;/p&gt;
&lt;h4 id=&#34;本地查看&#34;&gt;本地查看&lt;/h4&gt;
&lt;p&gt;新建完成后，指定文件夹的目录如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.
├── _config.yml
├── package.json
├── scaffolds
├── source
|   ├── _drafts
|   └── _posts
└── themes
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在命令行执行如下命令，然后打开你的浏览器输入http://localhost:4000/即可查看。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;hexo g    &lt;span class=&#34;c1&#34;&gt;#等同于hexo generate，生成静态文件到public文件夹&lt;/span&gt;
hexo s    &lt;span class=&#34;c1&#34;&gt;# 等同于hexo server，在本地服务器渲染运行&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;到这一步，你的本地博客基本上就搭建起来了。我第一次搭建成功时，简直是兴奋的飞起了!&lt;/p&gt;
&lt;h4 id=&#34;注意事项详解&#34;&gt;注意事项详解&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;hexo相关命令均在&lt;strong&gt;站点目录&lt;/strong&gt;下，用&lt;strong&gt;Git Bash&lt;/strong&gt;运行。&lt;/li&gt;
&lt;li&gt;_config.yml是站点的配置文件，用来存放网站的配置信息，可以在此配置大部分的参数。路径为：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;folder&amp;gt;\_config.yml
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;也就是你的站点的根目录下。&lt;/li&gt;
&lt;li&gt;还有个叫_config.yml的，是你的主题配置文件，千万别弄混了。路径为：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;folder&amp;gt;\themes\&amp;lt;主题文件夹&amp;gt;\_config.yml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;​	就存放在你的主题根目录下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scaffolds是模板文件夹。当你新建文章的时候，Hexo 会根据 scaffold 来建立文件。&lt;/li&gt;
&lt;li&gt;source是资源文件夹，是存放用户资源的地方。&lt;/li&gt;
&lt;li&gt;themes，没错，就是存放主题的文件夹，今后你可能要无数次的打开它。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;git&#34;&gt;Git&lt;/h4&gt;
&lt;p&gt;将项目部署上去，你需要安装：&lt;code&gt;hexo-deployer-git&lt;/code&gt;插件，不然会报错。在git运行如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ npm install hexo-deployer-git --save
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;网站搭建实施方案&#34;&gt;网站搭建实施方案&lt;/h3&gt;
&lt;h4 id=&#34;githubpages&#34;&gt;GithubPages&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建一个&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;账号，如果你有一个更好。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建一个仓库，名字必须为：&amp;lt;Github账号名称&amp;gt;.github.io&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/hexo/hexo001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;图中报错的细节就不要在意了，这个仓库只能创建一个，当时我创建的时候没有截图。为了方便理解，专门去打开了这个页面截了一张图。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将本地Hexo博客推送到GithubPages&lt;/p&gt;
&lt;p&gt;3.1.安装hexo-deployer-git插件。在命令行（即Git Bash）运行以下命令即可：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ npm install hexo-deployer-git --save
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;3.2.添加SSH Key&lt;/p&gt;
&lt;p&gt;3.2.1.创建一个SSH Key。在命令行输入一下命令，密码为空，敲击三下回车：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ssh-keygen -t rsa -C &amp;quot;邮箱地址&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;3.2.2.把公钥添加到GitHub。复制密钥文件内容，路径形如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;C:\Users\Administrator(也就是你的账户名)\.ssh\id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/hexo/hexo002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后粘贴到&lt;a href=&#34;https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fsettings%2Fkeys&#34;&gt;SSH keys&lt;/a&gt;即可。&lt;/p&gt;
&lt;p&gt;3.2.3.测试是否添加成功。在命令行输入以下命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ssh -T git@github.com
$ yes
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回“You&#39;re successfully authenticated”,就说明你添加成功啦！&lt;/p&gt;
&lt;p&gt;3.3.修改你的站点配置文件_config.yml(前面说过了在你的站点目录下)。文件末尾修改为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Deployment
## Docs: https://hexo.io/docs/deployment.html
deploy:
  type: git
  repo: git@github.com:&amp;lt;Github账号名称&amp;gt;/&amp;lt;Github账号名称&amp;gt;.github.io.git
  branch: master
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;仓库地址填写ssh地址，比如我的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deploy:
- type: git
  repo: git@github.com:besscroft/besscroft.github.io.git
  barnch: master
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;3.4.然后我们要推送到GitHubPages。在命令行(即Git Bash)，输入以下命令，注意，这个命令请记下来。以后你会经常用到的。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hexo g	#等同于hexo generate，生成静态文件到public文件夹
$ hexo d	# 等于hexo deploy 即，部署，可与hexo g合并为 hexo d -g
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果返回：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;INFO Deploy done: git
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;即推送成功啦！然后稍等片刻，浏览器访问地址：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://&amp;lt;Github账号名称&amp;gt;.github.io
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后，嗯嗯~ o(&lt;em&gt;￣▽￣&lt;/em&gt;)o，到这里就成功了啦，是不是很开心？&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;githubpages--域名&#34;&gt;GithubPages + 域名&lt;/h4&gt;
&lt;p&gt;这一步最重要的就是买域名了，买个域名先！&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;打开你的域名提供商的控制台，设置域名解析。&lt;/p&gt;
&lt;p&gt;1.1.解析类型选择为CNAME；&lt;/p&gt;
&lt;p&gt;1.2.主机记录，就是你的域名前缀，填写www即可；&lt;/p&gt;
&lt;p&gt;1.3.记录值去复制你的&amp;lt;Github账号名称&amp;gt;.github.io填上去；&lt;/p&gt;
&lt;p&gt;1.4.线路解析，就默认的就行了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;仓库设置&lt;/p&gt;
&lt;p&gt;2.1.打开你的博客仓库设置，都到这一步了别告诉我你不知道在哪儿。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/hexo/hexo003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后再该页面中往下滑，找到图中的位置！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/hexo/hexo004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我相信你看到页面上的提示，能够非常容易地添加自定义域名并开启 https 的！&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;githubpages--codingpages--域名&#34;&gt;GithubPages + CodingPages + 域名&lt;/h4&gt;
&lt;p&gt;你还可以在CodingPages上也搭建仓库，推送到仓库的时候2个仓库是同步推送的呢！&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建你的&lt;a href=&#34;https://coding.net/&#34;&gt;Coding&lt;/a&gt;账号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一样要创建一个用来托管的仓库，而且仓库名为:&amp;lt;Coding账号名称&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将你的Hexo博客给推送到CodingPages&lt;/p&gt;
&lt;p&gt;3.1.之前大家在创建GitHubPages时，我们是已经做过生成公钥这一步了。这时候找到它，复制内容，并粘贴到Coding的&lt;a href=&#34;https://dev.tencent.com/user/account/setting/keys&#34;&gt;新增公钥&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;3.2.然后我们来测试以下成功了没有。在命令行依次输入如下命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ssh -T git@git.coding.net
$ yes
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回了“You&#39;ve successfully authenticated”，就表示已经成功了！&lt;/p&gt;
&lt;p&gt;3.3.修改你的站点配置文件_config.yml(前面说过了在你的站点目录下)。文件末尾修改为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;type: git
repo: git@git.dev.tencent.com:&amp;lt;Coding账号名称&amp;gt;/&amp;lt;Coding账号名称&amp;gt;.git
branch: master
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;按照之前的GitHub添加一样，在这里把coding的也添加上去，直接加到后面即可！&lt;/p&gt;
&lt;p&gt;4.4.然后推送到你的Coding仓库，没错，又是这两条指令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hexo g	# 等于hexo generate # 生成静态文件
$ hexo d	# 等于hexo deploy 即，部署，可与hexo g合并为 hexo d -g
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入刚才创建的Coding项目，进入代码页面，你会看到有一项叫Pages服务，然后点击“一键开启静态Pages”。稍等片刻，美味就快好。。。不对，稍等片刻CodingPages即可部署成功！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;域名解析&lt;/p&gt;
&lt;p&gt;5.1.解析类型选择为CNAME；&lt;/p&gt;
&lt;p&gt;5.2.主机记录，就是你的域名前缀，填写www即可；&lt;/p&gt;
&lt;p&gt;5.3.记录值去复制你的&amp;lt;Coding账号名称&amp;gt;.coding.me填上去；&lt;/p&gt;
&lt;p&gt;5.4.线路解析，就默认的就行了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在你刚才开启Pages服务的地方，点击设置，进入它的设置页绑定你的自定义域名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最后，到这里基本上就大功告成啦！~ o(&lt;em&gt;￣▽￣&lt;/em&gt;)o&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;配置解析注意事项&#34;&gt;配置解析注意事项&lt;/h4&gt;
&lt;p&gt;嗯，为什么要在两个托管平台都搭建起来呢？原因很简单：要实现国内外访问不同的服务，所以要分别托管并且分别设置解析。无论是腾讯云还是阿里云，他们的解析服务都能够很好地区分国内外的节点。我们需要将国内的CNAME设置到pages.coding.me，将国外的CNAME设置到pages.github.io，然后，魔法就出现了！&lt;/p&gt;
&lt;p&gt;如果你不会的话，请参考图片中的设置即可！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/hexo/hexo005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;别跟我说这样不行，难道你平常逛的淘宝，就只有一台服务器嘛？🙃&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/hexo/hexo006.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以去看看阿里的部分云解析的&lt;a href=&#34;https://help.aliyun.com/document_detail/29730.html?spm=a2c4g.11186623.6.575.4ea05b9clns2hv&#34;&gt;文档&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;hexo命令行常用指令&#34;&gt;Hexo命令行常用指令&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;hexo help	#查看帮助
hexo init	#初始化一个目录
hexo new &amp;quot;postName&amp;quot;		#新建文章
hexo new page &amp;quot;pageName&amp;quot; 	#新建页面
hexo generate 	#生成网页，可以在 public 目录查看整个网站的文件
hexo server 	#本地预览，&#39;Ctrl+C&#39;关闭
hexo deploy 	#部署.deploy目录
hexo clean 		# 清除缓存文件 (db.json) 和已生成的静态文件 (public)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;简写：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo n == hexo new
hexo g == hexo generate
hexo s == hexo server
hexo d == hexo deploy
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你采用了静态资源压缩的话，每次同步到服务器就要多一条指令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo g
gulp     //没有用静态资源压缩，同步时不需要中间这条指令
hexo d
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;部署成功时会返回这个：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info] Deploy done: git
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行&lt;code&gt;hexo clean &amp;amp;&amp;amp; hexo deploy&lt;/code&gt;命令。前者清除站点文件，后者重新生成站点文件并将之推送到指定的库分支。（如果你的Hexo是局部安装，则需要执行&lt;code&gt;./node_modules/.bin/hexo clean &amp;amp;&amp;amp; ./node_modules/.bin/hexo deploy&lt;/code&gt;。）&lt;/p&gt;
&lt;p&gt;登入 &lt;a href=&#34;https://github.com/&#34;&gt;Github&lt;/a&gt;/&lt;a href=&#34;https://bitbucket.org/&#34;&gt;BitBucket&lt;/a&gt;/&lt;a href=&#34;https://about.gitlab.com/&#34;&gt;Gitlab&lt;/a&gt;，请在库设置（Repository Settings）中将默认分支设置为&lt;code&gt;_config.yml&lt;/code&gt;配置中的分支名称。稍等片刻，你的站点就会显示在你的Github Pages中啦！&lt;/p&gt;
&lt;p&gt;如果你是才接触，那么我建议你熟悉之后，再将Hexo部署到其它托管平台！比如👉&lt;a href=&#34;https://dashboard.heroku.com&#34;&gt;Heroku&lt;/a&gt;（蛮好用的）、👉&lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netlify&lt;/a&gt;、👉&lt;a href=&#34;https://rsync.samba.org/&#34;&gt;Rsync&lt;/a&gt;、👉&lt;a href=&#34;https://www.openshift.com/&#34;&gt;OpenShift&lt;/a&gt;、等等。具体的可以去阅读👉&lt;a href=&#34;https://hexo.io/zh-cn/docs/deployment&#34;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;hexo使用&#34;&gt;Hexo使用&lt;/h3&gt;
&lt;h4 id=&#34;目录结构&#34;&gt;目录结构&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;.
├── .deploy       #需要部署的文件
├── node_modules  #Hexo插件
├── public        #生成的静态网页文件
├── scaffolds     #模板
├── source        #博客正文和其他源文件，404、favicon、CNAME 都应该放在这里
|   ├── _drafts   #草稿
|   └── _posts    #文章
├── themes        #主题
├── _config.yml   #全局配置文件
└── package.json
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;全局配置_configyml&#34;&gt;全局配置_config.yml&lt;/h4&gt;
&lt;p&gt;请看我的这篇👉&lt;a href=&#34;http://blog.52bess.com/zhandian.html#more&#34;&gt;文章&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;最后&lt;/h2&gt;
&lt;p&gt;记得平时多做好备份，这是个好习惯。万一出现文件误删，丢失等，甚至GitHub你在某一天无法访问。&lt;/p&gt;
&lt;p&gt;我的博客的评论系统是&lt;a href=&#34;https://valine.js.org/&#34;&gt;Valine&lt;/a&gt;我觉得还可以吧，其它的如：来比利、哦不是&lt;a href=&#34;https://www.livere.com/&#34;&gt;来必力&lt;/a&gt;、&lt;a href=&#34;http://changyan.kuaizhan.com/&#34;&gt;畅言&lt;/a&gt;等都是不错的。由于我只用了一个，优缺点就不说了，但是感觉Valine的UI更符合我的胃口。&lt;/p&gt;
&lt;p&gt;博客右下角的被大家称为萌萌哒，也就是二次元看板娘，是使用&lt;a href=&#34;https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md&#34;&gt;live-2d&lt;/a&gt;实现的。&lt;/p&gt;
&lt;p&gt;如果你的Hexo搭建成功，不妨跟大家分享以下你的快乐呢！&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/hexo/" term="Hexo" label="Hexo" />
                            
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/github/" term="GitHub" label="GitHub" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">浅谈：强大的Hexo</title>
            <link rel="alternate" type="text/html" href="https://blog.besscroft.com/tech/2019/my-first-post/" />
            <id>https://blog.besscroft.com/tech/2019/my-first-post/</id>
            <updated>2021-08-03T17:28:52&#43;08:00</updated>
            <published>2019-03-10T15:00:53&#43;08:00</published>
            <author>
                    <name>Bess Croft</name>
                    <uri>https://blog.besscroft.com/</uri>
                    <email>besscroft@foxmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">什么是 Hexo？ Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或……</summary>
            
                <content type="html">&lt;p&gt;&lt;img src=&#34;https://blog.besscroft.com/images/tech/2019/hexo/h001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;什么是-hexo&#34;&gt;什么是 Hexo？&lt;/h3&gt;
&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/p&gt;
&lt;h3 id=&#34;为什么要使用hexo&#34;&gt;为什么要使用Hexo？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;买个服务器太贵，目前的服务器在阿里云，这配置，学生价便宜，那么以后呢？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;学习一下新东西，折腾折腾。主要还是学一学Git和GitHub的使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;怎么搭建的&#34;&gt;怎么搭建的？&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;GithubPages&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GithubPages + 域名&lt;/p&gt;
&lt;p&gt;这个方案当然更好，好的域名方便记忆，买个便宜点的域名第一年也就10来块钱，一年换一个经济便宜，如果想长期做，那就一次性来个5年。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CodingPages + 域名&lt;/p&gt;
&lt;p&gt;GithubPages 在国内较慢，百度不收录，而CodingPages 在国内外都比较快。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GithubPages + CodingPages + 域名&lt;/p&gt;
&lt;p&gt;嗯。我采用的是方案四，这样可以保证更多的不同网络环境下都能访问，即使可能根本没人看。。。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;难吗&#34;&gt;难吗？&lt;/h3&gt;
&lt;p&gt;这个我不好说，毕竟每一个人不一样。但是我可以保证的是，只要你愿意折腾，哪怕你没有代码基础，你也能搭建出来。我目前接触了2种搭建博客的方式，第一种是阿里云买服务器，基于CentOS搭建的WordPress，是动态的。第二种就是这个由Hexo驱动的静态了，但是省钱啊，每年只用出域名的钱，你说香不香，但是优化还是要花费一番功夫的。当然第二种更简单。。。&lt;/p&gt;
&lt;p&gt;自己买服务器搭建你可能要接触到CentOS、Apache、PHP、MySql、WordPress等等。使用Pages的话，可能要接触Node.js、Git、GitHub、Hexo。最好还是有一点前端基础，并不是说没有就弄不出来了，有的话可以节省你很多时间，更多的时候可能不至于让你的心态爆炸。&lt;/p&gt;
&lt;h3 id=&#34;最后&#34;&gt;最后&lt;/h3&gt;
&lt;p&gt;Hexo 提供了快速方便的一键部署功能，让你只需要一条命令就能将网站部署到服务器上。如果有人愿意看的话，我会在后面的文章中详细讲述我是如何搭建的，从零到搭建完成的每一个详细步骤，争取让不懂的你，也能拥有一个自己的博客！还会总结一些我在使用过程中遇到的坑，以免大家掉进去。&lt;/p&gt;
</content>
            
            
            
                
                
                
                    
                    
                    
                
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/categories/%E6%8A%80%E6%9C%AF/" term="技术" label="技术" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://blog.besscroft.com/tags/hello-hexo/" term="Hello Hexo" label="Hello Hexo" />
                            
                        
                    
                
            
        </entry>
    
</feed>
